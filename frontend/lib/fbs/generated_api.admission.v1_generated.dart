// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library api.admission.v1;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;

import './generated_api.admission.v1.admission_response__generated.dart' as api_admission_v1_admission_response_;
import './generated_api.authentication.v1_generated.dart' as api_authentication_v1;
import './generated_api.authentication.v1.user_info__generated.dart' as api_authentication_v1_user_info_;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

import './generated_api.authentication.v1.user_info__generated.dart' as api_authentication_v1_user_info_;
import './generated_api.authentication.v1_generated.dart' as api_authentication_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

class AdmissionRequest {
  AdmissionRequest._(this._bc, this._bcOffset);
  factory AdmissionRequest(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<AdmissionRequest> reader = _AdmissionRequestReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get uid => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  apimachinery_pkg_apis_meta_v1.GroupVersionKind? get kind => apimachinery_pkg_apis_meta_v1.GroupVersionKind.reader.vTableGetNullable(_bc, _bcOffset, 6);
  apimachinery_pkg_apis_meta_v1.GroupVersionResource? get resource => apimachinery_pkg_apis_meta_v1.GroupVersionResource.reader.vTableGetNullable(_bc, _bcOffset, 8);
  String? get subResource => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  apimachinery_pkg_apis_meta_v1.GroupVersionKind? get requestKind => apimachinery_pkg_apis_meta_v1.GroupVersionKind.reader.vTableGetNullable(_bc, _bcOffset, 12);
  apimachinery_pkg_apis_meta_v1.GroupVersionResource? get requestResource => apimachinery_pkg_apis_meta_v1.GroupVersionResource.reader.vTableGetNullable(_bc, _bcOffset, 14);
  String? get requestSubResource => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 16);
  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 18);
  String? get namespace => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 20);
  String? get operation => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 22);
  api_authentication_v1.UserInfo? get userInfo => api_authentication_v1.UserInfo.reader.vTableGetNullable(_bc, _bcOffset, 24);
  apimachinery_pkg_runtime.RawExtension? get object => apimachinery_pkg_runtime.RawExtension.reader.vTableGetNullable(_bc, _bcOffset, 26);
  apimachinery_pkg_runtime.RawExtension? get oldObject => apimachinery_pkg_runtime.RawExtension.reader.vTableGetNullable(_bc, _bcOffset, 28);
  bool get dryRun => const fb.BoolReader().vTableGet(_bc, _bcOffset, 30, false);
  apimachinery_pkg_runtime.RawExtension? get options => apimachinery_pkg_runtime.RawExtension.reader.vTableGetNullable(_bc, _bcOffset, 32);

  @override
  String toString() {
    return 'AdmissionRequest{uid: ${uid}, kind: ${kind}, resource: ${resource}, subResource: ${subResource}, requestKind: ${requestKind}, requestResource: ${requestResource}, requestSubResource: ${requestSubResource}, name: ${name}, namespace: ${namespace}, operation: ${operation}, userInfo: ${userInfo}, object: ${object}, oldObject: ${oldObject}, dryRun: ${dryRun}, options: ${options}}';
  }
}

class _AdmissionRequestReader extends fb.TableReader<AdmissionRequest> {
  const _AdmissionRequestReader();

  @override
  AdmissionRequest createObject(fb.BufferContext bc, int offset) => 
    AdmissionRequest._(bc, offset);
}

class AdmissionRequestBuilder {
  AdmissionRequestBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(15);
  }

  int addUidOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addKindOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addResourceOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addSubResourceOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addRequestKindOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addRequestResourceOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addRequestSubResourceOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }
  int addNameOffset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }
  int addNamespaceOffset(int? offset) {
    fbBuilder.addOffset(8, offset);
    return fbBuilder.offset;
  }
  int addOperationOffset(int? offset) {
    fbBuilder.addOffset(9, offset);
    return fbBuilder.offset;
  }
  int addUserInfoOffset(int? offset) {
    fbBuilder.addOffset(10, offset);
    return fbBuilder.offset;
  }
  int addObjectOffset(int? offset) {
    fbBuilder.addOffset(11, offset);
    return fbBuilder.offset;
  }
  int addOldObjectOffset(int? offset) {
    fbBuilder.addOffset(12, offset);
    return fbBuilder.offset;
  }
  int addDryRun(bool? dryRun) {
    fbBuilder.addBool(13, dryRun);
    return fbBuilder.offset;
  }
  int addOptionsOffset(int? offset) {
    fbBuilder.addOffset(14, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class AdmissionRequestObjectBuilder extends fb.ObjectBuilder {
  final String? _uid;
  final apimachinery_pkg_apis_meta_v1.GroupVersionKindObjectBuilder? _kind;
  final apimachinery_pkg_apis_meta_v1.GroupVersionResourceObjectBuilder? _resource;
  final String? _subResource;
  final apimachinery_pkg_apis_meta_v1.GroupVersionKindObjectBuilder? _requestKind;
  final apimachinery_pkg_apis_meta_v1.GroupVersionResourceObjectBuilder? _requestResource;
  final String? _requestSubResource;
  final String? _name;
  final String? _namespace;
  final String? _operation;
  final api_authentication_v1.UserInfoObjectBuilder? _userInfo;
  final apimachinery_pkg_runtime.RawExtensionObjectBuilder? _object;
  final apimachinery_pkg_runtime.RawExtensionObjectBuilder? _oldObject;
  final bool? _dryRun;
  final apimachinery_pkg_runtime.RawExtensionObjectBuilder? _options;

  AdmissionRequestObjectBuilder({
    String? uid,
    apimachinery_pkg_apis_meta_v1.GroupVersionKindObjectBuilder? kind,
    apimachinery_pkg_apis_meta_v1.GroupVersionResourceObjectBuilder? resource,
    String? subResource,
    apimachinery_pkg_apis_meta_v1.GroupVersionKindObjectBuilder? requestKind,
    apimachinery_pkg_apis_meta_v1.GroupVersionResourceObjectBuilder? requestResource,
    String? requestSubResource,
    String? name,
    String? namespace,
    String? operation,
    api_authentication_v1.UserInfoObjectBuilder? userInfo,
    apimachinery_pkg_runtime.RawExtensionObjectBuilder? object,
    apimachinery_pkg_runtime.RawExtensionObjectBuilder? oldObject,
    bool? dryRun,
    apimachinery_pkg_runtime.RawExtensionObjectBuilder? options,
  })
      : _uid = uid,
        _kind = kind,
        _resource = resource,
        _subResource = subResource,
        _requestKind = requestKind,
        _requestResource = requestResource,
        _requestSubResource = requestSubResource,
        _name = name,
        _namespace = namespace,
        _operation = operation,
        _userInfo = userInfo,
        _object = object,
        _oldObject = oldObject,
        _dryRun = dryRun,
        _options = options;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? uidOffset = _uid == null ? null
        : fbBuilder.writeString(_uid!);
    final int? kindOffset = _kind?.getOrCreateOffset(fbBuilder);
    final int? resourceOffset = _resource?.getOrCreateOffset(fbBuilder);
    final int? subResourceOffset = _subResource == null ? null
        : fbBuilder.writeString(_subResource!);
    final int? requestKindOffset = _requestKind?.getOrCreateOffset(fbBuilder);
    final int? requestResourceOffset = _requestResource?.getOrCreateOffset(fbBuilder);
    final int? requestSubResourceOffset = _requestSubResource == null ? null
        : fbBuilder.writeString(_requestSubResource!);
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? namespaceOffset = _namespace == null ? null
        : fbBuilder.writeString(_namespace!);
    final int? operationOffset = _operation == null ? null
        : fbBuilder.writeString(_operation!);
    final int? userInfoOffset = _userInfo?.getOrCreateOffset(fbBuilder);
    final int? objectOffset = _object?.getOrCreateOffset(fbBuilder);
    final int? oldObjectOffset = _oldObject?.getOrCreateOffset(fbBuilder);
    final int? optionsOffset = _options?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(15);
    fbBuilder.addOffset(0, uidOffset);
    fbBuilder.addOffset(1, kindOffset);
    fbBuilder.addOffset(2, resourceOffset);
    fbBuilder.addOffset(3, subResourceOffset);
    fbBuilder.addOffset(4, requestKindOffset);
    fbBuilder.addOffset(5, requestResourceOffset);
    fbBuilder.addOffset(6, requestSubResourceOffset);
    fbBuilder.addOffset(7, nameOffset);
    fbBuilder.addOffset(8, namespaceOffset);
    fbBuilder.addOffset(9, operationOffset);
    fbBuilder.addOffset(10, userInfoOffset);
    fbBuilder.addOffset(11, objectOffset);
    fbBuilder.addOffset(12, oldObjectOffset);
    fbBuilder.addBool(13, _dryRun);
    fbBuilder.addOffset(14, optionsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class AdmissionResponse {
  AdmissionResponse._(this._bc, this._bcOffset);
  factory AdmissionResponse(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<AdmissionResponse> reader = _AdmissionResponseReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get uid => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  bool get allowed => const fb.BoolReader().vTableGet(_bc, _bcOffset, 6, false);
  apimachinery_pkg_apis_meta_v1.Status? get status => apimachinery_pkg_apis_meta_v1.Status.reader.vTableGetNullable(_bc, _bcOffset, 8);
  List<int>? get patch => const fb.Uint8ListReader().vTableGetNullable(_bc, _bcOffset, 10);
  String? get patchType => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  List<api_admission_v1_admission_response_.AuditAnnotationsEntry>? get auditAnnotations => const fb.ListReader<api_admission_v1_admission_response_.AuditAnnotationsEntry>(api_admission_v1_admission_response_.AuditAnnotationsEntry.reader).vTableGetNullable(_bc, _bcOffset, 14);
  List<String>? get warnings => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 16);

  @override
  String toString() {
    return 'AdmissionResponse{uid: ${uid}, allowed: ${allowed}, status: ${status}, patch: ${patch}, patchType: ${patchType}, auditAnnotations: ${auditAnnotations}, warnings: ${warnings}}';
  }
}

class _AdmissionResponseReader extends fb.TableReader<AdmissionResponse> {
  const _AdmissionResponseReader();

  @override
  AdmissionResponse createObject(fb.BufferContext bc, int offset) => 
    AdmissionResponse._(bc, offset);
}

class AdmissionResponseBuilder {
  AdmissionResponseBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(7);
  }

  int addUidOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addAllowed(bool? allowed) {
    fbBuilder.addBool(1, allowed);
    return fbBuilder.offset;
  }
  int addStatusOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addPatchOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addPatchTypeOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addAuditAnnotationsOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addWarningsOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class AdmissionResponseObjectBuilder extends fb.ObjectBuilder {
  final String? _uid;
  final bool? _allowed;
  final apimachinery_pkg_apis_meta_v1.StatusObjectBuilder? _status;
  final List<int>? _patch;
  final String? _patchType;
  final List<api_admission_v1_admission_response_.AuditAnnotationsEntryObjectBuilder>? _auditAnnotations;
  final List<String>? _warnings;

  AdmissionResponseObjectBuilder({
    String? uid,
    bool? allowed,
    apimachinery_pkg_apis_meta_v1.StatusObjectBuilder? status,
    List<int>? patch,
    String? patchType,
    List<api_admission_v1_admission_response_.AuditAnnotationsEntryObjectBuilder>? auditAnnotations,
    List<String>? warnings,
  })
      : _uid = uid,
        _allowed = allowed,
        _status = status,
        _patch = patch,
        _patchType = patchType,
        _auditAnnotations = auditAnnotations,
        _warnings = warnings;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? uidOffset = _uid == null ? null
        : fbBuilder.writeString(_uid!);
    final int? statusOffset = _status?.getOrCreateOffset(fbBuilder);
    final int? patchOffset = _patch == null ? null
        : fbBuilder.writeListUint8(_patch!);
    final int? patchTypeOffset = _patchType == null ? null
        : fbBuilder.writeString(_patchType!);
    final int? auditAnnotationsOffset = _auditAnnotations == null ? null
        : fbBuilder.writeList(_auditAnnotations!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? warningsOffset = _warnings == null ? null
        : fbBuilder.writeList(_warnings!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(7);
    fbBuilder.addOffset(0, uidOffset);
    fbBuilder.addBool(1, _allowed);
    fbBuilder.addOffset(2, statusOffset);
    fbBuilder.addOffset(3, patchOffset);
    fbBuilder.addOffset(4, patchTypeOffset);
    fbBuilder.addOffset(5, auditAnnotationsOffset);
    fbBuilder.addOffset(6, warningsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class AdmissionReview {
  AdmissionReview._(this._bc, this._bcOffset);
  factory AdmissionReview(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<AdmissionReview> reader = _AdmissionReviewReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  AdmissionRequest? get request => AdmissionRequest.reader.vTableGetNullable(_bc, _bcOffset, 4);
  AdmissionResponse? get response => AdmissionResponse.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'AdmissionReview{request: ${request}, response: ${response}}';
  }
}

class _AdmissionReviewReader extends fb.TableReader<AdmissionReview> {
  const _AdmissionReviewReader();

  @override
  AdmissionReview createObject(fb.BufferContext bc, int offset) => 
    AdmissionReview._(bc, offset);
}

class AdmissionReviewBuilder {
  AdmissionReviewBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addRequestOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addResponseOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class AdmissionReviewObjectBuilder extends fb.ObjectBuilder {
  final AdmissionRequestObjectBuilder? _request;
  final AdmissionResponseObjectBuilder? _response;

  AdmissionReviewObjectBuilder({
    AdmissionRequestObjectBuilder? request,
    AdmissionResponseObjectBuilder? response,
  })
      : _request = request,
        _response = response;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? requestOffset = _request?.getOrCreateOffset(fbBuilder);
    final int? responseOffset = _response?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, requestOffset);
    fbBuilder.addOffset(1, responseOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
