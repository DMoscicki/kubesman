// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library api.admissionregistration.v1_alpha1;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;

import './generated_api.admissionregistration.v1_generated.dart' as api_admissionregistration_v1;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

import './generated_api.admissionregistration.v1_generated.dart' as api_admissionregistration_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

class AuditAnnotation {
  AuditAnnotation._(this._bc, this._bcOffset);
  factory AuditAnnotation(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<AuditAnnotation> reader = _AuditAnnotationReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get key => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get valueExpression => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'AuditAnnotation{key: ${key}, valueExpression: ${valueExpression}}';
  }
}

class _AuditAnnotationReader extends fb.TableReader<AuditAnnotation> {
  const _AuditAnnotationReader();

  @override
  AuditAnnotation createObject(fb.BufferContext bc, int offset) => 
    AuditAnnotation._(bc, offset);
}

class AuditAnnotationBuilder {
  AuditAnnotationBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addKeyOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addValueExpressionOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class AuditAnnotationObjectBuilder extends fb.ObjectBuilder {
  final String? _key;
  final String? _valueExpression;

  AuditAnnotationObjectBuilder({
    String? key,
    String? valueExpression,
  })
      : _key = key,
        _valueExpression = valueExpression;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? keyOffset = _key == null ? null
        : fbBuilder.writeString(_key!);
    final int? valueExpressionOffset = _valueExpression == null ? null
        : fbBuilder.writeString(_valueExpression!);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, keyOffset);
    fbBuilder.addOffset(1, valueExpressionOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ExpressionWarning {
  ExpressionWarning._(this._bc, this._bcOffset);
  factory ExpressionWarning(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ExpressionWarning> reader = _ExpressionWarningReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get fieldRef => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get warning => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ExpressionWarning{fieldRef: ${fieldRef}, warning: ${warning}}';
  }
}

class _ExpressionWarningReader extends fb.TableReader<ExpressionWarning> {
  const _ExpressionWarningReader();

  @override
  ExpressionWarning createObject(fb.BufferContext bc, int offset) => 
    ExpressionWarning._(bc, offset);
}

class ExpressionWarningBuilder {
  ExpressionWarningBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addFieldRefOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addWarningOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ExpressionWarningObjectBuilder extends fb.ObjectBuilder {
  final String? _fieldRef;
  final String? _warning;

  ExpressionWarningObjectBuilder({
    String? fieldRef,
    String? warning,
  })
      : _fieldRef = fieldRef,
        _warning = warning;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? fieldRefOffset = _fieldRef == null ? null
        : fbBuilder.writeString(_fieldRef!);
    final int? warningOffset = _warning == null ? null
        : fbBuilder.writeString(_warning!);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, fieldRefOffset);
    fbBuilder.addOffset(1, warningOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class MatchCondition {
  MatchCondition._(this._bc, this._bcOffset);
  factory MatchCondition(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<MatchCondition> reader = _MatchConditionReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get expression => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'MatchCondition{name: ${name}, expression: ${expression}}';
  }
}

class _MatchConditionReader extends fb.TableReader<MatchCondition> {
  const _MatchConditionReader();

  @override
  MatchCondition createObject(fb.BufferContext bc, int offset) => 
    MatchCondition._(bc, offset);
}

class MatchConditionBuilder {
  MatchConditionBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addExpressionOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class MatchConditionObjectBuilder extends fb.ObjectBuilder {
  final String? _name;
  final String? _expression;

  MatchConditionObjectBuilder({
    String? name,
    String? expression,
  })
      : _name = name,
        _expression = expression;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? expressionOffset = _expression == null ? null
        : fbBuilder.writeString(_expression!);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, nameOffset);
    fbBuilder.addOffset(1, expressionOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class MatchResources {
  MatchResources._(this._bc, this._bcOffset);
  factory MatchResources(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<MatchResources> reader = _MatchResourcesReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.LabelSelector? get namespaceSelector => apimachinery_pkg_apis_meta_v1.LabelSelector.reader.vTableGetNullable(_bc, _bcOffset, 4);
  apimachinery_pkg_apis_meta_v1.LabelSelector? get objectSelector => apimachinery_pkg_apis_meta_v1.LabelSelector.reader.vTableGetNullable(_bc, _bcOffset, 6);
  List<NamedRuleWithOperations>? get resourceRules => const fb.ListReader<NamedRuleWithOperations>(NamedRuleWithOperations.reader).vTableGetNullable(_bc, _bcOffset, 8);
  List<NamedRuleWithOperations>? get excludeResourceRules => const fb.ListReader<NamedRuleWithOperations>(NamedRuleWithOperations.reader).vTableGetNullable(_bc, _bcOffset, 10);
  String? get matchPolicy => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);

  @override
  String toString() {
    return 'MatchResources{namespaceSelector: ${namespaceSelector}, objectSelector: ${objectSelector}, resourceRules: ${resourceRules}, excludeResourceRules: ${excludeResourceRules}, matchPolicy: ${matchPolicy}}';
  }
}

class _MatchResourcesReader extends fb.TableReader<MatchResources> {
  const _MatchResourcesReader();

  @override
  MatchResources createObject(fb.BufferContext bc, int offset) => 
    MatchResources._(bc, offset);
}

class MatchResourcesBuilder {
  MatchResourcesBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(5);
  }

  int addNamespaceSelectorOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addObjectSelectorOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addResourceRulesOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addExcludeResourceRulesOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addMatchPolicyOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class MatchResourcesObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.LabelSelectorObjectBuilder? _namespaceSelector;
  final apimachinery_pkg_apis_meta_v1.LabelSelectorObjectBuilder? _objectSelector;
  final List<NamedRuleWithOperationsObjectBuilder>? _resourceRules;
  final List<NamedRuleWithOperationsObjectBuilder>? _excludeResourceRules;
  final String? _matchPolicy;

  MatchResourcesObjectBuilder({
    apimachinery_pkg_apis_meta_v1.LabelSelectorObjectBuilder? namespaceSelector,
    apimachinery_pkg_apis_meta_v1.LabelSelectorObjectBuilder? objectSelector,
    List<NamedRuleWithOperationsObjectBuilder>? resourceRules,
    List<NamedRuleWithOperationsObjectBuilder>? excludeResourceRules,
    String? matchPolicy,
  })
      : _namespaceSelector = namespaceSelector,
        _objectSelector = objectSelector,
        _resourceRules = resourceRules,
        _excludeResourceRules = excludeResourceRules,
        _matchPolicy = matchPolicy;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? namespaceSelectorOffset = _namespaceSelector?.getOrCreateOffset(fbBuilder);
    final int? objectSelectorOffset = _objectSelector?.getOrCreateOffset(fbBuilder);
    final int? resourceRulesOffset = _resourceRules == null ? null
        : fbBuilder.writeList(_resourceRules!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? excludeResourceRulesOffset = _excludeResourceRules == null ? null
        : fbBuilder.writeList(_excludeResourceRules!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? matchPolicyOffset = _matchPolicy == null ? null
        : fbBuilder.writeString(_matchPolicy!);
    fbBuilder.startTable(5);
    fbBuilder.addOffset(0, namespaceSelectorOffset);
    fbBuilder.addOffset(1, objectSelectorOffset);
    fbBuilder.addOffset(2, resourceRulesOffset);
    fbBuilder.addOffset(3, excludeResourceRulesOffset);
    fbBuilder.addOffset(4, matchPolicyOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class NamedRuleWithOperations {
  NamedRuleWithOperations._(this._bc, this._bcOffset);
  factory NamedRuleWithOperations(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<NamedRuleWithOperations> reader = _NamedRuleWithOperationsReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<String>? get resourceNames => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 4);
  api_admissionregistration_v1.RuleWithOperations? get ruleWithOperations => api_admissionregistration_v1.RuleWithOperations.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'NamedRuleWithOperations{resourceNames: ${resourceNames}, ruleWithOperations: ${ruleWithOperations}}';
  }
}

class _NamedRuleWithOperationsReader extends fb.TableReader<NamedRuleWithOperations> {
  const _NamedRuleWithOperationsReader();

  @override
  NamedRuleWithOperations createObject(fb.BufferContext bc, int offset) => 
    NamedRuleWithOperations._(bc, offset);
}

class NamedRuleWithOperationsBuilder {
  NamedRuleWithOperationsBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addResourceNamesOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addRuleWithOperationsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class NamedRuleWithOperationsObjectBuilder extends fb.ObjectBuilder {
  final List<String>? _resourceNames;
  final api_admissionregistration_v1.RuleWithOperationsObjectBuilder? _ruleWithOperations;

  NamedRuleWithOperationsObjectBuilder({
    List<String>? resourceNames,
    api_admissionregistration_v1.RuleWithOperationsObjectBuilder? ruleWithOperations,
  })
      : _resourceNames = resourceNames,
        _ruleWithOperations = ruleWithOperations;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? resourceNamesOffset = _resourceNames == null ? null
        : fbBuilder.writeList(_resourceNames!.map(fbBuilder.writeString).toList());
    final int? ruleWithOperationsOffset = _ruleWithOperations?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, resourceNamesOffset);
    fbBuilder.addOffset(1, ruleWithOperationsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ParamKind {
  ParamKind._(this._bc, this._bcOffset);
  factory ParamKind(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ParamKind> reader = _ParamKindReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get apiVersion => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get kind => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ParamKind{apiVersion: ${apiVersion}, kind: ${kind}}';
  }
}

class _ParamKindReader extends fb.TableReader<ParamKind> {
  const _ParamKindReader();

  @override
  ParamKind createObject(fb.BufferContext bc, int offset) => 
    ParamKind._(bc, offset);
}

class ParamKindBuilder {
  ParamKindBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addApiVersionOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addKindOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ParamKindObjectBuilder extends fb.ObjectBuilder {
  final String? _apiVersion;
  final String? _kind;

  ParamKindObjectBuilder({
    String? apiVersion,
    String? kind,
  })
      : _apiVersion = apiVersion,
        _kind = kind;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? apiVersionOffset = _apiVersion == null ? null
        : fbBuilder.writeString(_apiVersion!);
    final int? kindOffset = _kind == null ? null
        : fbBuilder.writeString(_kind!);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, apiVersionOffset);
    fbBuilder.addOffset(1, kindOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ParamRef {
  ParamRef._(this._bc, this._bcOffset);
  factory ParamRef(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ParamRef> reader = _ParamRefReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get namespace => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  apimachinery_pkg_apis_meta_v1.LabelSelector? get selector => apimachinery_pkg_apis_meta_v1.LabelSelector.reader.vTableGetNullable(_bc, _bcOffset, 8);
  String? get parameterNotFoundAction => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);

  @override
  String toString() {
    return 'ParamRef{name: ${name}, namespace: ${namespace}, selector: ${selector}, parameterNotFoundAction: ${parameterNotFoundAction}}';
  }
}

class _ParamRefReader extends fb.TableReader<ParamRef> {
  const _ParamRefReader();

  @override
  ParamRef createObject(fb.BufferContext bc, int offset) => 
    ParamRef._(bc, offset);
}

class ParamRefBuilder {
  ParamRefBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addNamespaceOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addSelectorOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addParameterNotFoundActionOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ParamRefObjectBuilder extends fb.ObjectBuilder {
  final String? _name;
  final String? _namespace;
  final apimachinery_pkg_apis_meta_v1.LabelSelectorObjectBuilder? _selector;
  final String? _parameterNotFoundAction;

  ParamRefObjectBuilder({
    String? name,
    String? namespace,
    apimachinery_pkg_apis_meta_v1.LabelSelectorObjectBuilder? selector,
    String? parameterNotFoundAction,
  })
      : _name = name,
        _namespace = namespace,
        _selector = selector,
        _parameterNotFoundAction = parameterNotFoundAction;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? namespaceOffset = _namespace == null ? null
        : fbBuilder.writeString(_namespace!);
    final int? selectorOffset = _selector?.getOrCreateOffset(fbBuilder);
    final int? parameterNotFoundActionOffset = _parameterNotFoundAction == null ? null
        : fbBuilder.writeString(_parameterNotFoundAction!);
    fbBuilder.startTable(4);
    fbBuilder.addOffset(0, nameOffset);
    fbBuilder.addOffset(1, namespaceOffset);
    fbBuilder.addOffset(2, selectorOffset);
    fbBuilder.addOffset(3, parameterNotFoundActionOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class TypeChecking {
  TypeChecking._(this._bc, this._bcOffset);
  factory TypeChecking(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<TypeChecking> reader = _TypeCheckingReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<ExpressionWarning>? get expressionWarnings => const fb.ListReader<ExpressionWarning>(ExpressionWarning.reader).vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'TypeChecking{expressionWarnings: ${expressionWarnings}}';
  }
}

class _TypeCheckingReader extends fb.TableReader<TypeChecking> {
  const _TypeCheckingReader();

  @override
  TypeChecking createObject(fb.BufferContext bc, int offset) => 
    TypeChecking._(bc, offset);
}

class TypeCheckingBuilder {
  TypeCheckingBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addExpressionWarningsOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class TypeCheckingObjectBuilder extends fb.ObjectBuilder {
  final List<ExpressionWarningObjectBuilder>? _expressionWarnings;

  TypeCheckingObjectBuilder({
    List<ExpressionWarningObjectBuilder>? expressionWarnings,
  })
      : _expressionWarnings = expressionWarnings;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? expressionWarningsOffset = _expressionWarnings == null ? null
        : fbBuilder.writeList(_expressionWarnings!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, expressionWarningsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ValidatingAdmissionPolicy {
  ValidatingAdmissionPolicy._(this._bc, this._bcOffset);
  factory ValidatingAdmissionPolicy(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ValidatingAdmissionPolicy> reader = _ValidatingAdmissionPolicyReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ObjectMeta? get metadata => apimachinery_pkg_apis_meta_v1.ObjectMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  ValidatingAdmissionPolicySpec? get spec => ValidatingAdmissionPolicySpec.reader.vTableGetNullable(_bc, _bcOffset, 6);
  ValidatingAdmissionPolicyStatus? get status => ValidatingAdmissionPolicyStatus.reader.vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'ValidatingAdmissionPolicy{metadata: ${metadata}, spec: ${spec}, status: ${status}}';
  }
}

class _ValidatingAdmissionPolicyReader extends fb.TableReader<ValidatingAdmissionPolicy> {
  const _ValidatingAdmissionPolicyReader();

  @override
  ValidatingAdmissionPolicy createObject(fb.BufferContext bc, int offset) => 
    ValidatingAdmissionPolicy._(bc, offset);
}

class ValidatingAdmissionPolicyBuilder {
  ValidatingAdmissionPolicyBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSpecOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addStatusOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ValidatingAdmissionPolicyObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? _metadata;
  final ValidatingAdmissionPolicySpecObjectBuilder? _spec;
  final ValidatingAdmissionPolicyStatusObjectBuilder? _status;

  ValidatingAdmissionPolicyObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? metadata,
    ValidatingAdmissionPolicySpecObjectBuilder? spec,
    ValidatingAdmissionPolicyStatusObjectBuilder? status,
  })
      : _metadata = metadata,
        _spec = spec,
        _status = status;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? specOffset = _spec?.getOrCreateOffset(fbBuilder);
    final int? statusOffset = _status?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, specOffset);
    fbBuilder.addOffset(2, statusOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ValidatingAdmissionPolicyBinding {
  ValidatingAdmissionPolicyBinding._(this._bc, this._bcOffset);
  factory ValidatingAdmissionPolicyBinding(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ValidatingAdmissionPolicyBinding> reader = _ValidatingAdmissionPolicyBindingReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ObjectMeta? get metadata => apimachinery_pkg_apis_meta_v1.ObjectMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  ValidatingAdmissionPolicyBindingSpec? get spec => ValidatingAdmissionPolicyBindingSpec.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ValidatingAdmissionPolicyBinding{metadata: ${metadata}, spec: ${spec}}';
  }
}

class _ValidatingAdmissionPolicyBindingReader extends fb.TableReader<ValidatingAdmissionPolicyBinding> {
  const _ValidatingAdmissionPolicyBindingReader();

  @override
  ValidatingAdmissionPolicyBinding createObject(fb.BufferContext bc, int offset) => 
    ValidatingAdmissionPolicyBinding._(bc, offset);
}

class ValidatingAdmissionPolicyBindingBuilder {
  ValidatingAdmissionPolicyBindingBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSpecOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ValidatingAdmissionPolicyBindingObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? _metadata;
  final ValidatingAdmissionPolicyBindingSpecObjectBuilder? _spec;

  ValidatingAdmissionPolicyBindingObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? metadata,
    ValidatingAdmissionPolicyBindingSpecObjectBuilder? spec,
  })
      : _metadata = metadata,
        _spec = spec;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? specOffset = _spec?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, specOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ValidatingAdmissionPolicyBindingList {
  ValidatingAdmissionPolicyBindingList._(this._bc, this._bcOffset);
  factory ValidatingAdmissionPolicyBindingList(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ValidatingAdmissionPolicyBindingList> reader = _ValidatingAdmissionPolicyBindingListReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ListMeta? get metadata => apimachinery_pkg_apis_meta_v1.ListMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  List<ValidatingAdmissionPolicyBinding>? get items => const fb.ListReader<ValidatingAdmissionPolicyBinding>(ValidatingAdmissionPolicyBinding.reader).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ValidatingAdmissionPolicyBindingList{metadata: ${metadata}, items: ${items}}';
  }
}

class _ValidatingAdmissionPolicyBindingListReader extends fb.TableReader<ValidatingAdmissionPolicyBindingList> {
  const _ValidatingAdmissionPolicyBindingListReader();

  @override
  ValidatingAdmissionPolicyBindingList createObject(fb.BufferContext bc, int offset) => 
    ValidatingAdmissionPolicyBindingList._(bc, offset);
}

class ValidatingAdmissionPolicyBindingListBuilder {
  ValidatingAdmissionPolicyBindingListBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addItemsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ValidatingAdmissionPolicyBindingListObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? _metadata;
  final List<ValidatingAdmissionPolicyBindingObjectBuilder>? _items;

  ValidatingAdmissionPolicyBindingListObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? metadata,
    List<ValidatingAdmissionPolicyBindingObjectBuilder>? items,
  })
      : _metadata = metadata,
        _items = items;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? itemsOffset = _items == null ? null
        : fbBuilder.writeList(_items!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, itemsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ValidatingAdmissionPolicyBindingSpec {
  ValidatingAdmissionPolicyBindingSpec._(this._bc, this._bcOffset);
  factory ValidatingAdmissionPolicyBindingSpec(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ValidatingAdmissionPolicyBindingSpec> reader = _ValidatingAdmissionPolicyBindingSpecReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get policyName => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ParamRef? get paramRef => ParamRef.reader.vTableGetNullable(_bc, _bcOffset, 6);
  MatchResources? get matchResources => MatchResources.reader.vTableGetNullable(_bc, _bcOffset, 8);
  List<String>? get validationActions => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 10);

  @override
  String toString() {
    return 'ValidatingAdmissionPolicyBindingSpec{policyName: ${policyName}, paramRef: ${paramRef}, matchResources: ${matchResources}, validationActions: ${validationActions}}';
  }
}

class _ValidatingAdmissionPolicyBindingSpecReader extends fb.TableReader<ValidatingAdmissionPolicyBindingSpec> {
  const _ValidatingAdmissionPolicyBindingSpecReader();

  @override
  ValidatingAdmissionPolicyBindingSpec createObject(fb.BufferContext bc, int offset) => 
    ValidatingAdmissionPolicyBindingSpec._(bc, offset);
}

class ValidatingAdmissionPolicyBindingSpecBuilder {
  ValidatingAdmissionPolicyBindingSpecBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addPolicyNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addParamRefOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addMatchResourcesOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addValidationActionsOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ValidatingAdmissionPolicyBindingSpecObjectBuilder extends fb.ObjectBuilder {
  final String? _policyName;
  final ParamRefObjectBuilder? _paramRef;
  final MatchResourcesObjectBuilder? _matchResources;
  final List<String>? _validationActions;

  ValidatingAdmissionPolicyBindingSpecObjectBuilder({
    String? policyName,
    ParamRefObjectBuilder? paramRef,
    MatchResourcesObjectBuilder? matchResources,
    List<String>? validationActions,
  })
      : _policyName = policyName,
        _paramRef = paramRef,
        _matchResources = matchResources,
        _validationActions = validationActions;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? policyNameOffset = _policyName == null ? null
        : fbBuilder.writeString(_policyName!);
    final int? paramRefOffset = _paramRef?.getOrCreateOffset(fbBuilder);
    final int? matchResourcesOffset = _matchResources?.getOrCreateOffset(fbBuilder);
    final int? validationActionsOffset = _validationActions == null ? null
        : fbBuilder.writeList(_validationActions!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(4);
    fbBuilder.addOffset(0, policyNameOffset);
    fbBuilder.addOffset(1, paramRefOffset);
    fbBuilder.addOffset(2, matchResourcesOffset);
    fbBuilder.addOffset(3, validationActionsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ValidatingAdmissionPolicyList {
  ValidatingAdmissionPolicyList._(this._bc, this._bcOffset);
  factory ValidatingAdmissionPolicyList(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ValidatingAdmissionPolicyList> reader = _ValidatingAdmissionPolicyListReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ListMeta? get metadata => apimachinery_pkg_apis_meta_v1.ListMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  List<ValidatingAdmissionPolicy>? get items => const fb.ListReader<ValidatingAdmissionPolicy>(ValidatingAdmissionPolicy.reader).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ValidatingAdmissionPolicyList{metadata: ${metadata}, items: ${items}}';
  }
}

class _ValidatingAdmissionPolicyListReader extends fb.TableReader<ValidatingAdmissionPolicyList> {
  const _ValidatingAdmissionPolicyListReader();

  @override
  ValidatingAdmissionPolicyList createObject(fb.BufferContext bc, int offset) => 
    ValidatingAdmissionPolicyList._(bc, offset);
}

class ValidatingAdmissionPolicyListBuilder {
  ValidatingAdmissionPolicyListBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addItemsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ValidatingAdmissionPolicyListObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? _metadata;
  final List<ValidatingAdmissionPolicyObjectBuilder>? _items;

  ValidatingAdmissionPolicyListObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? metadata,
    List<ValidatingAdmissionPolicyObjectBuilder>? items,
  })
      : _metadata = metadata,
        _items = items;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? itemsOffset = _items == null ? null
        : fbBuilder.writeList(_items!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, itemsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ValidatingAdmissionPolicySpec {
  ValidatingAdmissionPolicySpec._(this._bc, this._bcOffset);
  factory ValidatingAdmissionPolicySpec(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ValidatingAdmissionPolicySpec> reader = _ValidatingAdmissionPolicySpecReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ParamKind? get paramKind => ParamKind.reader.vTableGetNullable(_bc, _bcOffset, 4);
  MatchResources? get matchConstraints => MatchResources.reader.vTableGetNullable(_bc, _bcOffset, 6);
  List<Validation>? get validations => const fb.ListReader<Validation>(Validation.reader).vTableGetNullable(_bc, _bcOffset, 8);
  String? get failurePolicy => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  List<AuditAnnotation>? get auditAnnotations => const fb.ListReader<AuditAnnotation>(AuditAnnotation.reader).vTableGetNullable(_bc, _bcOffset, 12);
  List<MatchCondition>? get matchConditions => const fb.ListReader<MatchCondition>(MatchCondition.reader).vTableGetNullable(_bc, _bcOffset, 14);
  List<Variable>? get variables => const fb.ListReader<Variable>(Variable.reader).vTableGetNullable(_bc, _bcOffset, 16);

  @override
  String toString() {
    return 'ValidatingAdmissionPolicySpec{paramKind: ${paramKind}, matchConstraints: ${matchConstraints}, validations: ${validations}, failurePolicy: ${failurePolicy}, auditAnnotations: ${auditAnnotations}, matchConditions: ${matchConditions}, variables: ${variables}}';
  }
}

class _ValidatingAdmissionPolicySpecReader extends fb.TableReader<ValidatingAdmissionPolicySpec> {
  const _ValidatingAdmissionPolicySpecReader();

  @override
  ValidatingAdmissionPolicySpec createObject(fb.BufferContext bc, int offset) => 
    ValidatingAdmissionPolicySpec._(bc, offset);
}

class ValidatingAdmissionPolicySpecBuilder {
  ValidatingAdmissionPolicySpecBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(7);
  }

  int addParamKindOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addMatchConstraintsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addValidationsOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addFailurePolicyOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addAuditAnnotationsOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addMatchConditionsOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addVariablesOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ValidatingAdmissionPolicySpecObjectBuilder extends fb.ObjectBuilder {
  final ParamKindObjectBuilder? _paramKind;
  final MatchResourcesObjectBuilder? _matchConstraints;
  final List<ValidationObjectBuilder>? _validations;
  final String? _failurePolicy;
  final List<AuditAnnotationObjectBuilder>? _auditAnnotations;
  final List<MatchConditionObjectBuilder>? _matchConditions;
  final List<VariableObjectBuilder>? _variables;

  ValidatingAdmissionPolicySpecObjectBuilder({
    ParamKindObjectBuilder? paramKind,
    MatchResourcesObjectBuilder? matchConstraints,
    List<ValidationObjectBuilder>? validations,
    String? failurePolicy,
    List<AuditAnnotationObjectBuilder>? auditAnnotations,
    List<MatchConditionObjectBuilder>? matchConditions,
    List<VariableObjectBuilder>? variables,
  })
      : _paramKind = paramKind,
        _matchConstraints = matchConstraints,
        _validations = validations,
        _failurePolicy = failurePolicy,
        _auditAnnotations = auditAnnotations,
        _matchConditions = matchConditions,
        _variables = variables;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? paramKindOffset = _paramKind?.getOrCreateOffset(fbBuilder);
    final int? matchConstraintsOffset = _matchConstraints?.getOrCreateOffset(fbBuilder);
    final int? validationsOffset = _validations == null ? null
        : fbBuilder.writeList(_validations!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? failurePolicyOffset = _failurePolicy == null ? null
        : fbBuilder.writeString(_failurePolicy!);
    final int? auditAnnotationsOffset = _auditAnnotations == null ? null
        : fbBuilder.writeList(_auditAnnotations!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? matchConditionsOffset = _matchConditions == null ? null
        : fbBuilder.writeList(_matchConditions!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? variablesOffset = _variables == null ? null
        : fbBuilder.writeList(_variables!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(7);
    fbBuilder.addOffset(0, paramKindOffset);
    fbBuilder.addOffset(1, matchConstraintsOffset);
    fbBuilder.addOffset(2, validationsOffset);
    fbBuilder.addOffset(3, failurePolicyOffset);
    fbBuilder.addOffset(4, auditAnnotationsOffset);
    fbBuilder.addOffset(5, matchConditionsOffset);
    fbBuilder.addOffset(6, variablesOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ValidatingAdmissionPolicyStatus {
  ValidatingAdmissionPolicyStatus._(this._bc, this._bcOffset);
  factory ValidatingAdmissionPolicyStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ValidatingAdmissionPolicyStatus> reader = _ValidatingAdmissionPolicyStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  int get observedGeneration => const fb.Int64Reader().vTableGet(_bc, _bcOffset, 4, 0);
  TypeChecking? get typeChecking => TypeChecking.reader.vTableGetNullable(_bc, _bcOffset, 6);
  List<apimachinery_pkg_apis_meta_v1.Condition>? get conditions => const fb.ListReader<apimachinery_pkg_apis_meta_v1.Condition>(apimachinery_pkg_apis_meta_v1.Condition.reader).vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'ValidatingAdmissionPolicyStatus{observedGeneration: ${observedGeneration}, typeChecking: ${typeChecking}, conditions: ${conditions}}';
  }
}

class _ValidatingAdmissionPolicyStatusReader extends fb.TableReader<ValidatingAdmissionPolicyStatus> {
  const _ValidatingAdmissionPolicyStatusReader();

  @override
  ValidatingAdmissionPolicyStatus createObject(fb.BufferContext bc, int offset) => 
    ValidatingAdmissionPolicyStatus._(bc, offset);
}

class ValidatingAdmissionPolicyStatusBuilder {
  ValidatingAdmissionPolicyStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addObservedGeneration(int? observedGeneration) {
    fbBuilder.addInt64(0, observedGeneration);
    return fbBuilder.offset;
  }
  int addTypeCheckingOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addConditionsOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ValidatingAdmissionPolicyStatusObjectBuilder extends fb.ObjectBuilder {
  final int? _observedGeneration;
  final TypeCheckingObjectBuilder? _typeChecking;
  final List<apimachinery_pkg_apis_meta_v1.ConditionObjectBuilder>? _conditions;

  ValidatingAdmissionPolicyStatusObjectBuilder({
    int? observedGeneration,
    TypeCheckingObjectBuilder? typeChecking,
    List<apimachinery_pkg_apis_meta_v1.ConditionObjectBuilder>? conditions,
  })
      : _observedGeneration = observedGeneration,
        _typeChecking = typeChecking,
        _conditions = conditions;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? typeCheckingOffset = _typeChecking?.getOrCreateOffset(fbBuilder);
    final int? conditionsOffset = _conditions == null ? null
        : fbBuilder.writeList(_conditions!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(3);
    fbBuilder.addInt64(0, _observedGeneration);
    fbBuilder.addOffset(1, typeCheckingOffset);
    fbBuilder.addOffset(2, conditionsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class Validation {
  Validation._(this._bc, this._bcOffset);
  factory Validation(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<Validation> reader = _ValidationReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get expression => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get message => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  String? get reason => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  String? get messageExpression => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);

  @override
  String toString() {
    return 'Validation{expression: ${expression}, message: ${message}, reason: ${reason}, messageExpression: ${messageExpression}}';
  }
}

class _ValidationReader extends fb.TableReader<Validation> {
  const _ValidationReader();

  @override
  Validation createObject(fb.BufferContext bc, int offset) => 
    Validation._(bc, offset);
}

class ValidationBuilder {
  ValidationBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addExpressionOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addMessageOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addReasonOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addMessageExpressionOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ValidationObjectBuilder extends fb.ObjectBuilder {
  final String? _expression;
  final String? _message;
  final String? _reason;
  final String? _messageExpression;

  ValidationObjectBuilder({
    String? expression,
    String? message,
    String? reason,
    String? messageExpression,
  })
      : _expression = expression,
        _message = message,
        _reason = reason,
        _messageExpression = messageExpression;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? expressionOffset = _expression == null ? null
        : fbBuilder.writeString(_expression!);
    final int? messageOffset = _message == null ? null
        : fbBuilder.writeString(_message!);
    final int? reasonOffset = _reason == null ? null
        : fbBuilder.writeString(_reason!);
    final int? messageExpressionOffset = _messageExpression == null ? null
        : fbBuilder.writeString(_messageExpression!);
    fbBuilder.startTable(4);
    fbBuilder.addOffset(0, expressionOffset);
    fbBuilder.addOffset(1, messageOffset);
    fbBuilder.addOffset(2, reasonOffset);
    fbBuilder.addOffset(3, messageExpressionOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class Variable {
  Variable._(this._bc, this._bcOffset);
  factory Variable(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<Variable> reader = _VariableReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get expression => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'Variable{name: ${name}, expression: ${expression}}';
  }
}

class _VariableReader extends fb.TableReader<Variable> {
  const _VariableReader();

  @override
  Variable createObject(fb.BufferContext bc, int offset) => 
    Variable._(bc, offset);
}

class VariableBuilder {
  VariableBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addExpressionOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class VariableObjectBuilder extends fb.ObjectBuilder {
  final String? _name;
  final String? _expression;

  VariableObjectBuilder({
    String? name,
    String? expression,
  })
      : _name = name,
        _expression = expression;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? expressionOffset = _expression == null ? null
        : fbBuilder.writeString(_expression!);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, nameOffset);
    fbBuilder.addOffset(1, expressionOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
