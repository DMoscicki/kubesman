// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library api.authentication.v1;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;

import './generated_api.admission.v1_generated.dart' as api_admission_v1;
import './generated_api.admission.v1.admission_response__generated.dart' as api_admission_v1_admission_response_;
import './generated_api.authentication.v1.user_info__generated.dart' as api_authentication_v1_user_info_;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

import './generated_api.authentication.v1.user_info__generated.dart' as api_authentication_v1_user_info_;
import './generated_api.authentication.v1_generated.dart' as api_authentication_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

class BoundObjectReference {
  BoundObjectReference._(this._bc, this._bcOffset);
  factory BoundObjectReference(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<BoundObjectReference> reader = _BoundObjectReferenceReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get kind => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get apiVersion => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  String? get uId => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);

  @override
  String toString() {
    return 'BoundObjectReference{kind: ${kind}, apiVersion: ${apiVersion}, name: ${name}, uId: ${uId}}';
  }
}

class _BoundObjectReferenceReader extends fb.TableReader<BoundObjectReference> {
  const _BoundObjectReferenceReader();

  @override
  BoundObjectReference createObject(fb.BufferContext bc, int offset) => 
    BoundObjectReference._(bc, offset);
}

class BoundObjectReferenceBuilder {
  BoundObjectReferenceBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addKindOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addApiVersionOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addNameOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addUIdOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class BoundObjectReferenceObjectBuilder extends fb.ObjectBuilder {
  final String? _kind;
  final String? _apiVersion;
  final String? _name;
  final String? _uId;

  BoundObjectReferenceObjectBuilder({
    String? kind,
    String? apiVersion,
    String? name,
    String? uId,
  })
      : _kind = kind,
        _apiVersion = apiVersion,
        _name = name,
        _uId = uId;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? kindOffset = _kind == null ? null
        : fbBuilder.writeString(_kind!);
    final int? apiVersionOffset = _apiVersion == null ? null
        : fbBuilder.writeString(_apiVersion!);
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? uIdOffset = _uId == null ? null
        : fbBuilder.writeString(_uId!);
    fbBuilder.startTable(4);
    fbBuilder.addOffset(0, kindOffset);
    fbBuilder.addOffset(1, apiVersionOffset);
    fbBuilder.addOffset(2, nameOffset);
    fbBuilder.addOffset(3, uIdOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ExtraValue {
  ExtraValue._(this._bc, this._bcOffset);
  factory ExtraValue(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ExtraValue> reader = _ExtraValueReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<String>? get items => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'ExtraValue{items: ${items}}';
  }
}

class _ExtraValueReader extends fb.TableReader<ExtraValue> {
  const _ExtraValueReader();

  @override
  ExtraValue createObject(fb.BufferContext bc, int offset) => 
    ExtraValue._(bc, offset);
}

class ExtraValueBuilder {
  ExtraValueBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addItemsOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ExtraValueObjectBuilder extends fb.ObjectBuilder {
  final List<String>? _items;

  ExtraValueObjectBuilder({
    List<String>? items,
  })
      : _items = items;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? itemsOffset = _items == null ? null
        : fbBuilder.writeList(_items!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, itemsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class SelfSubjectReview {
  SelfSubjectReview._(this._bc, this._bcOffset);
  factory SelfSubjectReview(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<SelfSubjectReview> reader = _SelfSubjectReviewReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ObjectMeta? get metadata => apimachinery_pkg_apis_meta_v1.ObjectMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  SelfSubjectReviewStatus? get status => SelfSubjectReviewStatus.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'SelfSubjectReview{metadata: ${metadata}, status: ${status}}';
  }
}

class _SelfSubjectReviewReader extends fb.TableReader<SelfSubjectReview> {
  const _SelfSubjectReviewReader();

  @override
  SelfSubjectReview createObject(fb.BufferContext bc, int offset) => 
    SelfSubjectReview._(bc, offset);
}

class SelfSubjectReviewBuilder {
  SelfSubjectReviewBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addStatusOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class SelfSubjectReviewObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? _metadata;
  final SelfSubjectReviewStatusObjectBuilder? _status;

  SelfSubjectReviewObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? metadata,
    SelfSubjectReviewStatusObjectBuilder? status,
  })
      : _metadata = metadata,
        _status = status;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? statusOffset = _status?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, statusOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class SelfSubjectReviewStatus {
  SelfSubjectReviewStatus._(this._bc, this._bcOffset);
  factory SelfSubjectReviewStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<SelfSubjectReviewStatus> reader = _SelfSubjectReviewStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  UserInfo? get userInfo => UserInfo.reader.vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'SelfSubjectReviewStatus{userInfo: ${userInfo}}';
  }
}

class _SelfSubjectReviewStatusReader extends fb.TableReader<SelfSubjectReviewStatus> {
  const _SelfSubjectReviewStatusReader();

  @override
  SelfSubjectReviewStatus createObject(fb.BufferContext bc, int offset) => 
    SelfSubjectReviewStatus._(bc, offset);
}

class SelfSubjectReviewStatusBuilder {
  SelfSubjectReviewStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addUserInfoOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class SelfSubjectReviewStatusObjectBuilder extends fb.ObjectBuilder {
  final UserInfoObjectBuilder? _userInfo;

  SelfSubjectReviewStatusObjectBuilder({
    UserInfoObjectBuilder? userInfo,
  })
      : _userInfo = userInfo;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? userInfoOffset = _userInfo?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, userInfoOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class TokenRequest {
  TokenRequest._(this._bc, this._bcOffset);
  factory TokenRequest(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<TokenRequest> reader = _TokenRequestReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ObjectMeta? get metadata => apimachinery_pkg_apis_meta_v1.ObjectMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  TokenRequestSpec? get spec => TokenRequestSpec.reader.vTableGetNullable(_bc, _bcOffset, 6);
  TokenRequestStatus? get status => TokenRequestStatus.reader.vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'TokenRequest{metadata: ${metadata}, spec: ${spec}, status: ${status}}';
  }
}

class _TokenRequestReader extends fb.TableReader<TokenRequest> {
  const _TokenRequestReader();

  @override
  TokenRequest createObject(fb.BufferContext bc, int offset) => 
    TokenRequest._(bc, offset);
}

class TokenRequestBuilder {
  TokenRequestBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSpecOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addStatusOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class TokenRequestObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? _metadata;
  final TokenRequestSpecObjectBuilder? _spec;
  final TokenRequestStatusObjectBuilder? _status;

  TokenRequestObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? metadata,
    TokenRequestSpecObjectBuilder? spec,
    TokenRequestStatusObjectBuilder? status,
  })
      : _metadata = metadata,
        _spec = spec,
        _status = status;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? specOffset = _spec?.getOrCreateOffset(fbBuilder);
    final int? statusOffset = _status?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, specOffset);
    fbBuilder.addOffset(2, statusOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class TokenRequestSpec {
  TokenRequestSpec._(this._bc, this._bcOffset);
  factory TokenRequestSpec(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<TokenRequestSpec> reader = _TokenRequestSpecReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<String>? get audiences => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 4);
  int get expirationSeconds => const fb.Int64Reader().vTableGet(_bc, _bcOffset, 6, 0);
  BoundObjectReference? get boundObjectRef => BoundObjectReference.reader.vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'TokenRequestSpec{audiences: ${audiences}, expirationSeconds: ${expirationSeconds}, boundObjectRef: ${boundObjectRef}}';
  }
}

class _TokenRequestSpecReader extends fb.TableReader<TokenRequestSpec> {
  const _TokenRequestSpecReader();

  @override
  TokenRequestSpec createObject(fb.BufferContext bc, int offset) => 
    TokenRequestSpec._(bc, offset);
}

class TokenRequestSpecBuilder {
  TokenRequestSpecBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addAudiencesOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addExpirationSeconds(int? expirationSeconds) {
    fbBuilder.addInt64(1, expirationSeconds);
    return fbBuilder.offset;
  }
  int addBoundObjectRefOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class TokenRequestSpecObjectBuilder extends fb.ObjectBuilder {
  final List<String>? _audiences;
  final int? _expirationSeconds;
  final BoundObjectReferenceObjectBuilder? _boundObjectRef;

  TokenRequestSpecObjectBuilder({
    List<String>? audiences,
    int? expirationSeconds,
    BoundObjectReferenceObjectBuilder? boundObjectRef,
  })
      : _audiences = audiences,
        _expirationSeconds = expirationSeconds,
        _boundObjectRef = boundObjectRef;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? audiencesOffset = _audiences == null ? null
        : fbBuilder.writeList(_audiences!.map(fbBuilder.writeString).toList());
    final int? boundObjectRefOffset = _boundObjectRef?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, audiencesOffset);
    fbBuilder.addInt64(1, _expirationSeconds);
    fbBuilder.addOffset(2, boundObjectRefOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class TokenRequestStatus {
  TokenRequestStatus._(this._bc, this._bcOffset);
  factory TokenRequestStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<TokenRequestStatus> reader = _TokenRequestStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get token => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  apimachinery_pkg_apis_meta_v1.Time? get expirationTimestamp => apimachinery_pkg_apis_meta_v1.Time.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'TokenRequestStatus{token: ${token}, expirationTimestamp: ${expirationTimestamp}}';
  }
}

class _TokenRequestStatusReader extends fb.TableReader<TokenRequestStatus> {
  const _TokenRequestStatusReader();

  @override
  TokenRequestStatus createObject(fb.BufferContext bc, int offset) => 
    TokenRequestStatus._(bc, offset);
}

class TokenRequestStatusBuilder {
  TokenRequestStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addTokenOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addExpirationTimestampOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class TokenRequestStatusObjectBuilder extends fb.ObjectBuilder {
  final String? _token;
  final apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? _expirationTimestamp;

  TokenRequestStatusObjectBuilder({
    String? token,
    apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? expirationTimestamp,
  })
      : _token = token,
        _expirationTimestamp = expirationTimestamp;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? tokenOffset = _token == null ? null
        : fbBuilder.writeString(_token!);
    final int? expirationTimestampOffset = _expirationTimestamp?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, tokenOffset);
    fbBuilder.addOffset(1, expirationTimestampOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class TokenReview {
  TokenReview._(this._bc, this._bcOffset);
  factory TokenReview(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<TokenReview> reader = _TokenReviewReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ObjectMeta? get metadata => apimachinery_pkg_apis_meta_v1.ObjectMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  TokenReviewSpec? get spec => TokenReviewSpec.reader.vTableGetNullable(_bc, _bcOffset, 6);
  TokenReviewStatus? get status => TokenReviewStatus.reader.vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'TokenReview{metadata: ${metadata}, spec: ${spec}, status: ${status}}';
  }
}

class _TokenReviewReader extends fb.TableReader<TokenReview> {
  const _TokenReviewReader();

  @override
  TokenReview createObject(fb.BufferContext bc, int offset) => 
    TokenReview._(bc, offset);
}

class TokenReviewBuilder {
  TokenReviewBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSpecOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addStatusOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class TokenReviewObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? _metadata;
  final TokenReviewSpecObjectBuilder? _spec;
  final TokenReviewStatusObjectBuilder? _status;

  TokenReviewObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? metadata,
    TokenReviewSpecObjectBuilder? spec,
    TokenReviewStatusObjectBuilder? status,
  })
      : _metadata = metadata,
        _spec = spec,
        _status = status;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? specOffset = _spec?.getOrCreateOffset(fbBuilder);
    final int? statusOffset = _status?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, specOffset);
    fbBuilder.addOffset(2, statusOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class TokenReviewSpec {
  TokenReviewSpec._(this._bc, this._bcOffset);
  factory TokenReviewSpec(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<TokenReviewSpec> reader = _TokenReviewSpecReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get token => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  List<String>? get audiences => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'TokenReviewSpec{token: ${token}, audiences: ${audiences}}';
  }
}

class _TokenReviewSpecReader extends fb.TableReader<TokenReviewSpec> {
  const _TokenReviewSpecReader();

  @override
  TokenReviewSpec createObject(fb.BufferContext bc, int offset) => 
    TokenReviewSpec._(bc, offset);
}

class TokenReviewSpecBuilder {
  TokenReviewSpecBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addTokenOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addAudiencesOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class TokenReviewSpecObjectBuilder extends fb.ObjectBuilder {
  final String? _token;
  final List<String>? _audiences;

  TokenReviewSpecObjectBuilder({
    String? token,
    List<String>? audiences,
  })
      : _token = token,
        _audiences = audiences;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? tokenOffset = _token == null ? null
        : fbBuilder.writeString(_token!);
    final int? audiencesOffset = _audiences == null ? null
        : fbBuilder.writeList(_audiences!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, tokenOffset);
    fbBuilder.addOffset(1, audiencesOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class TokenReviewStatus {
  TokenReviewStatus._(this._bc, this._bcOffset);
  factory TokenReviewStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<TokenReviewStatus> reader = _TokenReviewStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  bool get authenticated => const fb.BoolReader().vTableGet(_bc, _bcOffset, 4, false);
  UserInfo? get user => UserInfo.reader.vTableGetNullable(_bc, _bcOffset, 6);
  List<String>? get audiences => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 8);
  String? get error => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);

  @override
  String toString() {
    return 'TokenReviewStatus{authenticated: ${authenticated}, user: ${user}, audiences: ${audiences}, error: ${error}}';
  }
}

class _TokenReviewStatusReader extends fb.TableReader<TokenReviewStatus> {
  const _TokenReviewStatusReader();

  @override
  TokenReviewStatus createObject(fb.BufferContext bc, int offset) => 
    TokenReviewStatus._(bc, offset);
}

class TokenReviewStatusBuilder {
  TokenReviewStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addAuthenticated(bool? authenticated) {
    fbBuilder.addBool(0, authenticated);
    return fbBuilder.offset;
  }
  int addUserOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addAudiencesOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addErrorOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class TokenReviewStatusObjectBuilder extends fb.ObjectBuilder {
  final bool? _authenticated;
  final UserInfoObjectBuilder? _user;
  final List<String>? _audiences;
  final String? _error;

  TokenReviewStatusObjectBuilder({
    bool? authenticated,
    UserInfoObjectBuilder? user,
    List<String>? audiences,
    String? error,
  })
      : _authenticated = authenticated,
        _user = user,
        _audiences = audiences,
        _error = error;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? userOffset = _user?.getOrCreateOffset(fbBuilder);
    final int? audiencesOffset = _audiences == null ? null
        : fbBuilder.writeList(_audiences!.map(fbBuilder.writeString).toList());
    final int? errorOffset = _error == null ? null
        : fbBuilder.writeString(_error!);
    fbBuilder.startTable(4);
    fbBuilder.addBool(0, _authenticated);
    fbBuilder.addOffset(1, userOffset);
    fbBuilder.addOffset(2, audiencesOffset);
    fbBuilder.addOffset(3, errorOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class UserInfo {
  UserInfo._(this._bc, this._bcOffset);
  factory UserInfo(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<UserInfo> reader = _UserInfoReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get username => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get uid => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  List<String>? get groups => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 8);
  List<api_authentication_v1_user_info_.ExtraEntry>? get extra => const fb.ListReader<api_authentication_v1_user_info_.ExtraEntry>(api_authentication_v1_user_info_.ExtraEntry.reader).vTableGetNullable(_bc, _bcOffset, 10);

  @override
  String toString() {
    return 'UserInfo{username: ${username}, uid: ${uid}, groups: ${groups}, extra: ${extra}}';
  }
}

class _UserInfoReader extends fb.TableReader<UserInfo> {
  const _UserInfoReader();

  @override
  UserInfo createObject(fb.BufferContext bc, int offset) => 
    UserInfo._(bc, offset);
}

class UserInfoBuilder {
  UserInfoBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addUsernameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addUidOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addGroupsOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addExtraOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class UserInfoObjectBuilder extends fb.ObjectBuilder {
  final String? _username;
  final String? _uid;
  final List<String>? _groups;
  final List<api_authentication_v1_user_info_.ExtraEntryObjectBuilder>? _extra;

  UserInfoObjectBuilder({
    String? username,
    String? uid,
    List<String>? groups,
    List<api_authentication_v1_user_info_.ExtraEntryObjectBuilder>? extra,
  })
      : _username = username,
        _uid = uid,
        _groups = groups,
        _extra = extra;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? usernameOffset = _username == null ? null
        : fbBuilder.writeString(_username!);
    final int? uidOffset = _uid == null ? null
        : fbBuilder.writeString(_uid!);
    final int? groupsOffset = _groups == null ? null
        : fbBuilder.writeList(_groups!.map(fbBuilder.writeString).toList());
    final int? extraOffset = _extra == null ? null
        : fbBuilder.writeList(_extra!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(4);
    fbBuilder.addOffset(0, usernameOffset);
    fbBuilder.addOffset(1, uidOffset);
    fbBuilder.addOffset(2, groupsOffset);
    fbBuilder.addOffset(3, extraOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
