// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library api.autoscaling.v2_beta2;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;

import './generated_api.core.v1_generated.dart' as api_core_v1;
import './generated_api.core.v1.config_map__generated.dart' as api_core_v1_config_map_;
import './generated_api.core.v1.container_status__generated.dart' as api_core_v1_container_status_;
import './generated_api.core.v1.csipersistent_volume_source__generated.dart' as api_core_v1_csipersistent_volume_source_;
import './generated_api.core.v1.csivolume_source__generated.dart' as api_core_v1_csivolume_source_;
import './generated_api.core.v1.flex_persistent_volume_source__generated.dart' as api_core_v1_flex_persistent_volume_source_;
import './generated_api.core.v1.flex_volume_source__generated.dart' as api_core_v1_flex_volume_source_;
import './generated_api.core.v1.limit_range_item__generated.dart' as api_core_v1_limit_range_item_;
import './generated_api.core.v1.node_status__generated.dart' as api_core_v1_node_status_;
import './generated_api.core.v1.persistent_volume_claim_status__generated.dart' as api_core_v1_persistent_volume_claim_status_;
import './generated_api.core.v1.persistent_volume_spec__generated.dart' as api_core_v1_persistent_volume_spec_;
import './generated_api.core.v1.pod_spec__generated.dart' as api_core_v1_pod_spec_;
import './generated_api.core.v1.replication_controller_spec__generated.dart' as api_core_v1_replication_controller_spec_;
import './generated_api.core.v1.resource_quota_spec__generated.dart' as api_core_v1_resource_quota_spec_;
import './generated_api.core.v1.resource_quota_status__generated.dart' as api_core_v1_resource_quota_status_;
import './generated_api.core.v1.resource_requirements__generated.dart' as api_core_v1_resource_requirements_;
import './generated_api.core.v1.secret__generated.dart' as api_core_v1_secret_;
import './generated_api.core.v1.service_spec__generated.dart' as api_core_v1_service_spec_;
import './generated_api.core.v1.volume_resource_requirements__generated.dart' as api_core_v1_volume_resource_requirements_;
import './generated_apimachinery.pkg.api.resource_generated.dart' as apimachinery_pkg_api_resource;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;
import './generated_apimachinery.pkg.util.intstr_generated.dart' as apimachinery_pkg_util_intstr;

import './generated_api.core.v1.config_map__generated.dart' as api_core_v1_config_map_;
import './generated_api.core.v1.container_status__generated.dart' as api_core_v1_container_status_;
import './generated_api.core.v1.csipersistent_volume_source__generated.dart' as api_core_v1_csipersistent_volume_source_;
import './generated_api.core.v1.csivolume_source__generated.dart' as api_core_v1_csivolume_source_;
import './generated_api.core.v1.flex_persistent_volume_source__generated.dart' as api_core_v1_flex_persistent_volume_source_;
import './generated_api.core.v1.flex_volume_source__generated.dart' as api_core_v1_flex_volume_source_;
import './generated_api.core.v1.limit_range_item__generated.dart' as api_core_v1_limit_range_item_;
import './generated_api.core.v1.node_status__generated.dart' as api_core_v1_node_status_;
import './generated_api.core.v1.persistent_volume_claim_status__generated.dart' as api_core_v1_persistent_volume_claim_status_;
import './generated_api.core.v1.persistent_volume_spec__generated.dart' as api_core_v1_persistent_volume_spec_;
import './generated_api.core.v1.pod_spec__generated.dart' as api_core_v1_pod_spec_;
import './generated_api.core.v1.replication_controller_spec__generated.dart' as api_core_v1_replication_controller_spec_;
import './generated_api.core.v1.resource_quota_spec__generated.dart' as api_core_v1_resource_quota_spec_;
import './generated_api.core.v1.resource_quota_status__generated.dart' as api_core_v1_resource_quota_status_;
import './generated_api.core.v1.resource_requirements__generated.dart' as api_core_v1_resource_requirements_;
import './generated_api.core.v1.secret__generated.dart' as api_core_v1_secret_;
import './generated_api.core.v1.service_spec__generated.dart' as api_core_v1_service_spec_;
import './generated_api.core.v1.volume_resource_requirements__generated.dart' as api_core_v1_volume_resource_requirements_;
import './generated_api.core.v1_generated.dart' as api_core_v1;
import './generated_apimachinery.pkg.api.resource_generated.dart' as apimachinery_pkg_api_resource;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

class ContainerResourceMetricSource {
  ContainerResourceMetricSource._(this._bc, this._bcOffset);
  factory ContainerResourceMetricSource(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ContainerResourceMetricSource> reader = _ContainerResourceMetricSourceReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  MetricTarget? get target => MetricTarget.reader.vTableGetNullable(_bc, _bcOffset, 6);
  String? get container => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'ContainerResourceMetricSource{name: ${name}, target: ${target}, container: ${container}}';
  }
}

class _ContainerResourceMetricSourceReader extends fb.TableReader<ContainerResourceMetricSource> {
  const _ContainerResourceMetricSourceReader();

  @override
  ContainerResourceMetricSource createObject(fb.BufferContext bc, int offset) => 
    ContainerResourceMetricSource._(bc, offset);
}

class ContainerResourceMetricSourceBuilder {
  ContainerResourceMetricSourceBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addTargetOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addContainerOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ContainerResourceMetricSourceObjectBuilder extends fb.ObjectBuilder {
  final String? _name;
  final MetricTargetObjectBuilder? _target;
  final String? _container;

  ContainerResourceMetricSourceObjectBuilder({
    String? name,
    MetricTargetObjectBuilder? target,
    String? container,
  })
      : _name = name,
        _target = target,
        _container = container;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? targetOffset = _target?.getOrCreateOffset(fbBuilder);
    final int? containerOffset = _container == null ? null
        : fbBuilder.writeString(_container!);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, nameOffset);
    fbBuilder.addOffset(1, targetOffset);
    fbBuilder.addOffset(2, containerOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ContainerResourceMetricStatus {
  ContainerResourceMetricStatus._(this._bc, this._bcOffset);
  factory ContainerResourceMetricStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ContainerResourceMetricStatus> reader = _ContainerResourceMetricStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  MetricValueStatus? get current => MetricValueStatus.reader.vTableGetNullable(_bc, _bcOffset, 6);
  String? get container => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'ContainerResourceMetricStatus{name: ${name}, current: ${current}, container: ${container}}';
  }
}

class _ContainerResourceMetricStatusReader extends fb.TableReader<ContainerResourceMetricStatus> {
  const _ContainerResourceMetricStatusReader();

  @override
  ContainerResourceMetricStatus createObject(fb.BufferContext bc, int offset) => 
    ContainerResourceMetricStatus._(bc, offset);
}

class ContainerResourceMetricStatusBuilder {
  ContainerResourceMetricStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addCurrentOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addContainerOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ContainerResourceMetricStatusObjectBuilder extends fb.ObjectBuilder {
  final String? _name;
  final MetricValueStatusObjectBuilder? _current;
  final String? _container;

  ContainerResourceMetricStatusObjectBuilder({
    String? name,
    MetricValueStatusObjectBuilder? current,
    String? container,
  })
      : _name = name,
        _current = current,
        _container = container;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? currentOffset = _current?.getOrCreateOffset(fbBuilder);
    final int? containerOffset = _container == null ? null
        : fbBuilder.writeString(_container!);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, nameOffset);
    fbBuilder.addOffset(1, currentOffset);
    fbBuilder.addOffset(2, containerOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CrossVersionObjectReference {
  CrossVersionObjectReference._(this._bc, this._bcOffset);
  factory CrossVersionObjectReference(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CrossVersionObjectReference> reader = _CrossVersionObjectReferenceReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get kind => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  String? get apiVersion => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'CrossVersionObjectReference{kind: ${kind}, name: ${name}, apiVersion: ${apiVersion}}';
  }
}

class _CrossVersionObjectReferenceReader extends fb.TableReader<CrossVersionObjectReference> {
  const _CrossVersionObjectReferenceReader();

  @override
  CrossVersionObjectReference createObject(fb.BufferContext bc, int offset) => 
    CrossVersionObjectReference._(bc, offset);
}

class CrossVersionObjectReferenceBuilder {
  CrossVersionObjectReferenceBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addKindOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addNameOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addApiVersionOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CrossVersionObjectReferenceObjectBuilder extends fb.ObjectBuilder {
  final String? _kind;
  final String? _name;
  final String? _apiVersion;

  CrossVersionObjectReferenceObjectBuilder({
    String? kind,
    String? name,
    String? apiVersion,
  })
      : _kind = kind,
        _name = name,
        _apiVersion = apiVersion;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? kindOffset = _kind == null ? null
        : fbBuilder.writeString(_kind!);
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? apiVersionOffset = _apiVersion == null ? null
        : fbBuilder.writeString(_apiVersion!);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, kindOffset);
    fbBuilder.addOffset(1, nameOffset);
    fbBuilder.addOffset(2, apiVersionOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ExternalMetricSource {
  ExternalMetricSource._(this._bc, this._bcOffset);
  factory ExternalMetricSource(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ExternalMetricSource> reader = _ExternalMetricSourceReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  MetricIdentifier? get metric => MetricIdentifier.reader.vTableGetNullable(_bc, _bcOffset, 4);
  MetricTarget? get target => MetricTarget.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ExternalMetricSource{metric: ${metric}, target: ${target}}';
  }
}

class _ExternalMetricSourceReader extends fb.TableReader<ExternalMetricSource> {
  const _ExternalMetricSourceReader();

  @override
  ExternalMetricSource createObject(fb.BufferContext bc, int offset) => 
    ExternalMetricSource._(bc, offset);
}

class ExternalMetricSourceBuilder {
  ExternalMetricSourceBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetricOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addTargetOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ExternalMetricSourceObjectBuilder extends fb.ObjectBuilder {
  final MetricIdentifierObjectBuilder? _metric;
  final MetricTargetObjectBuilder? _target;

  ExternalMetricSourceObjectBuilder({
    MetricIdentifierObjectBuilder? metric,
    MetricTargetObjectBuilder? target,
  })
      : _metric = metric,
        _target = target;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metricOffset = _metric?.getOrCreateOffset(fbBuilder);
    final int? targetOffset = _target?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metricOffset);
    fbBuilder.addOffset(1, targetOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ExternalMetricStatus {
  ExternalMetricStatus._(this._bc, this._bcOffset);
  factory ExternalMetricStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ExternalMetricStatus> reader = _ExternalMetricStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  MetricIdentifier? get metric => MetricIdentifier.reader.vTableGetNullable(_bc, _bcOffset, 4);
  MetricValueStatus? get current => MetricValueStatus.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ExternalMetricStatus{metric: ${metric}, current: ${current}}';
  }
}

class _ExternalMetricStatusReader extends fb.TableReader<ExternalMetricStatus> {
  const _ExternalMetricStatusReader();

  @override
  ExternalMetricStatus createObject(fb.BufferContext bc, int offset) => 
    ExternalMetricStatus._(bc, offset);
}

class ExternalMetricStatusBuilder {
  ExternalMetricStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetricOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addCurrentOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ExternalMetricStatusObjectBuilder extends fb.ObjectBuilder {
  final MetricIdentifierObjectBuilder? _metric;
  final MetricValueStatusObjectBuilder? _current;

  ExternalMetricStatusObjectBuilder({
    MetricIdentifierObjectBuilder? metric,
    MetricValueStatusObjectBuilder? current,
  })
      : _metric = metric,
        _current = current;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metricOffset = _metric?.getOrCreateOffset(fbBuilder);
    final int? currentOffset = _current?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metricOffset);
    fbBuilder.addOffset(1, currentOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class HpascalingPolicy {
  HpascalingPolicy._(this._bc, this._bcOffset);
  factory HpascalingPolicy(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<HpascalingPolicy> reader = _HpascalingPolicyReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get type => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  int get value => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 6, 0);
  int get periodSeconds => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 8, 0);

  @override
  String toString() {
    return 'HpascalingPolicy{type: ${type}, value: ${value}, periodSeconds: ${periodSeconds}}';
  }
}

class _HpascalingPolicyReader extends fb.TableReader<HpascalingPolicy> {
  const _HpascalingPolicyReader();

  @override
  HpascalingPolicy createObject(fb.BufferContext bc, int offset) => 
    HpascalingPolicy._(bc, offset);
}

class HpascalingPolicyBuilder {
  HpascalingPolicyBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addTypeOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addValue(int? value) {
    fbBuilder.addInt32(1, value);
    return fbBuilder.offset;
  }
  int addPeriodSeconds(int? periodSeconds) {
    fbBuilder.addInt32(2, periodSeconds);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class HpascalingPolicyObjectBuilder extends fb.ObjectBuilder {
  final String? _type;
  final int? _value;
  final int? _periodSeconds;

  HpascalingPolicyObjectBuilder({
    String? type,
    int? value,
    int? periodSeconds,
  })
      : _type = type,
        _value = value,
        _periodSeconds = periodSeconds;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? typeOffset = _type == null ? null
        : fbBuilder.writeString(_type!);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, typeOffset);
    fbBuilder.addInt32(1, _value);
    fbBuilder.addInt32(2, _periodSeconds);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class HpascalingRules {
  HpascalingRules._(this._bc, this._bcOffset);
  factory HpascalingRules(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<HpascalingRules> reader = _HpascalingRulesReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  int get stabilizationWindowSeconds => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 4, 0);
  String? get selectPolicy => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  List<HpascalingPolicy>? get policies => const fb.ListReader<HpascalingPolicy>(HpascalingPolicy.reader).vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'HpascalingRules{stabilizationWindowSeconds: ${stabilizationWindowSeconds}, selectPolicy: ${selectPolicy}, policies: ${policies}}';
  }
}

class _HpascalingRulesReader extends fb.TableReader<HpascalingRules> {
  const _HpascalingRulesReader();

  @override
  HpascalingRules createObject(fb.BufferContext bc, int offset) => 
    HpascalingRules._(bc, offset);
}

class HpascalingRulesBuilder {
  HpascalingRulesBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addStabilizationWindowSeconds(int? stabilizationWindowSeconds) {
    fbBuilder.addInt32(0, stabilizationWindowSeconds);
    return fbBuilder.offset;
  }
  int addSelectPolicyOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addPoliciesOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class HpascalingRulesObjectBuilder extends fb.ObjectBuilder {
  final int? _stabilizationWindowSeconds;
  final String? _selectPolicy;
  final List<HpascalingPolicyObjectBuilder>? _policies;

  HpascalingRulesObjectBuilder({
    int? stabilizationWindowSeconds,
    String? selectPolicy,
    List<HpascalingPolicyObjectBuilder>? policies,
  })
      : _stabilizationWindowSeconds = stabilizationWindowSeconds,
        _selectPolicy = selectPolicy,
        _policies = policies;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? selectPolicyOffset = _selectPolicy == null ? null
        : fbBuilder.writeString(_selectPolicy!);
    final int? policiesOffset = _policies == null ? null
        : fbBuilder.writeList(_policies!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(3);
    fbBuilder.addInt32(0, _stabilizationWindowSeconds);
    fbBuilder.addOffset(1, selectPolicyOffset);
    fbBuilder.addOffset(2, policiesOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class HorizontalPodAutoscaler {
  HorizontalPodAutoscaler._(this._bc, this._bcOffset);
  factory HorizontalPodAutoscaler(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<HorizontalPodAutoscaler> reader = _HorizontalPodAutoscalerReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ObjectMeta? get metadata => apimachinery_pkg_apis_meta_v1.ObjectMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  HorizontalPodAutoscalerSpec? get spec => HorizontalPodAutoscalerSpec.reader.vTableGetNullable(_bc, _bcOffset, 6);
  HorizontalPodAutoscalerStatus? get status => HorizontalPodAutoscalerStatus.reader.vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'HorizontalPodAutoscaler{metadata: ${metadata}, spec: ${spec}, status: ${status}}';
  }
}

class _HorizontalPodAutoscalerReader extends fb.TableReader<HorizontalPodAutoscaler> {
  const _HorizontalPodAutoscalerReader();

  @override
  HorizontalPodAutoscaler createObject(fb.BufferContext bc, int offset) => 
    HorizontalPodAutoscaler._(bc, offset);
}

class HorizontalPodAutoscalerBuilder {
  HorizontalPodAutoscalerBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSpecOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addStatusOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class HorizontalPodAutoscalerObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? _metadata;
  final HorizontalPodAutoscalerSpecObjectBuilder? _spec;
  final HorizontalPodAutoscalerStatusObjectBuilder? _status;

  HorizontalPodAutoscalerObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? metadata,
    HorizontalPodAutoscalerSpecObjectBuilder? spec,
    HorizontalPodAutoscalerStatusObjectBuilder? status,
  })
      : _metadata = metadata,
        _spec = spec,
        _status = status;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? specOffset = _spec?.getOrCreateOffset(fbBuilder);
    final int? statusOffset = _status?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, specOffset);
    fbBuilder.addOffset(2, statusOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class HorizontalPodAutoscalerBehavior {
  HorizontalPodAutoscalerBehavior._(this._bc, this._bcOffset);
  factory HorizontalPodAutoscalerBehavior(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<HorizontalPodAutoscalerBehavior> reader = _HorizontalPodAutoscalerBehaviorReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  HpascalingRules? get scaleUp => HpascalingRules.reader.vTableGetNullable(_bc, _bcOffset, 4);
  HpascalingRules? get scaleDown => HpascalingRules.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'HorizontalPodAutoscalerBehavior{scaleUp: ${scaleUp}, scaleDown: ${scaleDown}}';
  }
}

class _HorizontalPodAutoscalerBehaviorReader extends fb.TableReader<HorizontalPodAutoscalerBehavior> {
  const _HorizontalPodAutoscalerBehaviorReader();

  @override
  HorizontalPodAutoscalerBehavior createObject(fb.BufferContext bc, int offset) => 
    HorizontalPodAutoscalerBehavior._(bc, offset);
}

class HorizontalPodAutoscalerBehaviorBuilder {
  HorizontalPodAutoscalerBehaviorBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addScaleUpOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addScaleDownOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class HorizontalPodAutoscalerBehaviorObjectBuilder extends fb.ObjectBuilder {
  final HpascalingRulesObjectBuilder? _scaleUp;
  final HpascalingRulesObjectBuilder? _scaleDown;

  HorizontalPodAutoscalerBehaviorObjectBuilder({
    HpascalingRulesObjectBuilder? scaleUp,
    HpascalingRulesObjectBuilder? scaleDown,
  })
      : _scaleUp = scaleUp,
        _scaleDown = scaleDown;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? scaleUpOffset = _scaleUp?.getOrCreateOffset(fbBuilder);
    final int? scaleDownOffset = _scaleDown?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, scaleUpOffset);
    fbBuilder.addOffset(1, scaleDownOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class HorizontalPodAutoscalerCondition {
  HorizontalPodAutoscalerCondition._(this._bc, this._bcOffset);
  factory HorizontalPodAutoscalerCondition(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<HorizontalPodAutoscalerCondition> reader = _HorizontalPodAutoscalerConditionReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get type => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get status => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  apimachinery_pkg_apis_meta_v1.Time? get lastTransitionTime => apimachinery_pkg_apis_meta_v1.Time.reader.vTableGetNullable(_bc, _bcOffset, 8);
  String? get reason => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  String? get message => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);

  @override
  String toString() {
    return 'HorizontalPodAutoscalerCondition{type: ${type}, status: ${status}, lastTransitionTime: ${lastTransitionTime}, reason: ${reason}, message: ${message}}';
  }
}

class _HorizontalPodAutoscalerConditionReader extends fb.TableReader<HorizontalPodAutoscalerCondition> {
  const _HorizontalPodAutoscalerConditionReader();

  @override
  HorizontalPodAutoscalerCondition createObject(fb.BufferContext bc, int offset) => 
    HorizontalPodAutoscalerCondition._(bc, offset);
}

class HorizontalPodAutoscalerConditionBuilder {
  HorizontalPodAutoscalerConditionBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(5);
  }

  int addTypeOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addStatusOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addLastTransitionTimeOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addReasonOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addMessageOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class HorizontalPodAutoscalerConditionObjectBuilder extends fb.ObjectBuilder {
  final String? _type;
  final String? _status;
  final apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? _lastTransitionTime;
  final String? _reason;
  final String? _message;

  HorizontalPodAutoscalerConditionObjectBuilder({
    String? type,
    String? status,
    apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? lastTransitionTime,
    String? reason,
    String? message,
  })
      : _type = type,
        _status = status,
        _lastTransitionTime = lastTransitionTime,
        _reason = reason,
        _message = message;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? typeOffset = _type == null ? null
        : fbBuilder.writeString(_type!);
    final int? statusOffset = _status == null ? null
        : fbBuilder.writeString(_status!);
    final int? lastTransitionTimeOffset = _lastTransitionTime?.getOrCreateOffset(fbBuilder);
    final int? reasonOffset = _reason == null ? null
        : fbBuilder.writeString(_reason!);
    final int? messageOffset = _message == null ? null
        : fbBuilder.writeString(_message!);
    fbBuilder.startTable(5);
    fbBuilder.addOffset(0, typeOffset);
    fbBuilder.addOffset(1, statusOffset);
    fbBuilder.addOffset(2, lastTransitionTimeOffset);
    fbBuilder.addOffset(3, reasonOffset);
    fbBuilder.addOffset(4, messageOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class HorizontalPodAutoscalerList {
  HorizontalPodAutoscalerList._(this._bc, this._bcOffset);
  factory HorizontalPodAutoscalerList(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<HorizontalPodAutoscalerList> reader = _HorizontalPodAutoscalerListReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ListMeta? get metadata => apimachinery_pkg_apis_meta_v1.ListMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  List<HorizontalPodAutoscaler>? get items => const fb.ListReader<HorizontalPodAutoscaler>(HorizontalPodAutoscaler.reader).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'HorizontalPodAutoscalerList{metadata: ${metadata}, items: ${items}}';
  }
}

class _HorizontalPodAutoscalerListReader extends fb.TableReader<HorizontalPodAutoscalerList> {
  const _HorizontalPodAutoscalerListReader();

  @override
  HorizontalPodAutoscalerList createObject(fb.BufferContext bc, int offset) => 
    HorizontalPodAutoscalerList._(bc, offset);
}

class HorizontalPodAutoscalerListBuilder {
  HorizontalPodAutoscalerListBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addItemsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class HorizontalPodAutoscalerListObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? _metadata;
  final List<HorizontalPodAutoscalerObjectBuilder>? _items;

  HorizontalPodAutoscalerListObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? metadata,
    List<HorizontalPodAutoscalerObjectBuilder>? items,
  })
      : _metadata = metadata,
        _items = items;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? itemsOffset = _items == null ? null
        : fbBuilder.writeList(_items!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, itemsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class HorizontalPodAutoscalerSpec {
  HorizontalPodAutoscalerSpec._(this._bc, this._bcOffset);
  factory HorizontalPodAutoscalerSpec(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<HorizontalPodAutoscalerSpec> reader = _HorizontalPodAutoscalerSpecReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  CrossVersionObjectReference? get scaleTargetRef => CrossVersionObjectReference.reader.vTableGetNullable(_bc, _bcOffset, 4);
  int get minReplicas => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 6, 0);
  int get maxReplicas => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 8, 0);
  List<MetricSpec>? get metrics => const fb.ListReader<MetricSpec>(MetricSpec.reader).vTableGetNullable(_bc, _bcOffset, 10);
  HorizontalPodAutoscalerBehavior? get behavior => HorizontalPodAutoscalerBehavior.reader.vTableGetNullable(_bc, _bcOffset, 12);

  @override
  String toString() {
    return 'HorizontalPodAutoscalerSpec{scaleTargetRef: ${scaleTargetRef}, minReplicas: ${minReplicas}, maxReplicas: ${maxReplicas}, metrics: ${metrics}, behavior: ${behavior}}';
  }
}

class _HorizontalPodAutoscalerSpecReader extends fb.TableReader<HorizontalPodAutoscalerSpec> {
  const _HorizontalPodAutoscalerSpecReader();

  @override
  HorizontalPodAutoscalerSpec createObject(fb.BufferContext bc, int offset) => 
    HorizontalPodAutoscalerSpec._(bc, offset);
}

class HorizontalPodAutoscalerSpecBuilder {
  HorizontalPodAutoscalerSpecBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(5);
  }

  int addScaleTargetRefOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addMinReplicas(int? minReplicas) {
    fbBuilder.addInt32(1, minReplicas);
    return fbBuilder.offset;
  }
  int addMaxReplicas(int? maxReplicas) {
    fbBuilder.addInt32(2, maxReplicas);
    return fbBuilder.offset;
  }
  int addMetricsOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addBehaviorOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class HorizontalPodAutoscalerSpecObjectBuilder extends fb.ObjectBuilder {
  final CrossVersionObjectReferenceObjectBuilder? _scaleTargetRef;
  final int? _minReplicas;
  final int? _maxReplicas;
  final List<MetricSpecObjectBuilder>? _metrics;
  final HorizontalPodAutoscalerBehaviorObjectBuilder? _behavior;

  HorizontalPodAutoscalerSpecObjectBuilder({
    CrossVersionObjectReferenceObjectBuilder? scaleTargetRef,
    int? minReplicas,
    int? maxReplicas,
    List<MetricSpecObjectBuilder>? metrics,
    HorizontalPodAutoscalerBehaviorObjectBuilder? behavior,
  })
      : _scaleTargetRef = scaleTargetRef,
        _minReplicas = minReplicas,
        _maxReplicas = maxReplicas,
        _metrics = metrics,
        _behavior = behavior;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? scaleTargetRefOffset = _scaleTargetRef?.getOrCreateOffset(fbBuilder);
    final int? metricsOffset = _metrics == null ? null
        : fbBuilder.writeList(_metrics!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? behaviorOffset = _behavior?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(5);
    fbBuilder.addOffset(0, scaleTargetRefOffset);
    fbBuilder.addInt32(1, _minReplicas);
    fbBuilder.addInt32(2, _maxReplicas);
    fbBuilder.addOffset(3, metricsOffset);
    fbBuilder.addOffset(4, behaviorOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class HorizontalPodAutoscalerStatus {
  HorizontalPodAutoscalerStatus._(this._bc, this._bcOffset);
  factory HorizontalPodAutoscalerStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<HorizontalPodAutoscalerStatus> reader = _HorizontalPodAutoscalerStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  int get observedGeneration => const fb.Int64Reader().vTableGet(_bc, _bcOffset, 4, 0);
  apimachinery_pkg_apis_meta_v1.Time? get lastScaleTime => apimachinery_pkg_apis_meta_v1.Time.reader.vTableGetNullable(_bc, _bcOffset, 6);
  int get currentReplicas => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 8, 0);
  int get desiredReplicas => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 10, 0);
  List<MetricStatus>? get currentMetrics => const fb.ListReader<MetricStatus>(MetricStatus.reader).vTableGetNullable(_bc, _bcOffset, 12);
  List<HorizontalPodAutoscalerCondition>? get conditions => const fb.ListReader<HorizontalPodAutoscalerCondition>(HorizontalPodAutoscalerCondition.reader).vTableGetNullable(_bc, _bcOffset, 14);

  @override
  String toString() {
    return 'HorizontalPodAutoscalerStatus{observedGeneration: ${observedGeneration}, lastScaleTime: ${lastScaleTime}, currentReplicas: ${currentReplicas}, desiredReplicas: ${desiredReplicas}, currentMetrics: ${currentMetrics}, conditions: ${conditions}}';
  }
}

class _HorizontalPodAutoscalerStatusReader extends fb.TableReader<HorizontalPodAutoscalerStatus> {
  const _HorizontalPodAutoscalerStatusReader();

  @override
  HorizontalPodAutoscalerStatus createObject(fb.BufferContext bc, int offset) => 
    HorizontalPodAutoscalerStatus._(bc, offset);
}

class HorizontalPodAutoscalerStatusBuilder {
  HorizontalPodAutoscalerStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(6);
  }

  int addObservedGeneration(int? observedGeneration) {
    fbBuilder.addInt64(0, observedGeneration);
    return fbBuilder.offset;
  }
  int addLastScaleTimeOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addCurrentReplicas(int? currentReplicas) {
    fbBuilder.addInt32(2, currentReplicas);
    return fbBuilder.offset;
  }
  int addDesiredReplicas(int? desiredReplicas) {
    fbBuilder.addInt32(3, desiredReplicas);
    return fbBuilder.offset;
  }
  int addCurrentMetricsOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addConditionsOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class HorizontalPodAutoscalerStatusObjectBuilder extends fb.ObjectBuilder {
  final int? _observedGeneration;
  final apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? _lastScaleTime;
  final int? _currentReplicas;
  final int? _desiredReplicas;
  final List<MetricStatusObjectBuilder>? _currentMetrics;
  final List<HorizontalPodAutoscalerConditionObjectBuilder>? _conditions;

  HorizontalPodAutoscalerStatusObjectBuilder({
    int? observedGeneration,
    apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? lastScaleTime,
    int? currentReplicas,
    int? desiredReplicas,
    List<MetricStatusObjectBuilder>? currentMetrics,
    List<HorizontalPodAutoscalerConditionObjectBuilder>? conditions,
  })
      : _observedGeneration = observedGeneration,
        _lastScaleTime = lastScaleTime,
        _currentReplicas = currentReplicas,
        _desiredReplicas = desiredReplicas,
        _currentMetrics = currentMetrics,
        _conditions = conditions;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? lastScaleTimeOffset = _lastScaleTime?.getOrCreateOffset(fbBuilder);
    final int? currentMetricsOffset = _currentMetrics == null ? null
        : fbBuilder.writeList(_currentMetrics!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? conditionsOffset = _conditions == null ? null
        : fbBuilder.writeList(_conditions!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(6);
    fbBuilder.addInt64(0, _observedGeneration);
    fbBuilder.addOffset(1, lastScaleTimeOffset);
    fbBuilder.addInt32(2, _currentReplicas);
    fbBuilder.addInt32(3, _desiredReplicas);
    fbBuilder.addOffset(4, currentMetricsOffset);
    fbBuilder.addOffset(5, conditionsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class MetricIdentifier {
  MetricIdentifier._(this._bc, this._bcOffset);
  factory MetricIdentifier(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<MetricIdentifier> reader = _MetricIdentifierReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  apimachinery_pkg_apis_meta_v1.LabelSelector? get selector => apimachinery_pkg_apis_meta_v1.LabelSelector.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'MetricIdentifier{name: ${name}, selector: ${selector}}';
  }
}

class _MetricIdentifierReader extends fb.TableReader<MetricIdentifier> {
  const _MetricIdentifierReader();

  @override
  MetricIdentifier createObject(fb.BufferContext bc, int offset) => 
    MetricIdentifier._(bc, offset);
}

class MetricIdentifierBuilder {
  MetricIdentifierBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSelectorOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class MetricIdentifierObjectBuilder extends fb.ObjectBuilder {
  final String? _name;
  final apimachinery_pkg_apis_meta_v1.LabelSelectorObjectBuilder? _selector;

  MetricIdentifierObjectBuilder({
    String? name,
    apimachinery_pkg_apis_meta_v1.LabelSelectorObjectBuilder? selector,
  })
      : _name = name,
        _selector = selector;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? selectorOffset = _selector?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, nameOffset);
    fbBuilder.addOffset(1, selectorOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class MetricSpec {
  MetricSpec._(this._bc, this._bcOffset);
  factory MetricSpec(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<MetricSpec> reader = _MetricSpecReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get type => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ObjectMetricSource? get object => ObjectMetricSource.reader.vTableGetNullable(_bc, _bcOffset, 6);
  PodsMetricSource? get pods => PodsMetricSource.reader.vTableGetNullable(_bc, _bcOffset, 8);
  ResourceMetricSource? get resource => ResourceMetricSource.reader.vTableGetNullable(_bc, _bcOffset, 10);
  ContainerResourceMetricSource? get containerResource => ContainerResourceMetricSource.reader.vTableGetNullable(_bc, _bcOffset, 12);
  ExternalMetricSource? get $external => ExternalMetricSource.reader.vTableGetNullable(_bc, _bcOffset, 14);

  @override
  String toString() {
    return 'MetricSpec{type: ${type}, object: ${object}, pods: ${pods}, resource: ${resource}, containerResource: ${containerResource}, \$external: ${$external}}';
  }
}

class _MetricSpecReader extends fb.TableReader<MetricSpec> {
  const _MetricSpecReader();

  @override
  MetricSpec createObject(fb.BufferContext bc, int offset) => 
    MetricSpec._(bc, offset);
}

class MetricSpecBuilder {
  MetricSpecBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(6);
  }

  int addTypeOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addObjectOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addPodsOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addResourceOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addContainerResourceOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addExternalOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class MetricSpecObjectBuilder extends fb.ObjectBuilder {
  final String? _type;
  final ObjectMetricSourceObjectBuilder? _object;
  final PodsMetricSourceObjectBuilder? _pods;
  final ResourceMetricSourceObjectBuilder? _resource;
  final ContainerResourceMetricSourceObjectBuilder? _containerResource;
  final ExternalMetricSourceObjectBuilder? _$external;

  MetricSpecObjectBuilder({
    String? type,
    ObjectMetricSourceObjectBuilder? object,
    PodsMetricSourceObjectBuilder? pods,
    ResourceMetricSourceObjectBuilder? resource,
    ContainerResourceMetricSourceObjectBuilder? containerResource,
    ExternalMetricSourceObjectBuilder? $external,
  })
      : _type = type,
        _object = object,
        _pods = pods,
        _resource = resource,
        _containerResource = containerResource,
        _$external = $external;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? typeOffset = _type == null ? null
        : fbBuilder.writeString(_type!);
    final int? objectOffset = _object?.getOrCreateOffset(fbBuilder);
    final int? podsOffset = _pods?.getOrCreateOffset(fbBuilder);
    final int? resourceOffset = _resource?.getOrCreateOffset(fbBuilder);
    final int? containerResourceOffset = _containerResource?.getOrCreateOffset(fbBuilder);
    final int? $externalOffset = _$external?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(6);
    fbBuilder.addOffset(0, typeOffset);
    fbBuilder.addOffset(1, objectOffset);
    fbBuilder.addOffset(2, podsOffset);
    fbBuilder.addOffset(3, resourceOffset);
    fbBuilder.addOffset(4, containerResourceOffset);
    fbBuilder.addOffset(5, $externalOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class MetricStatus {
  MetricStatus._(this._bc, this._bcOffset);
  factory MetricStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<MetricStatus> reader = _MetricStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get type => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ObjectMetricStatus? get object => ObjectMetricStatus.reader.vTableGetNullable(_bc, _bcOffset, 6);
  PodsMetricStatus? get pods => PodsMetricStatus.reader.vTableGetNullable(_bc, _bcOffset, 8);
  ResourceMetricStatus? get resource => ResourceMetricStatus.reader.vTableGetNullable(_bc, _bcOffset, 10);
  ContainerResourceMetricStatus? get containerResource => ContainerResourceMetricStatus.reader.vTableGetNullable(_bc, _bcOffset, 12);
  ExternalMetricStatus? get $external => ExternalMetricStatus.reader.vTableGetNullable(_bc, _bcOffset, 14);

  @override
  String toString() {
    return 'MetricStatus{type: ${type}, object: ${object}, pods: ${pods}, resource: ${resource}, containerResource: ${containerResource}, \$external: ${$external}}';
  }
}

class _MetricStatusReader extends fb.TableReader<MetricStatus> {
  const _MetricStatusReader();

  @override
  MetricStatus createObject(fb.BufferContext bc, int offset) => 
    MetricStatus._(bc, offset);
}

class MetricStatusBuilder {
  MetricStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(6);
  }

  int addTypeOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addObjectOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addPodsOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addResourceOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addContainerResourceOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addExternalOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class MetricStatusObjectBuilder extends fb.ObjectBuilder {
  final String? _type;
  final ObjectMetricStatusObjectBuilder? _object;
  final PodsMetricStatusObjectBuilder? _pods;
  final ResourceMetricStatusObjectBuilder? _resource;
  final ContainerResourceMetricStatusObjectBuilder? _containerResource;
  final ExternalMetricStatusObjectBuilder? _$external;

  MetricStatusObjectBuilder({
    String? type,
    ObjectMetricStatusObjectBuilder? object,
    PodsMetricStatusObjectBuilder? pods,
    ResourceMetricStatusObjectBuilder? resource,
    ContainerResourceMetricStatusObjectBuilder? containerResource,
    ExternalMetricStatusObjectBuilder? $external,
  })
      : _type = type,
        _object = object,
        _pods = pods,
        _resource = resource,
        _containerResource = containerResource,
        _$external = $external;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? typeOffset = _type == null ? null
        : fbBuilder.writeString(_type!);
    final int? objectOffset = _object?.getOrCreateOffset(fbBuilder);
    final int? podsOffset = _pods?.getOrCreateOffset(fbBuilder);
    final int? resourceOffset = _resource?.getOrCreateOffset(fbBuilder);
    final int? containerResourceOffset = _containerResource?.getOrCreateOffset(fbBuilder);
    final int? $externalOffset = _$external?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(6);
    fbBuilder.addOffset(0, typeOffset);
    fbBuilder.addOffset(1, objectOffset);
    fbBuilder.addOffset(2, podsOffset);
    fbBuilder.addOffset(3, resourceOffset);
    fbBuilder.addOffset(4, containerResourceOffset);
    fbBuilder.addOffset(5, $externalOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class MetricTarget {
  MetricTarget._(this._bc, this._bcOffset);
  factory MetricTarget(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<MetricTarget> reader = _MetricTargetReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get type => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  apimachinery_pkg_api_resource.Quantity? get value => apimachinery_pkg_api_resource.Quantity.reader.vTableGetNullable(_bc, _bcOffset, 6);
  apimachinery_pkg_api_resource.Quantity? get averageValue => apimachinery_pkg_api_resource.Quantity.reader.vTableGetNullable(_bc, _bcOffset, 8);
  int get averageUtilization => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 10, 0);

  @override
  String toString() {
    return 'MetricTarget{type: ${type}, value: ${value}, averageValue: ${averageValue}, averageUtilization: ${averageUtilization}}';
  }
}

class _MetricTargetReader extends fb.TableReader<MetricTarget> {
  const _MetricTargetReader();

  @override
  MetricTarget createObject(fb.BufferContext bc, int offset) => 
    MetricTarget._(bc, offset);
}

class MetricTargetBuilder {
  MetricTargetBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addTypeOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addValueOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addAverageValueOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addAverageUtilization(int? averageUtilization) {
    fbBuilder.addInt32(3, averageUtilization);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class MetricTargetObjectBuilder extends fb.ObjectBuilder {
  final String? _type;
  final apimachinery_pkg_api_resource.QuantityObjectBuilder? _value;
  final apimachinery_pkg_api_resource.QuantityObjectBuilder? _averageValue;
  final int? _averageUtilization;

  MetricTargetObjectBuilder({
    String? type,
    apimachinery_pkg_api_resource.QuantityObjectBuilder? value,
    apimachinery_pkg_api_resource.QuantityObjectBuilder? averageValue,
    int? averageUtilization,
  })
      : _type = type,
        _value = value,
        _averageValue = averageValue,
        _averageUtilization = averageUtilization;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? typeOffset = _type == null ? null
        : fbBuilder.writeString(_type!);
    final int? valueOffset = _value?.getOrCreateOffset(fbBuilder);
    final int? averageValueOffset = _averageValue?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(4);
    fbBuilder.addOffset(0, typeOffset);
    fbBuilder.addOffset(1, valueOffset);
    fbBuilder.addOffset(2, averageValueOffset);
    fbBuilder.addInt32(3, _averageUtilization);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class MetricValueStatus {
  MetricValueStatus._(this._bc, this._bcOffset);
  factory MetricValueStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<MetricValueStatus> reader = _MetricValueStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_api_resource.Quantity? get value => apimachinery_pkg_api_resource.Quantity.reader.vTableGetNullable(_bc, _bcOffset, 4);
  apimachinery_pkg_api_resource.Quantity? get averageValue => apimachinery_pkg_api_resource.Quantity.reader.vTableGetNullable(_bc, _bcOffset, 6);
  int get averageUtilization => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 8, 0);

  @override
  String toString() {
    return 'MetricValueStatus{value: ${value}, averageValue: ${averageValue}, averageUtilization: ${averageUtilization}}';
  }
}

class _MetricValueStatusReader extends fb.TableReader<MetricValueStatus> {
  const _MetricValueStatusReader();

  @override
  MetricValueStatus createObject(fb.BufferContext bc, int offset) => 
    MetricValueStatus._(bc, offset);
}

class MetricValueStatusBuilder {
  MetricValueStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addValueOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addAverageValueOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addAverageUtilization(int? averageUtilization) {
    fbBuilder.addInt32(2, averageUtilization);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class MetricValueStatusObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_api_resource.QuantityObjectBuilder? _value;
  final apimachinery_pkg_api_resource.QuantityObjectBuilder? _averageValue;
  final int? _averageUtilization;

  MetricValueStatusObjectBuilder({
    apimachinery_pkg_api_resource.QuantityObjectBuilder? value,
    apimachinery_pkg_api_resource.QuantityObjectBuilder? averageValue,
    int? averageUtilization,
  })
      : _value = value,
        _averageValue = averageValue,
        _averageUtilization = averageUtilization;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? valueOffset = _value?.getOrCreateOffset(fbBuilder);
    final int? averageValueOffset = _averageValue?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, valueOffset);
    fbBuilder.addOffset(1, averageValueOffset);
    fbBuilder.addInt32(2, _averageUtilization);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ObjectMetricSource {
  ObjectMetricSource._(this._bc, this._bcOffset);
  factory ObjectMetricSource(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ObjectMetricSource> reader = _ObjectMetricSourceReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  CrossVersionObjectReference? get describedObject => CrossVersionObjectReference.reader.vTableGetNullable(_bc, _bcOffset, 4);
  MetricTarget? get target => MetricTarget.reader.vTableGetNullable(_bc, _bcOffset, 6);
  MetricIdentifier? get metric => MetricIdentifier.reader.vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'ObjectMetricSource{describedObject: ${describedObject}, target: ${target}, metric: ${metric}}';
  }
}

class _ObjectMetricSourceReader extends fb.TableReader<ObjectMetricSource> {
  const _ObjectMetricSourceReader();

  @override
  ObjectMetricSource createObject(fb.BufferContext bc, int offset) => 
    ObjectMetricSource._(bc, offset);
}

class ObjectMetricSourceBuilder {
  ObjectMetricSourceBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addDescribedObjectOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addTargetOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addMetricOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ObjectMetricSourceObjectBuilder extends fb.ObjectBuilder {
  final CrossVersionObjectReferenceObjectBuilder? _describedObject;
  final MetricTargetObjectBuilder? _target;
  final MetricIdentifierObjectBuilder? _metric;

  ObjectMetricSourceObjectBuilder({
    CrossVersionObjectReferenceObjectBuilder? describedObject,
    MetricTargetObjectBuilder? target,
    MetricIdentifierObjectBuilder? metric,
  })
      : _describedObject = describedObject,
        _target = target,
        _metric = metric;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? describedObjectOffset = _describedObject?.getOrCreateOffset(fbBuilder);
    final int? targetOffset = _target?.getOrCreateOffset(fbBuilder);
    final int? metricOffset = _metric?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, describedObjectOffset);
    fbBuilder.addOffset(1, targetOffset);
    fbBuilder.addOffset(2, metricOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ObjectMetricStatus {
  ObjectMetricStatus._(this._bc, this._bcOffset);
  factory ObjectMetricStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ObjectMetricStatus> reader = _ObjectMetricStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  MetricIdentifier? get metric => MetricIdentifier.reader.vTableGetNullable(_bc, _bcOffset, 4);
  MetricValueStatus? get current => MetricValueStatus.reader.vTableGetNullable(_bc, _bcOffset, 6);
  CrossVersionObjectReference? get describedObject => CrossVersionObjectReference.reader.vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'ObjectMetricStatus{metric: ${metric}, current: ${current}, describedObject: ${describedObject}}';
  }
}

class _ObjectMetricStatusReader extends fb.TableReader<ObjectMetricStatus> {
  const _ObjectMetricStatusReader();

  @override
  ObjectMetricStatus createObject(fb.BufferContext bc, int offset) => 
    ObjectMetricStatus._(bc, offset);
}

class ObjectMetricStatusBuilder {
  ObjectMetricStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addMetricOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addCurrentOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addDescribedObjectOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ObjectMetricStatusObjectBuilder extends fb.ObjectBuilder {
  final MetricIdentifierObjectBuilder? _metric;
  final MetricValueStatusObjectBuilder? _current;
  final CrossVersionObjectReferenceObjectBuilder? _describedObject;

  ObjectMetricStatusObjectBuilder({
    MetricIdentifierObjectBuilder? metric,
    MetricValueStatusObjectBuilder? current,
    CrossVersionObjectReferenceObjectBuilder? describedObject,
  })
      : _metric = metric,
        _current = current,
        _describedObject = describedObject;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metricOffset = _metric?.getOrCreateOffset(fbBuilder);
    final int? currentOffset = _current?.getOrCreateOffset(fbBuilder);
    final int? describedObjectOffset = _describedObject?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, metricOffset);
    fbBuilder.addOffset(1, currentOffset);
    fbBuilder.addOffset(2, describedObjectOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class PodsMetricSource {
  PodsMetricSource._(this._bc, this._bcOffset);
  factory PodsMetricSource(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<PodsMetricSource> reader = _PodsMetricSourceReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  MetricIdentifier? get metric => MetricIdentifier.reader.vTableGetNullable(_bc, _bcOffset, 4);
  MetricTarget? get target => MetricTarget.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'PodsMetricSource{metric: ${metric}, target: ${target}}';
  }
}

class _PodsMetricSourceReader extends fb.TableReader<PodsMetricSource> {
  const _PodsMetricSourceReader();

  @override
  PodsMetricSource createObject(fb.BufferContext bc, int offset) => 
    PodsMetricSource._(bc, offset);
}

class PodsMetricSourceBuilder {
  PodsMetricSourceBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetricOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addTargetOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class PodsMetricSourceObjectBuilder extends fb.ObjectBuilder {
  final MetricIdentifierObjectBuilder? _metric;
  final MetricTargetObjectBuilder? _target;

  PodsMetricSourceObjectBuilder({
    MetricIdentifierObjectBuilder? metric,
    MetricTargetObjectBuilder? target,
  })
      : _metric = metric,
        _target = target;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metricOffset = _metric?.getOrCreateOffset(fbBuilder);
    final int? targetOffset = _target?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metricOffset);
    fbBuilder.addOffset(1, targetOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class PodsMetricStatus {
  PodsMetricStatus._(this._bc, this._bcOffset);
  factory PodsMetricStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<PodsMetricStatus> reader = _PodsMetricStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  MetricIdentifier? get metric => MetricIdentifier.reader.vTableGetNullable(_bc, _bcOffset, 4);
  MetricValueStatus? get current => MetricValueStatus.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'PodsMetricStatus{metric: ${metric}, current: ${current}}';
  }
}

class _PodsMetricStatusReader extends fb.TableReader<PodsMetricStatus> {
  const _PodsMetricStatusReader();

  @override
  PodsMetricStatus createObject(fb.BufferContext bc, int offset) => 
    PodsMetricStatus._(bc, offset);
}

class PodsMetricStatusBuilder {
  PodsMetricStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetricOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addCurrentOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class PodsMetricStatusObjectBuilder extends fb.ObjectBuilder {
  final MetricIdentifierObjectBuilder? _metric;
  final MetricValueStatusObjectBuilder? _current;

  PodsMetricStatusObjectBuilder({
    MetricIdentifierObjectBuilder? metric,
    MetricValueStatusObjectBuilder? current,
  })
      : _metric = metric,
        _current = current;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metricOffset = _metric?.getOrCreateOffset(fbBuilder);
    final int? currentOffset = _current?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metricOffset);
    fbBuilder.addOffset(1, currentOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ResourceMetricSource {
  ResourceMetricSource._(this._bc, this._bcOffset);
  factory ResourceMetricSource(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ResourceMetricSource> reader = _ResourceMetricSourceReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  MetricTarget? get target => MetricTarget.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ResourceMetricSource{name: ${name}, target: ${target}}';
  }
}

class _ResourceMetricSourceReader extends fb.TableReader<ResourceMetricSource> {
  const _ResourceMetricSourceReader();

  @override
  ResourceMetricSource createObject(fb.BufferContext bc, int offset) => 
    ResourceMetricSource._(bc, offset);
}

class ResourceMetricSourceBuilder {
  ResourceMetricSourceBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addTargetOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ResourceMetricSourceObjectBuilder extends fb.ObjectBuilder {
  final String? _name;
  final MetricTargetObjectBuilder? _target;

  ResourceMetricSourceObjectBuilder({
    String? name,
    MetricTargetObjectBuilder? target,
  })
      : _name = name,
        _target = target;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? targetOffset = _target?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, nameOffset);
    fbBuilder.addOffset(1, targetOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ResourceMetricStatus {
  ResourceMetricStatus._(this._bc, this._bcOffset);
  factory ResourceMetricStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ResourceMetricStatus> reader = _ResourceMetricStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  MetricValueStatus? get current => MetricValueStatus.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ResourceMetricStatus{name: ${name}, current: ${current}}';
  }
}

class _ResourceMetricStatusReader extends fb.TableReader<ResourceMetricStatus> {
  const _ResourceMetricStatusReader();

  @override
  ResourceMetricStatus createObject(fb.BufferContext bc, int offset) => 
    ResourceMetricStatus._(bc, offset);
}

class ResourceMetricStatusBuilder {
  ResourceMetricStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addCurrentOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ResourceMetricStatusObjectBuilder extends fb.ObjectBuilder {
  final String? _name;
  final MetricValueStatusObjectBuilder? _current;

  ResourceMetricStatusObjectBuilder({
    String? name,
    MetricValueStatusObjectBuilder? current,
  })
      : _name = name,
        _current = current;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? currentOffset = _current?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, nameOffset);
    fbBuilder.addOffset(1, currentOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
