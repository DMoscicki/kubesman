// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library api.certificates.v1_alpha1;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;

import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

class ClusterTrustBundle {
  ClusterTrustBundle._(this._bc, this._bcOffset);
  factory ClusterTrustBundle(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ClusterTrustBundle> reader = _ClusterTrustBundleReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ObjectMeta? get metadata => apimachinery_pkg_apis_meta_v1.ObjectMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  ClusterTrustBundleSpec? get spec => ClusterTrustBundleSpec.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ClusterTrustBundle{metadata: ${metadata}, spec: ${spec}}';
  }
}

class _ClusterTrustBundleReader extends fb.TableReader<ClusterTrustBundle> {
  const _ClusterTrustBundleReader();

  @override
  ClusterTrustBundle createObject(fb.BufferContext bc, int offset) => 
    ClusterTrustBundle._(bc, offset);
}

class ClusterTrustBundleBuilder {
  ClusterTrustBundleBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSpecOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ClusterTrustBundleObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? _metadata;
  final ClusterTrustBundleSpecObjectBuilder? _spec;

  ClusterTrustBundleObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? metadata,
    ClusterTrustBundleSpecObjectBuilder? spec,
  })
      : _metadata = metadata,
        _spec = spec;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? specOffset = _spec?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, specOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ClusterTrustBundleList {
  ClusterTrustBundleList._(this._bc, this._bcOffset);
  factory ClusterTrustBundleList(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ClusterTrustBundleList> reader = _ClusterTrustBundleListReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ListMeta? get metadata => apimachinery_pkg_apis_meta_v1.ListMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  List<ClusterTrustBundle>? get items => const fb.ListReader<ClusterTrustBundle>(ClusterTrustBundle.reader).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ClusterTrustBundleList{metadata: ${metadata}, items: ${items}}';
  }
}

class _ClusterTrustBundleListReader extends fb.TableReader<ClusterTrustBundleList> {
  const _ClusterTrustBundleListReader();

  @override
  ClusterTrustBundleList createObject(fb.BufferContext bc, int offset) => 
    ClusterTrustBundleList._(bc, offset);
}

class ClusterTrustBundleListBuilder {
  ClusterTrustBundleListBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addItemsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ClusterTrustBundleListObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? _metadata;
  final List<ClusterTrustBundleObjectBuilder>? _items;

  ClusterTrustBundleListObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? metadata,
    List<ClusterTrustBundleObjectBuilder>? items,
  })
      : _metadata = metadata,
        _items = items;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? itemsOffset = _items == null ? null
        : fbBuilder.writeList(_items!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, itemsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ClusterTrustBundleSpec {
  ClusterTrustBundleSpec._(this._bc, this._bcOffset);
  factory ClusterTrustBundleSpec(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ClusterTrustBundleSpec> reader = _ClusterTrustBundleSpecReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get signerName => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get trustBundle => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ClusterTrustBundleSpec{signerName: ${signerName}, trustBundle: ${trustBundle}}';
  }
}

class _ClusterTrustBundleSpecReader extends fb.TableReader<ClusterTrustBundleSpec> {
  const _ClusterTrustBundleSpecReader();

  @override
  ClusterTrustBundleSpec createObject(fb.BufferContext bc, int offset) => 
    ClusterTrustBundleSpec._(bc, offset);
}

class ClusterTrustBundleSpecBuilder {
  ClusterTrustBundleSpecBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addSignerNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addTrustBundleOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ClusterTrustBundleSpecObjectBuilder extends fb.ObjectBuilder {
  final String? _signerName;
  final String? _trustBundle;

  ClusterTrustBundleSpecObjectBuilder({
    String? signerName,
    String? trustBundle,
  })
      : _signerName = signerName,
        _trustBundle = trustBundle;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? signerNameOffset = _signerName == null ? null
        : fbBuilder.writeString(_signerName!);
    final int? trustBundleOffset = _trustBundle == null ? null
        : fbBuilder.writeString(_trustBundle!);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, signerNameOffset);
    fbBuilder.addOffset(1, trustBundleOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
