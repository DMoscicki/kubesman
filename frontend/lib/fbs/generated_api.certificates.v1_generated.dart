// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library api.certificates.v1;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;

import './generated_api.certificates.v1.certificate_signing_request_spec__generated.dart' as api_certificates_v1_certificate_signing_request_spec_;
import './generated_api.core.v1_generated.dart' as api_core_v1;
import './generated_api.core.v1.config_map__generated.dart' as api_core_v1_config_map_;
import './generated_api.core.v1.container_status__generated.dart' as api_core_v1_container_status_;
import './generated_api.core.v1.csipersistent_volume_source__generated.dart' as api_core_v1_csipersistent_volume_source_;
import './generated_api.core.v1.csivolume_source__generated.dart' as api_core_v1_csivolume_source_;
import './generated_api.core.v1.flex_persistent_volume_source__generated.dart' as api_core_v1_flex_persistent_volume_source_;
import './generated_api.core.v1.flex_volume_source__generated.dart' as api_core_v1_flex_volume_source_;
import './generated_api.core.v1.limit_range_item__generated.dart' as api_core_v1_limit_range_item_;
import './generated_api.core.v1.node_status__generated.dart' as api_core_v1_node_status_;
import './generated_api.core.v1.persistent_volume_claim_status__generated.dart' as api_core_v1_persistent_volume_claim_status_;
import './generated_api.core.v1.persistent_volume_spec__generated.dart' as api_core_v1_persistent_volume_spec_;
import './generated_api.core.v1.pod_spec__generated.dart' as api_core_v1_pod_spec_;
import './generated_api.core.v1.replication_controller_spec__generated.dart' as api_core_v1_replication_controller_spec_;
import './generated_api.core.v1.resource_quota_spec__generated.dart' as api_core_v1_resource_quota_spec_;
import './generated_api.core.v1.resource_quota_status__generated.dart' as api_core_v1_resource_quota_status_;
import './generated_api.core.v1.resource_requirements__generated.dart' as api_core_v1_resource_requirements_;
import './generated_api.core.v1.secret__generated.dart' as api_core_v1_secret_;
import './generated_api.core.v1.service_spec__generated.dart' as api_core_v1_service_spec_;
import './generated_api.core.v1.volume_resource_requirements__generated.dart' as api_core_v1_volume_resource_requirements_;
import './generated_apimachinery.pkg.api.resource_generated.dart' as apimachinery_pkg_api_resource;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;
import './generated_apimachinery.pkg.util.intstr_generated.dart' as apimachinery_pkg_util_intstr;

import './generated_api.core.v1.config_map__generated.dart' as api_core_v1_config_map_;
import './generated_api.core.v1.container_status__generated.dart' as api_core_v1_container_status_;
import './generated_api.core.v1.csipersistent_volume_source__generated.dart' as api_core_v1_csipersistent_volume_source_;
import './generated_api.core.v1.csivolume_source__generated.dart' as api_core_v1_csivolume_source_;
import './generated_api.core.v1.flex_persistent_volume_source__generated.dart' as api_core_v1_flex_persistent_volume_source_;
import './generated_api.core.v1.flex_volume_source__generated.dart' as api_core_v1_flex_volume_source_;
import './generated_api.core.v1.limit_range_item__generated.dart' as api_core_v1_limit_range_item_;
import './generated_api.core.v1.node_status__generated.dart' as api_core_v1_node_status_;
import './generated_api.core.v1.persistent_volume_claim_status__generated.dart' as api_core_v1_persistent_volume_claim_status_;
import './generated_api.core.v1.persistent_volume_spec__generated.dart' as api_core_v1_persistent_volume_spec_;
import './generated_api.core.v1.pod_spec__generated.dart' as api_core_v1_pod_spec_;
import './generated_api.core.v1.replication_controller_spec__generated.dart' as api_core_v1_replication_controller_spec_;
import './generated_api.core.v1.resource_quota_spec__generated.dart' as api_core_v1_resource_quota_spec_;
import './generated_api.core.v1.resource_quota_status__generated.dart' as api_core_v1_resource_quota_status_;
import './generated_api.core.v1.resource_requirements__generated.dart' as api_core_v1_resource_requirements_;
import './generated_api.core.v1.secret__generated.dart' as api_core_v1_secret_;
import './generated_api.core.v1.service_spec__generated.dart' as api_core_v1_service_spec_;
import './generated_api.core.v1.volume_resource_requirements__generated.dart' as api_core_v1_volume_resource_requirements_;
import './generated_api.core.v1_generated.dart' as api_core_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

class CertificateSigningRequest {
  CertificateSigningRequest._(this._bc, this._bcOffset);
  factory CertificateSigningRequest(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CertificateSigningRequest> reader = _CertificateSigningRequestReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ObjectMeta? get metadata => apimachinery_pkg_apis_meta_v1.ObjectMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  CertificateSigningRequestSpec? get spec => CertificateSigningRequestSpec.reader.vTableGetNullable(_bc, _bcOffset, 6);
  CertificateSigningRequestStatus? get status => CertificateSigningRequestStatus.reader.vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'CertificateSigningRequest{metadata: ${metadata}, spec: ${spec}, status: ${status}}';
  }
}

class _CertificateSigningRequestReader extends fb.TableReader<CertificateSigningRequest> {
  const _CertificateSigningRequestReader();

  @override
  CertificateSigningRequest createObject(fb.BufferContext bc, int offset) => 
    CertificateSigningRequest._(bc, offset);
}

class CertificateSigningRequestBuilder {
  CertificateSigningRequestBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSpecOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addStatusOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CertificateSigningRequestObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? _metadata;
  final CertificateSigningRequestSpecObjectBuilder? _spec;
  final CertificateSigningRequestStatusObjectBuilder? _status;

  CertificateSigningRequestObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? metadata,
    CertificateSigningRequestSpecObjectBuilder? spec,
    CertificateSigningRequestStatusObjectBuilder? status,
  })
      : _metadata = metadata,
        _spec = spec,
        _status = status;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? specOffset = _spec?.getOrCreateOffset(fbBuilder);
    final int? statusOffset = _status?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, specOffset);
    fbBuilder.addOffset(2, statusOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CertificateSigningRequestCondition {
  CertificateSigningRequestCondition._(this._bc, this._bcOffset);
  factory CertificateSigningRequestCondition(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CertificateSigningRequestCondition> reader = _CertificateSigningRequestConditionReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get type => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get status => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  String? get reason => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  String? get message => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  apimachinery_pkg_apis_meta_v1.Time? get lastUpdateTime => apimachinery_pkg_apis_meta_v1.Time.reader.vTableGetNullable(_bc, _bcOffset, 12);
  apimachinery_pkg_apis_meta_v1.Time? get lastTransitionTime => apimachinery_pkg_apis_meta_v1.Time.reader.vTableGetNullable(_bc, _bcOffset, 14);

  @override
  String toString() {
    return 'CertificateSigningRequestCondition{type: ${type}, status: ${status}, reason: ${reason}, message: ${message}, lastUpdateTime: ${lastUpdateTime}, lastTransitionTime: ${lastTransitionTime}}';
  }
}

class _CertificateSigningRequestConditionReader extends fb.TableReader<CertificateSigningRequestCondition> {
  const _CertificateSigningRequestConditionReader();

  @override
  CertificateSigningRequestCondition createObject(fb.BufferContext bc, int offset) => 
    CertificateSigningRequestCondition._(bc, offset);
}

class CertificateSigningRequestConditionBuilder {
  CertificateSigningRequestConditionBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(6);
  }

  int addTypeOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addStatusOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addReasonOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addMessageOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addLastUpdateTimeOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addLastTransitionTimeOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CertificateSigningRequestConditionObjectBuilder extends fb.ObjectBuilder {
  final String? _type;
  final String? _status;
  final String? _reason;
  final String? _message;
  final apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? _lastUpdateTime;
  final apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? _lastTransitionTime;

  CertificateSigningRequestConditionObjectBuilder({
    String? type,
    String? status,
    String? reason,
    String? message,
    apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? lastUpdateTime,
    apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? lastTransitionTime,
  })
      : _type = type,
        _status = status,
        _reason = reason,
        _message = message,
        _lastUpdateTime = lastUpdateTime,
        _lastTransitionTime = lastTransitionTime;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? typeOffset = _type == null ? null
        : fbBuilder.writeString(_type!);
    final int? statusOffset = _status == null ? null
        : fbBuilder.writeString(_status!);
    final int? reasonOffset = _reason == null ? null
        : fbBuilder.writeString(_reason!);
    final int? messageOffset = _message == null ? null
        : fbBuilder.writeString(_message!);
    final int? lastUpdateTimeOffset = _lastUpdateTime?.getOrCreateOffset(fbBuilder);
    final int? lastTransitionTimeOffset = _lastTransitionTime?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(6);
    fbBuilder.addOffset(0, typeOffset);
    fbBuilder.addOffset(1, statusOffset);
    fbBuilder.addOffset(2, reasonOffset);
    fbBuilder.addOffset(3, messageOffset);
    fbBuilder.addOffset(4, lastUpdateTimeOffset);
    fbBuilder.addOffset(5, lastTransitionTimeOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CertificateSigningRequestList {
  CertificateSigningRequestList._(this._bc, this._bcOffset);
  factory CertificateSigningRequestList(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CertificateSigningRequestList> reader = _CertificateSigningRequestListReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ListMeta? get metadata => apimachinery_pkg_apis_meta_v1.ListMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  List<CertificateSigningRequest>? get items => const fb.ListReader<CertificateSigningRequest>(CertificateSigningRequest.reader).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'CertificateSigningRequestList{metadata: ${metadata}, items: ${items}}';
  }
}

class _CertificateSigningRequestListReader extends fb.TableReader<CertificateSigningRequestList> {
  const _CertificateSigningRequestListReader();

  @override
  CertificateSigningRequestList createObject(fb.BufferContext bc, int offset) => 
    CertificateSigningRequestList._(bc, offset);
}

class CertificateSigningRequestListBuilder {
  CertificateSigningRequestListBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addItemsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CertificateSigningRequestListObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? _metadata;
  final List<CertificateSigningRequestObjectBuilder>? _items;

  CertificateSigningRequestListObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? metadata,
    List<CertificateSigningRequestObjectBuilder>? items,
  })
      : _metadata = metadata,
        _items = items;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? itemsOffset = _items == null ? null
        : fbBuilder.writeList(_items!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, itemsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CertificateSigningRequestSpec {
  CertificateSigningRequestSpec._(this._bc, this._bcOffset);
  factory CertificateSigningRequestSpec(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CertificateSigningRequestSpec> reader = _CertificateSigningRequestSpecReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<int>? get request => const fb.Uint8ListReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get signerName => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  int get expirationSeconds => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 8, 0);
  List<String>? get usages => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 10);
  String? get username => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  String? get uid => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 14);
  List<String>? get groups => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 16);
  List<api_certificates_v1_certificate_signing_request_spec_.ExtraEntry>? get extra => const fb.ListReader<api_certificates_v1_certificate_signing_request_spec_.ExtraEntry>(api_certificates_v1_certificate_signing_request_spec_.ExtraEntry.reader).vTableGetNullable(_bc, _bcOffset, 18);

  @override
  String toString() {
    return 'CertificateSigningRequestSpec{request: ${request}, signerName: ${signerName}, expirationSeconds: ${expirationSeconds}, usages: ${usages}, username: ${username}, uid: ${uid}, groups: ${groups}, extra: ${extra}}';
  }
}

class _CertificateSigningRequestSpecReader extends fb.TableReader<CertificateSigningRequestSpec> {
  const _CertificateSigningRequestSpecReader();

  @override
  CertificateSigningRequestSpec createObject(fb.BufferContext bc, int offset) => 
    CertificateSigningRequestSpec._(bc, offset);
}

class CertificateSigningRequestSpecBuilder {
  CertificateSigningRequestSpecBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(8);
  }

  int addRequestOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSignerNameOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addExpirationSeconds(int? expirationSeconds) {
    fbBuilder.addInt32(2, expirationSeconds);
    return fbBuilder.offset;
  }
  int addUsagesOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addUsernameOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addUidOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addGroupsOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }
  int addExtraOffset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CertificateSigningRequestSpecObjectBuilder extends fb.ObjectBuilder {
  final List<int>? _request;
  final String? _signerName;
  final int? _expirationSeconds;
  final List<String>? _usages;
  final String? _username;
  final String? _uid;
  final List<String>? _groups;
  final List<api_certificates_v1_certificate_signing_request_spec_.ExtraEntryObjectBuilder>? _extra;

  CertificateSigningRequestSpecObjectBuilder({
    List<int>? request,
    String? signerName,
    int? expirationSeconds,
    List<String>? usages,
    String? username,
    String? uid,
    List<String>? groups,
    List<api_certificates_v1_certificate_signing_request_spec_.ExtraEntryObjectBuilder>? extra,
  })
      : _request = request,
        _signerName = signerName,
        _expirationSeconds = expirationSeconds,
        _usages = usages,
        _username = username,
        _uid = uid,
        _groups = groups,
        _extra = extra;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? requestOffset = _request == null ? null
        : fbBuilder.writeListUint8(_request!);
    final int? signerNameOffset = _signerName == null ? null
        : fbBuilder.writeString(_signerName!);
    final int? usagesOffset = _usages == null ? null
        : fbBuilder.writeList(_usages!.map(fbBuilder.writeString).toList());
    final int? usernameOffset = _username == null ? null
        : fbBuilder.writeString(_username!);
    final int? uidOffset = _uid == null ? null
        : fbBuilder.writeString(_uid!);
    final int? groupsOffset = _groups == null ? null
        : fbBuilder.writeList(_groups!.map(fbBuilder.writeString).toList());
    final int? extraOffset = _extra == null ? null
        : fbBuilder.writeList(_extra!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(8);
    fbBuilder.addOffset(0, requestOffset);
    fbBuilder.addOffset(1, signerNameOffset);
    fbBuilder.addInt32(2, _expirationSeconds);
    fbBuilder.addOffset(3, usagesOffset);
    fbBuilder.addOffset(4, usernameOffset);
    fbBuilder.addOffset(5, uidOffset);
    fbBuilder.addOffset(6, groupsOffset);
    fbBuilder.addOffset(7, extraOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CertificateSigningRequestStatus {
  CertificateSigningRequestStatus._(this._bc, this._bcOffset);
  factory CertificateSigningRequestStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CertificateSigningRequestStatus> reader = _CertificateSigningRequestStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<CertificateSigningRequestCondition>? get conditions => const fb.ListReader<CertificateSigningRequestCondition>(CertificateSigningRequestCondition.reader).vTableGetNullable(_bc, _bcOffset, 4);
  List<int>? get certificate => const fb.Uint8ListReader().vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'CertificateSigningRequestStatus{conditions: ${conditions}, certificate: ${certificate}}';
  }
}

class _CertificateSigningRequestStatusReader extends fb.TableReader<CertificateSigningRequestStatus> {
  const _CertificateSigningRequestStatusReader();

  @override
  CertificateSigningRequestStatus createObject(fb.BufferContext bc, int offset) => 
    CertificateSigningRequestStatus._(bc, offset);
}

class CertificateSigningRequestStatusBuilder {
  CertificateSigningRequestStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addConditionsOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addCertificateOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CertificateSigningRequestStatusObjectBuilder extends fb.ObjectBuilder {
  final List<CertificateSigningRequestConditionObjectBuilder>? _conditions;
  final List<int>? _certificate;

  CertificateSigningRequestStatusObjectBuilder({
    List<CertificateSigningRequestConditionObjectBuilder>? conditions,
    List<int>? certificate,
  })
      : _conditions = conditions,
        _certificate = certificate;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? conditionsOffset = _conditions == null ? null
        : fbBuilder.writeList(_conditions!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? certificateOffset = _certificate == null ? null
        : fbBuilder.writeListUint8(_certificate!);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, conditionsOffset);
    fbBuilder.addOffset(1, certificateOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ExtraValue {
  ExtraValue._(this._bc, this._bcOffset);
  factory ExtraValue(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ExtraValue> reader = _ExtraValueReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<String>? get items => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'ExtraValue{items: ${items}}';
  }
}

class _ExtraValueReader extends fb.TableReader<ExtraValue> {
  const _ExtraValueReader();

  @override
  ExtraValue createObject(fb.BufferContext bc, int offset) => 
    ExtraValue._(bc, offset);
}

class ExtraValueBuilder {
  ExtraValueBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addItemsOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ExtraValueObjectBuilder extends fb.ObjectBuilder {
  final List<String>? _items;

  ExtraValueObjectBuilder({
    List<String>? items,
  })
      : _items = items;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? itemsOffset = _items == null ? null
        : fbBuilder.writeList(_items!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, itemsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
