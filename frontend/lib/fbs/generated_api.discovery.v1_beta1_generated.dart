// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library api.discovery.v1_beta1;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;

import './generated_api.core.v1_generated.dart' as api_core_v1;
import './generated_api.core.v1.config_map__generated.dart' as api_core_v1_config_map_;
import './generated_api.core.v1.container_status__generated.dart' as api_core_v1_container_status_;
import './generated_api.core.v1.csipersistent_volume_source__generated.dart' as api_core_v1_csipersistent_volume_source_;
import './generated_api.core.v1.csivolume_source__generated.dart' as api_core_v1_csivolume_source_;
import './generated_api.core.v1.flex_persistent_volume_source__generated.dart' as api_core_v1_flex_persistent_volume_source_;
import './generated_api.core.v1.flex_volume_source__generated.dart' as api_core_v1_flex_volume_source_;
import './generated_api.core.v1.limit_range_item__generated.dart' as api_core_v1_limit_range_item_;
import './generated_api.core.v1.node_status__generated.dart' as api_core_v1_node_status_;
import './generated_api.core.v1.persistent_volume_claim_status__generated.dart' as api_core_v1_persistent_volume_claim_status_;
import './generated_api.core.v1.persistent_volume_spec__generated.dart' as api_core_v1_persistent_volume_spec_;
import './generated_api.core.v1.pod_spec__generated.dart' as api_core_v1_pod_spec_;
import './generated_api.core.v1.replication_controller_spec__generated.dart' as api_core_v1_replication_controller_spec_;
import './generated_api.core.v1.resource_quota_spec__generated.dart' as api_core_v1_resource_quota_spec_;
import './generated_api.core.v1.resource_quota_status__generated.dart' as api_core_v1_resource_quota_status_;
import './generated_api.core.v1.resource_requirements__generated.dart' as api_core_v1_resource_requirements_;
import './generated_api.core.v1.secret__generated.dart' as api_core_v1_secret_;
import './generated_api.core.v1.service_spec__generated.dart' as api_core_v1_service_spec_;
import './generated_api.core.v1.volume_resource_requirements__generated.dart' as api_core_v1_volume_resource_requirements_;
import './generated_api.discovery.v1_beta1.endpoint__generated.dart' as api_discovery_v1_beta1_endpoint_;
import './generated_apimachinery.pkg.api.resource_generated.dart' as apimachinery_pkg_api_resource;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;
import './generated_apimachinery.pkg.util.intstr_generated.dart' as apimachinery_pkg_util_intstr;

import './generated_api.core.v1.config_map__generated.dart' as api_core_v1_config_map_;
import './generated_api.core.v1.container_status__generated.dart' as api_core_v1_container_status_;
import './generated_api.core.v1.csipersistent_volume_source__generated.dart' as api_core_v1_csipersistent_volume_source_;
import './generated_api.core.v1.csivolume_source__generated.dart' as api_core_v1_csivolume_source_;
import './generated_api.core.v1.flex_persistent_volume_source__generated.dart' as api_core_v1_flex_persistent_volume_source_;
import './generated_api.core.v1.flex_volume_source__generated.dart' as api_core_v1_flex_volume_source_;
import './generated_api.core.v1.limit_range_item__generated.dart' as api_core_v1_limit_range_item_;
import './generated_api.core.v1.node_status__generated.dart' as api_core_v1_node_status_;
import './generated_api.core.v1.persistent_volume_claim_status__generated.dart' as api_core_v1_persistent_volume_claim_status_;
import './generated_api.core.v1.persistent_volume_spec__generated.dart' as api_core_v1_persistent_volume_spec_;
import './generated_api.core.v1.pod_spec__generated.dart' as api_core_v1_pod_spec_;
import './generated_api.core.v1.replication_controller_spec__generated.dart' as api_core_v1_replication_controller_spec_;
import './generated_api.core.v1.resource_quota_spec__generated.dart' as api_core_v1_resource_quota_spec_;
import './generated_api.core.v1.resource_quota_status__generated.dart' as api_core_v1_resource_quota_status_;
import './generated_api.core.v1.resource_requirements__generated.dart' as api_core_v1_resource_requirements_;
import './generated_api.core.v1.secret__generated.dart' as api_core_v1_secret_;
import './generated_api.core.v1.service_spec__generated.dart' as api_core_v1_service_spec_;
import './generated_api.core.v1.volume_resource_requirements__generated.dart' as api_core_v1_volume_resource_requirements_;
import './generated_api.core.v1_generated.dart' as api_core_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

class Endpoint {
  Endpoint._(this._bc, this._bcOffset);
  factory Endpoint(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<Endpoint> reader = _EndpointReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<String>? get addresses => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 4);
  EndpointConditions? get conditions => EndpointConditions.reader.vTableGetNullable(_bc, _bcOffset, 6);
  String? get hostname => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  api_core_v1.ObjectReference? get targetRef => api_core_v1.ObjectReference.reader.vTableGetNullable(_bc, _bcOffset, 10);
  List<api_discovery_v1_beta1_endpoint_.TopologyEntry>? get topology => const fb.ListReader<api_discovery_v1_beta1_endpoint_.TopologyEntry>(api_discovery_v1_beta1_endpoint_.TopologyEntry.reader).vTableGetNullable(_bc, _bcOffset, 12);
  String? get nodeName => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 14);
  EndpointHints? get hints => EndpointHints.reader.vTableGetNullable(_bc, _bcOffset, 16);

  @override
  String toString() {
    return 'Endpoint{addresses: ${addresses}, conditions: ${conditions}, hostname: ${hostname}, targetRef: ${targetRef}, topology: ${topology}, nodeName: ${nodeName}, hints: ${hints}}';
  }
}

class _EndpointReader extends fb.TableReader<Endpoint> {
  const _EndpointReader();

  @override
  Endpoint createObject(fb.BufferContext bc, int offset) => 
    Endpoint._(bc, offset);
}

class EndpointBuilder {
  EndpointBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(7);
  }

  int addAddressesOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addConditionsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addHostnameOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addTargetRefOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addTopologyOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addNodeNameOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addHintsOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class EndpointObjectBuilder extends fb.ObjectBuilder {
  final List<String>? _addresses;
  final EndpointConditionsObjectBuilder? _conditions;
  final String? _hostname;
  final api_core_v1.ObjectReferenceObjectBuilder? _targetRef;
  final List<api_discovery_v1_beta1_endpoint_.TopologyEntryObjectBuilder>? _topology;
  final String? _nodeName;
  final EndpointHintsObjectBuilder? _hints;

  EndpointObjectBuilder({
    List<String>? addresses,
    EndpointConditionsObjectBuilder? conditions,
    String? hostname,
    api_core_v1.ObjectReferenceObjectBuilder? targetRef,
    List<api_discovery_v1_beta1_endpoint_.TopologyEntryObjectBuilder>? topology,
    String? nodeName,
    EndpointHintsObjectBuilder? hints,
  })
      : _addresses = addresses,
        _conditions = conditions,
        _hostname = hostname,
        _targetRef = targetRef,
        _topology = topology,
        _nodeName = nodeName,
        _hints = hints;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? addressesOffset = _addresses == null ? null
        : fbBuilder.writeList(_addresses!.map(fbBuilder.writeString).toList());
    final int? conditionsOffset = _conditions?.getOrCreateOffset(fbBuilder);
    final int? hostnameOffset = _hostname == null ? null
        : fbBuilder.writeString(_hostname!);
    final int? targetRefOffset = _targetRef?.getOrCreateOffset(fbBuilder);
    final int? topologyOffset = _topology == null ? null
        : fbBuilder.writeList(_topology!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? nodeNameOffset = _nodeName == null ? null
        : fbBuilder.writeString(_nodeName!);
    final int? hintsOffset = _hints?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(7);
    fbBuilder.addOffset(0, addressesOffset);
    fbBuilder.addOffset(1, conditionsOffset);
    fbBuilder.addOffset(2, hostnameOffset);
    fbBuilder.addOffset(3, targetRefOffset);
    fbBuilder.addOffset(4, topologyOffset);
    fbBuilder.addOffset(5, nodeNameOffset);
    fbBuilder.addOffset(6, hintsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class EndpointConditions {
  EndpointConditions._(this._bc, this._bcOffset);
  factory EndpointConditions(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<EndpointConditions> reader = _EndpointConditionsReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  bool get ready => const fb.BoolReader().vTableGet(_bc, _bcOffset, 4, false);
  bool get serving => const fb.BoolReader().vTableGet(_bc, _bcOffset, 6, false);
  bool get terminating => const fb.BoolReader().vTableGet(_bc, _bcOffset, 8, false);

  @override
  String toString() {
    return 'EndpointConditions{ready: ${ready}, serving: ${serving}, terminating: ${terminating}}';
  }
}

class _EndpointConditionsReader extends fb.TableReader<EndpointConditions> {
  const _EndpointConditionsReader();

  @override
  EndpointConditions createObject(fb.BufferContext bc, int offset) => 
    EndpointConditions._(bc, offset);
}

class EndpointConditionsBuilder {
  EndpointConditionsBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addReady(bool? ready) {
    fbBuilder.addBool(0, ready);
    return fbBuilder.offset;
  }
  int addServing(bool? serving) {
    fbBuilder.addBool(1, serving);
    return fbBuilder.offset;
  }
  int addTerminating(bool? terminating) {
    fbBuilder.addBool(2, terminating);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class EndpointConditionsObjectBuilder extends fb.ObjectBuilder {
  final bool? _ready;
  final bool? _serving;
  final bool? _terminating;

  EndpointConditionsObjectBuilder({
    bool? ready,
    bool? serving,
    bool? terminating,
  })
      : _ready = ready,
        _serving = serving,
        _terminating = terminating;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    fbBuilder.startTable(3);
    fbBuilder.addBool(0, _ready);
    fbBuilder.addBool(1, _serving);
    fbBuilder.addBool(2, _terminating);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class EndpointHints {
  EndpointHints._(this._bc, this._bcOffset);
  factory EndpointHints(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<EndpointHints> reader = _EndpointHintsReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<ForZone>? get forZones => const fb.ListReader<ForZone>(ForZone.reader).vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'EndpointHints{forZones: ${forZones}}';
  }
}

class _EndpointHintsReader extends fb.TableReader<EndpointHints> {
  const _EndpointHintsReader();

  @override
  EndpointHints createObject(fb.BufferContext bc, int offset) => 
    EndpointHints._(bc, offset);
}

class EndpointHintsBuilder {
  EndpointHintsBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addForZonesOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class EndpointHintsObjectBuilder extends fb.ObjectBuilder {
  final List<ForZoneObjectBuilder>? _forZones;

  EndpointHintsObjectBuilder({
    List<ForZoneObjectBuilder>? forZones,
  })
      : _forZones = forZones;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? forZonesOffset = _forZones == null ? null
        : fbBuilder.writeList(_forZones!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, forZonesOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class EndpointPort {
  EndpointPort._(this._bc, this._bcOffset);
  factory EndpointPort(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<EndpointPort> reader = _EndpointPortReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get protocol => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  int get port => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 8, 0);
  String? get appProtocol => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);

  @override
  String toString() {
    return 'EndpointPort{name: ${name}, protocol: ${protocol}, port: ${port}, appProtocol: ${appProtocol}}';
  }
}

class _EndpointPortReader extends fb.TableReader<EndpointPort> {
  const _EndpointPortReader();

  @override
  EndpointPort createObject(fb.BufferContext bc, int offset) => 
    EndpointPort._(bc, offset);
}

class EndpointPortBuilder {
  EndpointPortBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addProtocolOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addPort(int? port) {
    fbBuilder.addInt32(2, port);
    return fbBuilder.offset;
  }
  int addAppProtocolOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class EndpointPortObjectBuilder extends fb.ObjectBuilder {
  final String? _name;
  final String? _protocol;
  final int? _port;
  final String? _appProtocol;

  EndpointPortObjectBuilder({
    String? name,
    String? protocol,
    int? port,
    String? appProtocol,
  })
      : _name = name,
        _protocol = protocol,
        _port = port,
        _appProtocol = appProtocol;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? protocolOffset = _protocol == null ? null
        : fbBuilder.writeString(_protocol!);
    final int? appProtocolOffset = _appProtocol == null ? null
        : fbBuilder.writeString(_appProtocol!);
    fbBuilder.startTable(4);
    fbBuilder.addOffset(0, nameOffset);
    fbBuilder.addOffset(1, protocolOffset);
    fbBuilder.addInt32(2, _port);
    fbBuilder.addOffset(3, appProtocolOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class EndpointSlice {
  EndpointSlice._(this._bc, this._bcOffset);
  factory EndpointSlice(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<EndpointSlice> reader = _EndpointSliceReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ObjectMeta? get metadata => apimachinery_pkg_apis_meta_v1.ObjectMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  String? get addressType => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  List<Endpoint>? get endpoints => const fb.ListReader<Endpoint>(Endpoint.reader).vTableGetNullable(_bc, _bcOffset, 8);
  List<EndpointPort>? get ports => const fb.ListReader<EndpointPort>(EndpointPort.reader).vTableGetNullable(_bc, _bcOffset, 10);

  @override
  String toString() {
    return 'EndpointSlice{metadata: ${metadata}, addressType: ${addressType}, endpoints: ${endpoints}, ports: ${ports}}';
  }
}

class _EndpointSliceReader extends fb.TableReader<EndpointSlice> {
  const _EndpointSliceReader();

  @override
  EndpointSlice createObject(fb.BufferContext bc, int offset) => 
    EndpointSlice._(bc, offset);
}

class EndpointSliceBuilder {
  EndpointSliceBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addAddressTypeOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addEndpointsOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addPortsOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class EndpointSliceObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? _metadata;
  final String? _addressType;
  final List<EndpointObjectBuilder>? _endpoints;
  final List<EndpointPortObjectBuilder>? _ports;

  EndpointSliceObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? metadata,
    String? addressType,
    List<EndpointObjectBuilder>? endpoints,
    List<EndpointPortObjectBuilder>? ports,
  })
      : _metadata = metadata,
        _addressType = addressType,
        _endpoints = endpoints,
        _ports = ports;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? addressTypeOffset = _addressType == null ? null
        : fbBuilder.writeString(_addressType!);
    final int? endpointsOffset = _endpoints == null ? null
        : fbBuilder.writeList(_endpoints!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? portsOffset = _ports == null ? null
        : fbBuilder.writeList(_ports!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(4);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, addressTypeOffset);
    fbBuilder.addOffset(2, endpointsOffset);
    fbBuilder.addOffset(3, portsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class EndpointSliceList {
  EndpointSliceList._(this._bc, this._bcOffset);
  factory EndpointSliceList(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<EndpointSliceList> reader = _EndpointSliceListReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ListMeta? get metadata => apimachinery_pkg_apis_meta_v1.ListMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  List<EndpointSlice>? get items => const fb.ListReader<EndpointSlice>(EndpointSlice.reader).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'EndpointSliceList{metadata: ${metadata}, items: ${items}}';
  }
}

class _EndpointSliceListReader extends fb.TableReader<EndpointSliceList> {
  const _EndpointSliceListReader();

  @override
  EndpointSliceList createObject(fb.BufferContext bc, int offset) => 
    EndpointSliceList._(bc, offset);
}

class EndpointSliceListBuilder {
  EndpointSliceListBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addItemsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class EndpointSliceListObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? _metadata;
  final List<EndpointSliceObjectBuilder>? _items;

  EndpointSliceListObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? metadata,
    List<EndpointSliceObjectBuilder>? items,
  })
      : _metadata = metadata,
        _items = items;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? itemsOffset = _items == null ? null
        : fbBuilder.writeList(_items!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, itemsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ForZone {
  ForZone._(this._bc, this._bcOffset);
  factory ForZone(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ForZone> reader = _ForZoneReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'ForZone{name: ${name}}';
  }
}

class _ForZoneReader extends fb.TableReader<ForZone> {
  const _ForZoneReader();

  @override
  ForZone createObject(fb.BufferContext bc, int offset) => 
    ForZone._(bc, offset);
}

class ForZoneBuilder {
  ForZoneBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ForZoneObjectBuilder extends fb.ObjectBuilder {
  final String? _name;

  ForZoneObjectBuilder({
    String? name,
  })
      : _name = name;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, nameOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
