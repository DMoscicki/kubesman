// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library api.events.v1_beta1;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;

import './generated_api.core.v1_generated.dart' as api_core_v1;
import './generated_api.core.v1.config_map__generated.dart' as api_core_v1_config_map_;
import './generated_api.core.v1.container_status__generated.dart' as api_core_v1_container_status_;
import './generated_api.core.v1.csipersistent_volume_source__generated.dart' as api_core_v1_csipersistent_volume_source_;
import './generated_api.core.v1.csivolume_source__generated.dart' as api_core_v1_csivolume_source_;
import './generated_api.core.v1.flex_persistent_volume_source__generated.dart' as api_core_v1_flex_persistent_volume_source_;
import './generated_api.core.v1.flex_volume_source__generated.dart' as api_core_v1_flex_volume_source_;
import './generated_api.core.v1.limit_range_item__generated.dart' as api_core_v1_limit_range_item_;
import './generated_api.core.v1.node_status__generated.dart' as api_core_v1_node_status_;
import './generated_api.core.v1.persistent_volume_claim_status__generated.dart' as api_core_v1_persistent_volume_claim_status_;
import './generated_api.core.v1.persistent_volume_spec__generated.dart' as api_core_v1_persistent_volume_spec_;
import './generated_api.core.v1.pod_spec__generated.dart' as api_core_v1_pod_spec_;
import './generated_api.core.v1.replication_controller_spec__generated.dart' as api_core_v1_replication_controller_spec_;
import './generated_api.core.v1.resource_quota_spec__generated.dart' as api_core_v1_resource_quota_spec_;
import './generated_api.core.v1.resource_quota_status__generated.dart' as api_core_v1_resource_quota_status_;
import './generated_api.core.v1.resource_requirements__generated.dart' as api_core_v1_resource_requirements_;
import './generated_api.core.v1.secret__generated.dart' as api_core_v1_secret_;
import './generated_api.core.v1.service_spec__generated.dart' as api_core_v1_service_spec_;
import './generated_api.core.v1.volume_resource_requirements__generated.dart' as api_core_v1_volume_resource_requirements_;
import './generated_apimachinery.pkg.api.resource_generated.dart' as apimachinery_pkg_api_resource;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;
import './generated_apimachinery.pkg.util.intstr_generated.dart' as apimachinery_pkg_util_intstr;

import './generated_api.core.v1.config_map__generated.dart' as api_core_v1_config_map_;
import './generated_api.core.v1.container_status__generated.dart' as api_core_v1_container_status_;
import './generated_api.core.v1.csipersistent_volume_source__generated.dart' as api_core_v1_csipersistent_volume_source_;
import './generated_api.core.v1.csivolume_source__generated.dart' as api_core_v1_csivolume_source_;
import './generated_api.core.v1.flex_persistent_volume_source__generated.dart' as api_core_v1_flex_persistent_volume_source_;
import './generated_api.core.v1.flex_volume_source__generated.dart' as api_core_v1_flex_volume_source_;
import './generated_api.core.v1.limit_range_item__generated.dart' as api_core_v1_limit_range_item_;
import './generated_api.core.v1.node_status__generated.dart' as api_core_v1_node_status_;
import './generated_api.core.v1.persistent_volume_claim_status__generated.dart' as api_core_v1_persistent_volume_claim_status_;
import './generated_api.core.v1.persistent_volume_spec__generated.dart' as api_core_v1_persistent_volume_spec_;
import './generated_api.core.v1.pod_spec__generated.dart' as api_core_v1_pod_spec_;
import './generated_api.core.v1.replication_controller_spec__generated.dart' as api_core_v1_replication_controller_spec_;
import './generated_api.core.v1.resource_quota_spec__generated.dart' as api_core_v1_resource_quota_spec_;
import './generated_api.core.v1.resource_quota_status__generated.dart' as api_core_v1_resource_quota_status_;
import './generated_api.core.v1.resource_requirements__generated.dart' as api_core_v1_resource_requirements_;
import './generated_api.core.v1.secret__generated.dart' as api_core_v1_secret_;
import './generated_api.core.v1.service_spec__generated.dart' as api_core_v1_service_spec_;
import './generated_api.core.v1.volume_resource_requirements__generated.dart' as api_core_v1_volume_resource_requirements_;
import './generated_api.core.v1_generated.dart' as api_core_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

class Event {
  Event._(this._bc, this._bcOffset);
  factory Event(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<Event> reader = _EventReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ObjectMeta? get metadata => apimachinery_pkg_apis_meta_v1.ObjectMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  apimachinery_pkg_apis_meta_v1.MicroTime? get eventTime => apimachinery_pkg_apis_meta_v1.MicroTime.reader.vTableGetNullable(_bc, _bcOffset, 6);
  EventSeries? get series => EventSeries.reader.vTableGetNullable(_bc, _bcOffset, 8);
  String? get reportingController => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  String? get reportingInstance => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  String? get action => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 14);
  String? get reason => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 16);
  api_core_v1.ObjectReference? get regarding => api_core_v1.ObjectReference.reader.vTableGetNullable(_bc, _bcOffset, 18);
  api_core_v1.ObjectReference? get related => api_core_v1.ObjectReference.reader.vTableGetNullable(_bc, _bcOffset, 20);
  String? get note => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 22);
  String? get type => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 24);
  api_core_v1.EventSource? get deprecatedSource => api_core_v1.EventSource.reader.vTableGetNullable(_bc, _bcOffset, 26);
  apimachinery_pkg_apis_meta_v1.Time? get deprecatedFirstTimestamp => apimachinery_pkg_apis_meta_v1.Time.reader.vTableGetNullable(_bc, _bcOffset, 28);
  apimachinery_pkg_apis_meta_v1.Time? get deprecatedLastTimestamp => apimachinery_pkg_apis_meta_v1.Time.reader.vTableGetNullable(_bc, _bcOffset, 30);
  int get deprecatedCount => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 32, 0);

  @override
  String toString() {
    return 'Event{metadata: ${metadata}, eventTime: ${eventTime}, series: ${series}, reportingController: ${reportingController}, reportingInstance: ${reportingInstance}, action: ${action}, reason: ${reason}, regarding: ${regarding}, related: ${related}, note: ${note}, type: ${type}, deprecatedSource: ${deprecatedSource}, deprecatedFirstTimestamp: ${deprecatedFirstTimestamp}, deprecatedLastTimestamp: ${deprecatedLastTimestamp}, deprecatedCount: ${deprecatedCount}}';
  }
}

class _EventReader extends fb.TableReader<Event> {
  const _EventReader();

  @override
  Event createObject(fb.BufferContext bc, int offset) => 
    Event._(bc, offset);
}

class EventBuilder {
  EventBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(15);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addEventTimeOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addSeriesOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addReportingControllerOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addReportingInstanceOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addActionOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addReasonOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }
  int addRegardingOffset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }
  int addRelatedOffset(int? offset) {
    fbBuilder.addOffset(8, offset);
    return fbBuilder.offset;
  }
  int addNoteOffset(int? offset) {
    fbBuilder.addOffset(9, offset);
    return fbBuilder.offset;
  }
  int addTypeOffset(int? offset) {
    fbBuilder.addOffset(10, offset);
    return fbBuilder.offset;
  }
  int addDeprecatedSourceOffset(int? offset) {
    fbBuilder.addOffset(11, offset);
    return fbBuilder.offset;
  }
  int addDeprecatedFirstTimestampOffset(int? offset) {
    fbBuilder.addOffset(12, offset);
    return fbBuilder.offset;
  }
  int addDeprecatedLastTimestampOffset(int? offset) {
    fbBuilder.addOffset(13, offset);
    return fbBuilder.offset;
  }
  int addDeprecatedCount(int? deprecatedCount) {
    fbBuilder.addInt32(14, deprecatedCount);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class EventObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? _metadata;
  final apimachinery_pkg_apis_meta_v1.MicroTimeObjectBuilder? _eventTime;
  final EventSeriesObjectBuilder? _series;
  final String? _reportingController;
  final String? _reportingInstance;
  final String? _action;
  final String? _reason;
  final api_core_v1.ObjectReferenceObjectBuilder? _regarding;
  final api_core_v1.ObjectReferenceObjectBuilder? _related;
  final String? _note;
  final String? _type;
  final api_core_v1.EventSourceObjectBuilder? _deprecatedSource;
  final apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? _deprecatedFirstTimestamp;
  final apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? _deprecatedLastTimestamp;
  final int? _deprecatedCount;

  EventObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? metadata,
    apimachinery_pkg_apis_meta_v1.MicroTimeObjectBuilder? eventTime,
    EventSeriesObjectBuilder? series,
    String? reportingController,
    String? reportingInstance,
    String? action,
    String? reason,
    api_core_v1.ObjectReferenceObjectBuilder? regarding,
    api_core_v1.ObjectReferenceObjectBuilder? related,
    String? note,
    String? type,
    api_core_v1.EventSourceObjectBuilder? deprecatedSource,
    apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? deprecatedFirstTimestamp,
    apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? deprecatedLastTimestamp,
    int? deprecatedCount,
  })
      : _metadata = metadata,
        _eventTime = eventTime,
        _series = series,
        _reportingController = reportingController,
        _reportingInstance = reportingInstance,
        _action = action,
        _reason = reason,
        _regarding = regarding,
        _related = related,
        _note = note,
        _type = type,
        _deprecatedSource = deprecatedSource,
        _deprecatedFirstTimestamp = deprecatedFirstTimestamp,
        _deprecatedLastTimestamp = deprecatedLastTimestamp,
        _deprecatedCount = deprecatedCount;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? eventTimeOffset = _eventTime?.getOrCreateOffset(fbBuilder);
    final int? seriesOffset = _series?.getOrCreateOffset(fbBuilder);
    final int? reportingControllerOffset = _reportingController == null ? null
        : fbBuilder.writeString(_reportingController!);
    final int? reportingInstanceOffset = _reportingInstance == null ? null
        : fbBuilder.writeString(_reportingInstance!);
    final int? actionOffset = _action == null ? null
        : fbBuilder.writeString(_action!);
    final int? reasonOffset = _reason == null ? null
        : fbBuilder.writeString(_reason!);
    final int? regardingOffset = _regarding?.getOrCreateOffset(fbBuilder);
    final int? relatedOffset = _related?.getOrCreateOffset(fbBuilder);
    final int? noteOffset = _note == null ? null
        : fbBuilder.writeString(_note!);
    final int? typeOffset = _type == null ? null
        : fbBuilder.writeString(_type!);
    final int? deprecatedSourceOffset = _deprecatedSource?.getOrCreateOffset(fbBuilder);
    final int? deprecatedFirstTimestampOffset = _deprecatedFirstTimestamp?.getOrCreateOffset(fbBuilder);
    final int? deprecatedLastTimestampOffset = _deprecatedLastTimestamp?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(15);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, eventTimeOffset);
    fbBuilder.addOffset(2, seriesOffset);
    fbBuilder.addOffset(3, reportingControllerOffset);
    fbBuilder.addOffset(4, reportingInstanceOffset);
    fbBuilder.addOffset(5, actionOffset);
    fbBuilder.addOffset(6, reasonOffset);
    fbBuilder.addOffset(7, regardingOffset);
    fbBuilder.addOffset(8, relatedOffset);
    fbBuilder.addOffset(9, noteOffset);
    fbBuilder.addOffset(10, typeOffset);
    fbBuilder.addOffset(11, deprecatedSourceOffset);
    fbBuilder.addOffset(12, deprecatedFirstTimestampOffset);
    fbBuilder.addOffset(13, deprecatedLastTimestampOffset);
    fbBuilder.addInt32(14, _deprecatedCount);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class EventList {
  EventList._(this._bc, this._bcOffset);
  factory EventList(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<EventList> reader = _EventListReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ListMeta? get metadata => apimachinery_pkg_apis_meta_v1.ListMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  List<Event>? get items => const fb.ListReader<Event>(Event.reader).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'EventList{metadata: ${metadata}, items: ${items}}';
  }
}

class _EventListReader extends fb.TableReader<EventList> {
  const _EventListReader();

  @override
  EventList createObject(fb.BufferContext bc, int offset) => 
    EventList._(bc, offset);
}

class EventListBuilder {
  EventListBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addItemsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class EventListObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? _metadata;
  final List<EventObjectBuilder>? _items;

  EventListObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? metadata,
    List<EventObjectBuilder>? items,
  })
      : _metadata = metadata,
        _items = items;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? itemsOffset = _items == null ? null
        : fbBuilder.writeList(_items!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, itemsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class EventSeries {
  EventSeries._(this._bc, this._bcOffset);
  factory EventSeries(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<EventSeries> reader = _EventSeriesReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  int get count => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 4, 0);
  apimachinery_pkg_apis_meta_v1.MicroTime? get lastObservedTime => apimachinery_pkg_apis_meta_v1.MicroTime.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'EventSeries{count: ${count}, lastObservedTime: ${lastObservedTime}}';
  }
}

class _EventSeriesReader extends fb.TableReader<EventSeries> {
  const _EventSeriesReader();

  @override
  EventSeries createObject(fb.BufferContext bc, int offset) => 
    EventSeries._(bc, offset);
}

class EventSeriesBuilder {
  EventSeriesBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addCount(int? count) {
    fbBuilder.addInt32(0, count);
    return fbBuilder.offset;
  }
  int addLastObservedTimeOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class EventSeriesObjectBuilder extends fb.ObjectBuilder {
  final int? _count;
  final apimachinery_pkg_apis_meta_v1.MicroTimeObjectBuilder? _lastObservedTime;

  EventSeriesObjectBuilder({
    int? count,
    apimachinery_pkg_apis_meta_v1.MicroTimeObjectBuilder? lastObservedTime,
  })
      : _count = count,
        _lastObservedTime = lastObservedTime;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? lastObservedTimeOffset = _lastObservedTime?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addInt32(0, _count);
    fbBuilder.addOffset(1, lastObservedTimeOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
