// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library api.networking.v1_beta1;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;

import './generated_api.core.v1_generated.dart' as api_core_v1;
import './generated_api.core.v1.config_map__generated.dart' as api_core_v1_config_map_;
import './generated_api.core.v1.container_status__generated.dart' as api_core_v1_container_status_;
import './generated_api.core.v1.csipersistent_volume_source__generated.dart' as api_core_v1_csipersistent_volume_source_;
import './generated_api.core.v1.csivolume_source__generated.dart' as api_core_v1_csivolume_source_;
import './generated_api.core.v1.flex_persistent_volume_source__generated.dart' as api_core_v1_flex_persistent_volume_source_;
import './generated_api.core.v1.flex_volume_source__generated.dart' as api_core_v1_flex_volume_source_;
import './generated_api.core.v1.limit_range_item__generated.dart' as api_core_v1_limit_range_item_;
import './generated_api.core.v1.node_status__generated.dart' as api_core_v1_node_status_;
import './generated_api.core.v1.persistent_volume_claim_status__generated.dart' as api_core_v1_persistent_volume_claim_status_;
import './generated_api.core.v1.persistent_volume_spec__generated.dart' as api_core_v1_persistent_volume_spec_;
import './generated_api.core.v1.pod_spec__generated.dart' as api_core_v1_pod_spec_;
import './generated_api.core.v1.replication_controller_spec__generated.dart' as api_core_v1_replication_controller_spec_;
import './generated_api.core.v1.resource_quota_spec__generated.dart' as api_core_v1_resource_quota_spec_;
import './generated_api.core.v1.resource_quota_status__generated.dart' as api_core_v1_resource_quota_status_;
import './generated_api.core.v1.resource_requirements__generated.dart' as api_core_v1_resource_requirements_;
import './generated_api.core.v1.secret__generated.dart' as api_core_v1_secret_;
import './generated_api.core.v1.service_spec__generated.dart' as api_core_v1_service_spec_;
import './generated_api.core.v1.volume_resource_requirements__generated.dart' as api_core_v1_volume_resource_requirements_;
import './generated_apimachinery.pkg.api.resource_generated.dart' as apimachinery_pkg_api_resource;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;
import './generated_apimachinery.pkg.util.intstr_generated.dart' as apimachinery_pkg_util_intstr;

import './generated_api.core.v1.config_map__generated.dart' as api_core_v1_config_map_;
import './generated_api.core.v1.container_status__generated.dart' as api_core_v1_container_status_;
import './generated_api.core.v1.csipersistent_volume_source__generated.dart' as api_core_v1_csipersistent_volume_source_;
import './generated_api.core.v1.csivolume_source__generated.dart' as api_core_v1_csivolume_source_;
import './generated_api.core.v1.flex_persistent_volume_source__generated.dart' as api_core_v1_flex_persistent_volume_source_;
import './generated_api.core.v1.flex_volume_source__generated.dart' as api_core_v1_flex_volume_source_;
import './generated_api.core.v1.limit_range_item__generated.dart' as api_core_v1_limit_range_item_;
import './generated_api.core.v1.node_status__generated.dart' as api_core_v1_node_status_;
import './generated_api.core.v1.persistent_volume_claim_status__generated.dart' as api_core_v1_persistent_volume_claim_status_;
import './generated_api.core.v1.persistent_volume_spec__generated.dart' as api_core_v1_persistent_volume_spec_;
import './generated_api.core.v1.pod_spec__generated.dart' as api_core_v1_pod_spec_;
import './generated_api.core.v1.replication_controller_spec__generated.dart' as api_core_v1_replication_controller_spec_;
import './generated_api.core.v1.resource_quota_spec__generated.dart' as api_core_v1_resource_quota_spec_;
import './generated_api.core.v1.resource_quota_status__generated.dart' as api_core_v1_resource_quota_status_;
import './generated_api.core.v1.resource_requirements__generated.dart' as api_core_v1_resource_requirements_;
import './generated_api.core.v1.secret__generated.dart' as api_core_v1_secret_;
import './generated_api.core.v1.service_spec__generated.dart' as api_core_v1_service_spec_;
import './generated_api.core.v1.volume_resource_requirements__generated.dart' as api_core_v1_volume_resource_requirements_;
import './generated_api.core.v1_generated.dart' as api_core_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;
import './generated_apimachinery.pkg.util.intstr_generated.dart' as apimachinery_pkg_util_intstr;

class HttpingressPath {
  HttpingressPath._(this._bc, this._bcOffset);
  factory HttpingressPath(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<HttpingressPath> reader = _HttpingressPathReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get path => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get pathType => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  IngressBackend? get backend => IngressBackend.reader.vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'HttpingressPath{path: ${path}, pathType: ${pathType}, backend: ${backend}}';
  }
}

class _HttpingressPathReader extends fb.TableReader<HttpingressPath> {
  const _HttpingressPathReader();

  @override
  HttpingressPath createObject(fb.BufferContext bc, int offset) => 
    HttpingressPath._(bc, offset);
}

class HttpingressPathBuilder {
  HttpingressPathBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addPathOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addPathTypeOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addBackendOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class HttpingressPathObjectBuilder extends fb.ObjectBuilder {
  final String? _path;
  final String? _pathType;
  final IngressBackendObjectBuilder? _backend;

  HttpingressPathObjectBuilder({
    String? path,
    String? pathType,
    IngressBackendObjectBuilder? backend,
  })
      : _path = path,
        _pathType = pathType,
        _backend = backend;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? pathOffset = _path == null ? null
        : fbBuilder.writeString(_path!);
    final int? pathTypeOffset = _pathType == null ? null
        : fbBuilder.writeString(_pathType!);
    final int? backendOffset = _backend?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, pathOffset);
    fbBuilder.addOffset(1, pathTypeOffset);
    fbBuilder.addOffset(2, backendOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class HttpingressRuleValue {
  HttpingressRuleValue._(this._bc, this._bcOffset);
  factory HttpingressRuleValue(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<HttpingressRuleValue> reader = _HttpingressRuleValueReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<HttpingressPath>? get paths => const fb.ListReader<HttpingressPath>(HttpingressPath.reader).vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'HttpingressRuleValue{paths: ${paths}}';
  }
}

class _HttpingressRuleValueReader extends fb.TableReader<HttpingressRuleValue> {
  const _HttpingressRuleValueReader();

  @override
  HttpingressRuleValue createObject(fb.BufferContext bc, int offset) => 
    HttpingressRuleValue._(bc, offset);
}

class HttpingressRuleValueBuilder {
  HttpingressRuleValueBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addPathsOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class HttpingressRuleValueObjectBuilder extends fb.ObjectBuilder {
  final List<HttpingressPathObjectBuilder>? _paths;

  HttpingressRuleValueObjectBuilder({
    List<HttpingressPathObjectBuilder>? paths,
  })
      : _paths = paths;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? pathsOffset = _paths == null ? null
        : fbBuilder.writeList(_paths!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, pathsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class Ingress {
  Ingress._(this._bc, this._bcOffset);
  factory Ingress(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<Ingress> reader = _IngressReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ObjectMeta? get metadata => apimachinery_pkg_apis_meta_v1.ObjectMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  IngressSpec? get spec => IngressSpec.reader.vTableGetNullable(_bc, _bcOffset, 6);
  IngressStatus? get status => IngressStatus.reader.vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'Ingress{metadata: ${metadata}, spec: ${spec}, status: ${status}}';
  }
}

class _IngressReader extends fb.TableReader<Ingress> {
  const _IngressReader();

  @override
  Ingress createObject(fb.BufferContext bc, int offset) => 
    Ingress._(bc, offset);
}

class IngressBuilder {
  IngressBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSpecOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addStatusOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? _metadata;
  final IngressSpecObjectBuilder? _spec;
  final IngressStatusObjectBuilder? _status;

  IngressObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? metadata,
    IngressSpecObjectBuilder? spec,
    IngressStatusObjectBuilder? status,
  })
      : _metadata = metadata,
        _spec = spec,
        _status = status;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? specOffset = _spec?.getOrCreateOffset(fbBuilder);
    final int? statusOffset = _status?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, specOffset);
    fbBuilder.addOffset(2, statusOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressBackend {
  IngressBackend._(this._bc, this._bcOffset);
  factory IngressBackend(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressBackend> reader = _IngressBackendReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get serviceName => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  apimachinery_pkg_util_intstr.IntOrString? get servicePort => apimachinery_pkg_util_intstr.IntOrString.reader.vTableGetNullable(_bc, _bcOffset, 6);
  api_core_v1.TypedLocalObjectReference? get resource => api_core_v1.TypedLocalObjectReference.reader.vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'IngressBackend{serviceName: ${serviceName}, servicePort: ${servicePort}, resource: ${resource}}';
  }
}

class _IngressBackendReader extends fb.TableReader<IngressBackend> {
  const _IngressBackendReader();

  @override
  IngressBackend createObject(fb.BufferContext bc, int offset) => 
    IngressBackend._(bc, offset);
}

class IngressBackendBuilder {
  IngressBackendBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addServiceNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addServicePortOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addResourceOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressBackendObjectBuilder extends fb.ObjectBuilder {
  final String? _serviceName;
  final apimachinery_pkg_util_intstr.IntOrStringObjectBuilder? _servicePort;
  final api_core_v1.TypedLocalObjectReferenceObjectBuilder? _resource;

  IngressBackendObjectBuilder({
    String? serviceName,
    apimachinery_pkg_util_intstr.IntOrStringObjectBuilder? servicePort,
    api_core_v1.TypedLocalObjectReferenceObjectBuilder? resource,
  })
      : _serviceName = serviceName,
        _servicePort = servicePort,
        _resource = resource;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? serviceNameOffset = _serviceName == null ? null
        : fbBuilder.writeString(_serviceName!);
    final int? servicePortOffset = _servicePort?.getOrCreateOffset(fbBuilder);
    final int? resourceOffset = _resource?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, serviceNameOffset);
    fbBuilder.addOffset(1, servicePortOffset);
    fbBuilder.addOffset(2, resourceOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressClass {
  IngressClass._(this._bc, this._bcOffset);
  factory IngressClass(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressClass> reader = _IngressClassReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ObjectMeta? get metadata => apimachinery_pkg_apis_meta_v1.ObjectMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  IngressClassSpec? get spec => IngressClassSpec.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'IngressClass{metadata: ${metadata}, spec: ${spec}}';
  }
}

class _IngressClassReader extends fb.TableReader<IngressClass> {
  const _IngressClassReader();

  @override
  IngressClass createObject(fb.BufferContext bc, int offset) => 
    IngressClass._(bc, offset);
}

class IngressClassBuilder {
  IngressClassBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSpecOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressClassObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? _metadata;
  final IngressClassSpecObjectBuilder? _spec;

  IngressClassObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? metadata,
    IngressClassSpecObjectBuilder? spec,
  })
      : _metadata = metadata,
        _spec = spec;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? specOffset = _spec?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, specOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressClassList {
  IngressClassList._(this._bc, this._bcOffset);
  factory IngressClassList(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressClassList> reader = _IngressClassListReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ListMeta? get metadata => apimachinery_pkg_apis_meta_v1.ListMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  List<IngressClass>? get items => const fb.ListReader<IngressClass>(IngressClass.reader).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'IngressClassList{metadata: ${metadata}, items: ${items}}';
  }
}

class _IngressClassListReader extends fb.TableReader<IngressClassList> {
  const _IngressClassListReader();

  @override
  IngressClassList createObject(fb.BufferContext bc, int offset) => 
    IngressClassList._(bc, offset);
}

class IngressClassListBuilder {
  IngressClassListBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addItemsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressClassListObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? _metadata;
  final List<IngressClassObjectBuilder>? _items;

  IngressClassListObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? metadata,
    List<IngressClassObjectBuilder>? items,
  })
      : _metadata = metadata,
        _items = items;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? itemsOffset = _items == null ? null
        : fbBuilder.writeList(_items!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, itemsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressClassParametersReference {
  IngressClassParametersReference._(this._bc, this._bcOffset);
  factory IngressClassParametersReference(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressClassParametersReference> reader = _IngressClassParametersReferenceReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get aPigroup => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get kind => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  String? get scope => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  String? get namespace => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);

  @override
  String toString() {
    return 'IngressClassParametersReference{aPigroup: ${aPigroup}, kind: ${kind}, name: ${name}, scope: ${scope}, namespace: ${namespace}}';
  }
}

class _IngressClassParametersReferenceReader extends fb.TableReader<IngressClassParametersReference> {
  const _IngressClassParametersReferenceReader();

  @override
  IngressClassParametersReference createObject(fb.BufferContext bc, int offset) => 
    IngressClassParametersReference._(bc, offset);
}

class IngressClassParametersReferenceBuilder {
  IngressClassParametersReferenceBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(5);
  }

  int addAPigroupOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addKindOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addNameOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addScopeOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addNamespaceOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressClassParametersReferenceObjectBuilder extends fb.ObjectBuilder {
  final String? _aPigroup;
  final String? _kind;
  final String? _name;
  final String? _scope;
  final String? _namespace;

  IngressClassParametersReferenceObjectBuilder({
    String? aPigroup,
    String? kind,
    String? name,
    String? scope,
    String? namespace,
  })
      : _aPigroup = aPigroup,
        _kind = kind,
        _name = name,
        _scope = scope,
        _namespace = namespace;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? aPigroupOffset = _aPigroup == null ? null
        : fbBuilder.writeString(_aPigroup!);
    final int? kindOffset = _kind == null ? null
        : fbBuilder.writeString(_kind!);
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? scopeOffset = _scope == null ? null
        : fbBuilder.writeString(_scope!);
    final int? namespaceOffset = _namespace == null ? null
        : fbBuilder.writeString(_namespace!);
    fbBuilder.startTable(5);
    fbBuilder.addOffset(0, aPigroupOffset);
    fbBuilder.addOffset(1, kindOffset);
    fbBuilder.addOffset(2, nameOffset);
    fbBuilder.addOffset(3, scopeOffset);
    fbBuilder.addOffset(4, namespaceOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressClassSpec {
  IngressClassSpec._(this._bc, this._bcOffset);
  factory IngressClassSpec(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressClassSpec> reader = _IngressClassSpecReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get controller => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  IngressClassParametersReference? get parameters => IngressClassParametersReference.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'IngressClassSpec{controller: ${controller}, parameters: ${parameters}}';
  }
}

class _IngressClassSpecReader extends fb.TableReader<IngressClassSpec> {
  const _IngressClassSpecReader();

  @override
  IngressClassSpec createObject(fb.BufferContext bc, int offset) => 
    IngressClassSpec._(bc, offset);
}

class IngressClassSpecBuilder {
  IngressClassSpecBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addControllerOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addParametersOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressClassSpecObjectBuilder extends fb.ObjectBuilder {
  final String? _controller;
  final IngressClassParametersReferenceObjectBuilder? _parameters;

  IngressClassSpecObjectBuilder({
    String? controller,
    IngressClassParametersReferenceObjectBuilder? parameters,
  })
      : _controller = controller,
        _parameters = parameters;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? controllerOffset = _controller == null ? null
        : fbBuilder.writeString(_controller!);
    final int? parametersOffset = _parameters?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, controllerOffset);
    fbBuilder.addOffset(1, parametersOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressList {
  IngressList._(this._bc, this._bcOffset);
  factory IngressList(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressList> reader = _IngressListReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ListMeta? get metadata => apimachinery_pkg_apis_meta_v1.ListMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  List<Ingress>? get items => const fb.ListReader<Ingress>(Ingress.reader).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'IngressList{metadata: ${metadata}, items: ${items}}';
  }
}

class _IngressListReader extends fb.TableReader<IngressList> {
  const _IngressListReader();

  @override
  IngressList createObject(fb.BufferContext bc, int offset) => 
    IngressList._(bc, offset);
}

class IngressListBuilder {
  IngressListBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addItemsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressListObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? _metadata;
  final List<IngressObjectBuilder>? _items;

  IngressListObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? metadata,
    List<IngressObjectBuilder>? items,
  })
      : _metadata = metadata,
        _items = items;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? itemsOffset = _items == null ? null
        : fbBuilder.writeList(_items!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, itemsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressLoadBalancerIngress {
  IngressLoadBalancerIngress._(this._bc, this._bcOffset);
  factory IngressLoadBalancerIngress(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressLoadBalancerIngress> reader = _IngressLoadBalancerIngressReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get ip => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get hostname => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  List<IngressPortStatus>? get ports => const fb.ListReader<IngressPortStatus>(IngressPortStatus.reader).vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'IngressLoadBalancerIngress{ip: ${ip}, hostname: ${hostname}, ports: ${ports}}';
  }
}

class _IngressLoadBalancerIngressReader extends fb.TableReader<IngressLoadBalancerIngress> {
  const _IngressLoadBalancerIngressReader();

  @override
  IngressLoadBalancerIngress createObject(fb.BufferContext bc, int offset) => 
    IngressLoadBalancerIngress._(bc, offset);
}

class IngressLoadBalancerIngressBuilder {
  IngressLoadBalancerIngressBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addIpOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addHostnameOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addPortsOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressLoadBalancerIngressObjectBuilder extends fb.ObjectBuilder {
  final String? _ip;
  final String? _hostname;
  final List<IngressPortStatusObjectBuilder>? _ports;

  IngressLoadBalancerIngressObjectBuilder({
    String? ip,
    String? hostname,
    List<IngressPortStatusObjectBuilder>? ports,
  })
      : _ip = ip,
        _hostname = hostname,
        _ports = ports;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? ipOffset = _ip == null ? null
        : fbBuilder.writeString(_ip!);
    final int? hostnameOffset = _hostname == null ? null
        : fbBuilder.writeString(_hostname!);
    final int? portsOffset = _ports == null ? null
        : fbBuilder.writeList(_ports!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, ipOffset);
    fbBuilder.addOffset(1, hostnameOffset);
    fbBuilder.addOffset(2, portsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressLoadBalancerStatus {
  IngressLoadBalancerStatus._(this._bc, this._bcOffset);
  factory IngressLoadBalancerStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressLoadBalancerStatus> reader = _IngressLoadBalancerStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<IngressLoadBalancerIngress>? get ingress => const fb.ListReader<IngressLoadBalancerIngress>(IngressLoadBalancerIngress.reader).vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'IngressLoadBalancerStatus{ingress: ${ingress}}';
  }
}

class _IngressLoadBalancerStatusReader extends fb.TableReader<IngressLoadBalancerStatus> {
  const _IngressLoadBalancerStatusReader();

  @override
  IngressLoadBalancerStatus createObject(fb.BufferContext bc, int offset) => 
    IngressLoadBalancerStatus._(bc, offset);
}

class IngressLoadBalancerStatusBuilder {
  IngressLoadBalancerStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addIngressOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressLoadBalancerStatusObjectBuilder extends fb.ObjectBuilder {
  final List<IngressLoadBalancerIngressObjectBuilder>? _ingress;

  IngressLoadBalancerStatusObjectBuilder({
    List<IngressLoadBalancerIngressObjectBuilder>? ingress,
  })
      : _ingress = ingress;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? ingressOffset = _ingress == null ? null
        : fbBuilder.writeList(_ingress!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, ingressOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressPortStatus {
  IngressPortStatus._(this._bc, this._bcOffset);
  factory IngressPortStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressPortStatus> reader = _IngressPortStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  int get port => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 4, 0);
  String? get protocol => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  String? get error => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'IngressPortStatus{port: ${port}, protocol: ${protocol}, error: ${error}}';
  }
}

class _IngressPortStatusReader extends fb.TableReader<IngressPortStatus> {
  const _IngressPortStatusReader();

  @override
  IngressPortStatus createObject(fb.BufferContext bc, int offset) => 
    IngressPortStatus._(bc, offset);
}

class IngressPortStatusBuilder {
  IngressPortStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addPort(int? port) {
    fbBuilder.addInt32(0, port);
    return fbBuilder.offset;
  }
  int addProtocolOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addErrorOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressPortStatusObjectBuilder extends fb.ObjectBuilder {
  final int? _port;
  final String? _protocol;
  final String? _error;

  IngressPortStatusObjectBuilder({
    int? port,
    String? protocol,
    String? error,
  })
      : _port = port,
        _protocol = protocol,
        _error = error;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? protocolOffset = _protocol == null ? null
        : fbBuilder.writeString(_protocol!);
    final int? errorOffset = _error == null ? null
        : fbBuilder.writeString(_error!);
    fbBuilder.startTable(3);
    fbBuilder.addInt32(0, _port);
    fbBuilder.addOffset(1, protocolOffset);
    fbBuilder.addOffset(2, errorOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressRule {
  IngressRule._(this._bc, this._bcOffset);
  factory IngressRule(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressRule> reader = _IngressRuleReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get host => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  IngressRuleValue? get ingressRuleValue => IngressRuleValue.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'IngressRule{host: ${host}, ingressRuleValue: ${ingressRuleValue}}';
  }
}

class _IngressRuleReader extends fb.TableReader<IngressRule> {
  const _IngressRuleReader();

  @override
  IngressRule createObject(fb.BufferContext bc, int offset) => 
    IngressRule._(bc, offset);
}

class IngressRuleBuilder {
  IngressRuleBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addHostOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addIngressRuleValueOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressRuleObjectBuilder extends fb.ObjectBuilder {
  final String? _host;
  final IngressRuleValueObjectBuilder? _ingressRuleValue;

  IngressRuleObjectBuilder({
    String? host,
    IngressRuleValueObjectBuilder? ingressRuleValue,
  })
      : _host = host,
        _ingressRuleValue = ingressRuleValue;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? hostOffset = _host == null ? null
        : fbBuilder.writeString(_host!);
    final int? ingressRuleValueOffset = _ingressRuleValue?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, hostOffset);
    fbBuilder.addOffset(1, ingressRuleValueOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressRuleValue {
  IngressRuleValue._(this._bc, this._bcOffset);
  factory IngressRuleValue(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressRuleValue> reader = _IngressRuleValueReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  HttpingressRuleValue? get http => HttpingressRuleValue.reader.vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'IngressRuleValue{http: ${http}}';
  }
}

class _IngressRuleValueReader extends fb.TableReader<IngressRuleValue> {
  const _IngressRuleValueReader();

  @override
  IngressRuleValue createObject(fb.BufferContext bc, int offset) => 
    IngressRuleValue._(bc, offset);
}

class IngressRuleValueBuilder {
  IngressRuleValueBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addHttpOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressRuleValueObjectBuilder extends fb.ObjectBuilder {
  final HttpingressRuleValueObjectBuilder? _http;

  IngressRuleValueObjectBuilder({
    HttpingressRuleValueObjectBuilder? http,
  })
      : _http = http;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? httpOffset = _http?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, httpOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressSpec {
  IngressSpec._(this._bc, this._bcOffset);
  factory IngressSpec(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressSpec> reader = _IngressSpecReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get ingressClassName => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  IngressBackend? get backend => IngressBackend.reader.vTableGetNullable(_bc, _bcOffset, 6);
  List<IngressTls>? get tls => const fb.ListReader<IngressTls>(IngressTls.reader).vTableGetNullable(_bc, _bcOffset, 8);
  List<IngressRule>? get rules => const fb.ListReader<IngressRule>(IngressRule.reader).vTableGetNullable(_bc, _bcOffset, 10);

  @override
  String toString() {
    return 'IngressSpec{ingressClassName: ${ingressClassName}, backend: ${backend}, tls: ${tls}, rules: ${rules}}';
  }
}

class _IngressSpecReader extends fb.TableReader<IngressSpec> {
  const _IngressSpecReader();

  @override
  IngressSpec createObject(fb.BufferContext bc, int offset) => 
    IngressSpec._(bc, offset);
}

class IngressSpecBuilder {
  IngressSpecBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addIngressClassNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addBackendOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addTlsOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addRulesOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressSpecObjectBuilder extends fb.ObjectBuilder {
  final String? _ingressClassName;
  final IngressBackendObjectBuilder? _backend;
  final List<IngressTlsObjectBuilder>? _tls;
  final List<IngressRuleObjectBuilder>? _rules;

  IngressSpecObjectBuilder({
    String? ingressClassName,
    IngressBackendObjectBuilder? backend,
    List<IngressTlsObjectBuilder>? tls,
    List<IngressRuleObjectBuilder>? rules,
  })
      : _ingressClassName = ingressClassName,
        _backend = backend,
        _tls = tls,
        _rules = rules;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? ingressClassNameOffset = _ingressClassName == null ? null
        : fbBuilder.writeString(_ingressClassName!);
    final int? backendOffset = _backend?.getOrCreateOffset(fbBuilder);
    final int? tlsOffset = _tls == null ? null
        : fbBuilder.writeList(_tls!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? rulesOffset = _rules == null ? null
        : fbBuilder.writeList(_rules!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(4);
    fbBuilder.addOffset(0, ingressClassNameOffset);
    fbBuilder.addOffset(1, backendOffset);
    fbBuilder.addOffset(2, tlsOffset);
    fbBuilder.addOffset(3, rulesOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressStatus {
  IngressStatus._(this._bc, this._bcOffset);
  factory IngressStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressStatus> reader = _IngressStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  IngressLoadBalancerStatus? get loadBalancer => IngressLoadBalancerStatus.reader.vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'IngressStatus{loadBalancer: ${loadBalancer}}';
  }
}

class _IngressStatusReader extends fb.TableReader<IngressStatus> {
  const _IngressStatusReader();

  @override
  IngressStatus createObject(fb.BufferContext bc, int offset) => 
    IngressStatus._(bc, offset);
}

class IngressStatusBuilder {
  IngressStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addLoadBalancerOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressStatusObjectBuilder extends fb.ObjectBuilder {
  final IngressLoadBalancerStatusObjectBuilder? _loadBalancer;

  IngressStatusObjectBuilder({
    IngressLoadBalancerStatusObjectBuilder? loadBalancer,
  })
      : _loadBalancer = loadBalancer;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? loadBalancerOffset = _loadBalancer?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, loadBalancerOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class IngressTls {
  IngressTls._(this._bc, this._bcOffset);
  factory IngressTls(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IngressTls> reader = _IngressTlsReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<String>? get hosts => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 4);
  String? get secretName => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'IngressTls{hosts: ${hosts}, secretName: ${secretName}}';
  }
}

class _IngressTlsReader extends fb.TableReader<IngressTls> {
  const _IngressTlsReader();

  @override
  IngressTls createObject(fb.BufferContext bc, int offset) => 
    IngressTls._(bc, offset);
}

class IngressTlsBuilder {
  IngressTlsBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addHostsOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSecretNameOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IngressTlsObjectBuilder extends fb.ObjectBuilder {
  final List<String>? _hosts;
  final String? _secretName;

  IngressTlsObjectBuilder({
    List<String>? hosts,
    String? secretName,
  })
      : _hosts = hosts,
        _secretName = secretName;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? hostsOffset = _hosts == null ? null
        : fbBuilder.writeList(_hosts!.map(fbBuilder.writeString).toList());
    final int? secretNameOffset = _secretName == null ? null
        : fbBuilder.writeString(_secretName!);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, hostsOffset);
    fbBuilder.addOffset(1, secretNameOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
