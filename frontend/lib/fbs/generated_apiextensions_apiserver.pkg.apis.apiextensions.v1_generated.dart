// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library apiextensions_apiserver.pkg.apis.apiextensions.v1;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;

import './generated_apiextensions_apiserver.pkg.apis.apiextensions.v1.jsonschema_props__generated.dart' as apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

import './generated_apimachinery.pkg.apis.meta.v1.label_selector__generated.dart' as apimachinery_pkg_apis_meta_v1_label_selector_;
import './generated_apimachinery.pkg.apis.meta.v1.object_meta__generated.dart' as apimachinery_pkg_apis_meta_v1_object_meta_;
import './generated_apimachinery.pkg.apis.meta.v1_generated.dart' as apimachinery_pkg_apis_meta_v1;
import './generated_apimachinery.pkg.runtime_generated.dart' as apimachinery_pkg_runtime;

class ConversionRequest {
  ConversionRequest._(this._bc, this._bcOffset);
  factory ConversionRequest(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ConversionRequest> reader = _ConversionRequestReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get uid => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get desiredApiversion => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  List<apimachinery_pkg_runtime.RawExtension>? get objects => const fb.ListReader<apimachinery_pkg_runtime.RawExtension>(apimachinery_pkg_runtime.RawExtension.reader).vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'ConversionRequest{uid: ${uid}, desiredApiversion: ${desiredApiversion}, objects: ${objects}}';
  }
}

class _ConversionRequestReader extends fb.TableReader<ConversionRequest> {
  const _ConversionRequestReader();

  @override
  ConversionRequest createObject(fb.BufferContext bc, int offset) => 
    ConversionRequest._(bc, offset);
}

class ConversionRequestBuilder {
  ConversionRequestBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addUidOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addDesiredApiversionOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addObjectsOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ConversionRequestObjectBuilder extends fb.ObjectBuilder {
  final String? _uid;
  final String? _desiredApiversion;
  final List<apimachinery_pkg_runtime.RawExtensionObjectBuilder>? _objects;

  ConversionRequestObjectBuilder({
    String? uid,
    String? desiredApiversion,
    List<apimachinery_pkg_runtime.RawExtensionObjectBuilder>? objects,
  })
      : _uid = uid,
        _desiredApiversion = desiredApiversion,
        _objects = objects;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? uidOffset = _uid == null ? null
        : fbBuilder.writeString(_uid!);
    final int? desiredApiversionOffset = _desiredApiversion == null ? null
        : fbBuilder.writeString(_desiredApiversion!);
    final int? objectsOffset = _objects == null ? null
        : fbBuilder.writeList(_objects!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, uidOffset);
    fbBuilder.addOffset(1, desiredApiversionOffset);
    fbBuilder.addOffset(2, objectsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ConversionResponse {
  ConversionResponse._(this._bc, this._bcOffset);
  factory ConversionResponse(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ConversionResponse> reader = _ConversionResponseReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get uid => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  List<apimachinery_pkg_runtime.RawExtension>? get convertedObjects => const fb.ListReader<apimachinery_pkg_runtime.RawExtension>(apimachinery_pkg_runtime.RawExtension.reader).vTableGetNullable(_bc, _bcOffset, 6);
  apimachinery_pkg_apis_meta_v1.Status? get result => apimachinery_pkg_apis_meta_v1.Status.reader.vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'ConversionResponse{uid: ${uid}, convertedObjects: ${convertedObjects}, result: ${result}}';
  }
}

class _ConversionResponseReader extends fb.TableReader<ConversionResponse> {
  const _ConversionResponseReader();

  @override
  ConversionResponse createObject(fb.BufferContext bc, int offset) => 
    ConversionResponse._(bc, offset);
}

class ConversionResponseBuilder {
  ConversionResponseBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addUidOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addConvertedObjectsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addResultOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ConversionResponseObjectBuilder extends fb.ObjectBuilder {
  final String? _uid;
  final List<apimachinery_pkg_runtime.RawExtensionObjectBuilder>? _convertedObjects;
  final apimachinery_pkg_apis_meta_v1.StatusObjectBuilder? _result;

  ConversionResponseObjectBuilder({
    String? uid,
    List<apimachinery_pkg_runtime.RawExtensionObjectBuilder>? convertedObjects,
    apimachinery_pkg_apis_meta_v1.StatusObjectBuilder? result,
  })
      : _uid = uid,
        _convertedObjects = convertedObjects,
        _result = result;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? uidOffset = _uid == null ? null
        : fbBuilder.writeString(_uid!);
    final int? convertedObjectsOffset = _convertedObjects == null ? null
        : fbBuilder.writeList(_convertedObjects!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? resultOffset = _result?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, uidOffset);
    fbBuilder.addOffset(1, convertedObjectsOffset);
    fbBuilder.addOffset(2, resultOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ConversionReview {
  ConversionReview._(this._bc, this._bcOffset);
  factory ConversionReview(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ConversionReview> reader = _ConversionReviewReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ConversionRequest? get request => ConversionRequest.reader.vTableGetNullable(_bc, _bcOffset, 4);
  ConversionResponse? get response => ConversionResponse.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ConversionReview{request: ${request}, response: ${response}}';
  }
}

class _ConversionReviewReader extends fb.TableReader<ConversionReview> {
  const _ConversionReviewReader();

  @override
  ConversionReview createObject(fb.BufferContext bc, int offset) => 
    ConversionReview._(bc, offset);
}

class ConversionReviewBuilder {
  ConversionReviewBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addRequestOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addResponseOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ConversionReviewObjectBuilder extends fb.ObjectBuilder {
  final ConversionRequestObjectBuilder? _request;
  final ConversionResponseObjectBuilder? _response;

  ConversionReviewObjectBuilder({
    ConversionRequestObjectBuilder? request,
    ConversionResponseObjectBuilder? response,
  })
      : _request = request,
        _response = response;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? requestOffset = _request?.getOrCreateOffset(fbBuilder);
    final int? responseOffset = _response?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, requestOffset);
    fbBuilder.addOffset(1, responseOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CustomResourceColumnDefinition {
  CustomResourceColumnDefinition._(this._bc, this._bcOffset);
  factory CustomResourceColumnDefinition(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CustomResourceColumnDefinition> reader = _CustomResourceColumnDefinitionReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get type => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  String? get format => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  String? get description => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  int get priority => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 12, 0);
  String? get jsonPath => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 14);

  @override
  String toString() {
    return 'CustomResourceColumnDefinition{name: ${name}, type: ${type}, format: ${format}, description: ${description}, priority: ${priority}, jsonPath: ${jsonPath}}';
  }
}

class _CustomResourceColumnDefinitionReader extends fb.TableReader<CustomResourceColumnDefinition> {
  const _CustomResourceColumnDefinitionReader();

  @override
  CustomResourceColumnDefinition createObject(fb.BufferContext bc, int offset) => 
    CustomResourceColumnDefinition._(bc, offset);
}

class CustomResourceColumnDefinitionBuilder {
  CustomResourceColumnDefinitionBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(6);
  }

  int addNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addTypeOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addFormatOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addDescriptionOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addPriority(int? priority) {
    fbBuilder.addInt32(4, priority);
    return fbBuilder.offset;
  }
  int addJsonPathOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CustomResourceColumnDefinitionObjectBuilder extends fb.ObjectBuilder {
  final String? _name;
  final String? _type;
  final String? _format;
  final String? _description;
  final int? _priority;
  final String? _jsonPath;

  CustomResourceColumnDefinitionObjectBuilder({
    String? name,
    String? type,
    String? format,
    String? description,
    int? priority,
    String? jsonPath,
  })
      : _name = name,
        _type = type,
        _format = format,
        _description = description,
        _priority = priority,
        _jsonPath = jsonPath;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? typeOffset = _type == null ? null
        : fbBuilder.writeString(_type!);
    final int? formatOffset = _format == null ? null
        : fbBuilder.writeString(_format!);
    final int? descriptionOffset = _description == null ? null
        : fbBuilder.writeString(_description!);
    final int? jsonPathOffset = _jsonPath == null ? null
        : fbBuilder.writeString(_jsonPath!);
    fbBuilder.startTable(6);
    fbBuilder.addOffset(0, nameOffset);
    fbBuilder.addOffset(1, typeOffset);
    fbBuilder.addOffset(2, formatOffset);
    fbBuilder.addOffset(3, descriptionOffset);
    fbBuilder.addInt32(4, _priority);
    fbBuilder.addOffset(5, jsonPathOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CustomResourceConversion {
  CustomResourceConversion._(this._bc, this._bcOffset);
  factory CustomResourceConversion(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CustomResourceConversion> reader = _CustomResourceConversionReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get strategy => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  WebhookConversion? get webhook => WebhookConversion.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'CustomResourceConversion{strategy: ${strategy}, webhook: ${webhook}}';
  }
}

class _CustomResourceConversionReader extends fb.TableReader<CustomResourceConversion> {
  const _CustomResourceConversionReader();

  @override
  CustomResourceConversion createObject(fb.BufferContext bc, int offset) => 
    CustomResourceConversion._(bc, offset);
}

class CustomResourceConversionBuilder {
  CustomResourceConversionBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addStrategyOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addWebhookOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CustomResourceConversionObjectBuilder extends fb.ObjectBuilder {
  final String? _strategy;
  final WebhookConversionObjectBuilder? _webhook;

  CustomResourceConversionObjectBuilder({
    String? strategy,
    WebhookConversionObjectBuilder? webhook,
  })
      : _strategy = strategy,
        _webhook = webhook;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? strategyOffset = _strategy == null ? null
        : fbBuilder.writeString(_strategy!);
    final int? webhookOffset = _webhook?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, strategyOffset);
    fbBuilder.addOffset(1, webhookOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CustomResourceDefinition {
  CustomResourceDefinition._(this._bc, this._bcOffset);
  factory CustomResourceDefinition(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CustomResourceDefinition> reader = _CustomResourceDefinitionReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ObjectMeta? get metadata => apimachinery_pkg_apis_meta_v1.ObjectMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  CustomResourceDefinitionSpec? get spec => CustomResourceDefinitionSpec.reader.vTableGetNullable(_bc, _bcOffset, 6);
  CustomResourceDefinitionStatus? get status => CustomResourceDefinitionStatus.reader.vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'CustomResourceDefinition{metadata: ${metadata}, spec: ${spec}, status: ${status}}';
  }
}

class _CustomResourceDefinitionReader extends fb.TableReader<CustomResourceDefinition> {
  const _CustomResourceDefinitionReader();

  @override
  CustomResourceDefinition createObject(fb.BufferContext bc, int offset) => 
    CustomResourceDefinition._(bc, offset);
}

class CustomResourceDefinitionBuilder {
  CustomResourceDefinitionBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSpecOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addStatusOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CustomResourceDefinitionObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? _metadata;
  final CustomResourceDefinitionSpecObjectBuilder? _spec;
  final CustomResourceDefinitionStatusObjectBuilder? _status;

  CustomResourceDefinitionObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ObjectMetaObjectBuilder? metadata,
    CustomResourceDefinitionSpecObjectBuilder? spec,
    CustomResourceDefinitionStatusObjectBuilder? status,
  })
      : _metadata = metadata,
        _spec = spec,
        _status = status;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? specOffset = _spec?.getOrCreateOffset(fbBuilder);
    final int? statusOffset = _status?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, specOffset);
    fbBuilder.addOffset(2, statusOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CustomResourceDefinitionCondition {
  CustomResourceDefinitionCondition._(this._bc, this._bcOffset);
  factory CustomResourceDefinitionCondition(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CustomResourceDefinitionCondition> reader = _CustomResourceDefinitionConditionReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get type => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get status => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  apimachinery_pkg_apis_meta_v1.Time? get lastTransitionTime => apimachinery_pkg_apis_meta_v1.Time.reader.vTableGetNullable(_bc, _bcOffset, 8);
  String? get reason => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  String? get message => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);

  @override
  String toString() {
    return 'CustomResourceDefinitionCondition{type: ${type}, status: ${status}, lastTransitionTime: ${lastTransitionTime}, reason: ${reason}, message: ${message}}';
  }
}

class _CustomResourceDefinitionConditionReader extends fb.TableReader<CustomResourceDefinitionCondition> {
  const _CustomResourceDefinitionConditionReader();

  @override
  CustomResourceDefinitionCondition createObject(fb.BufferContext bc, int offset) => 
    CustomResourceDefinitionCondition._(bc, offset);
}

class CustomResourceDefinitionConditionBuilder {
  CustomResourceDefinitionConditionBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(5);
  }

  int addTypeOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addStatusOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addLastTransitionTimeOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addReasonOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addMessageOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CustomResourceDefinitionConditionObjectBuilder extends fb.ObjectBuilder {
  final String? _type;
  final String? _status;
  final apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? _lastTransitionTime;
  final String? _reason;
  final String? _message;

  CustomResourceDefinitionConditionObjectBuilder({
    String? type,
    String? status,
    apimachinery_pkg_apis_meta_v1.TimeObjectBuilder? lastTransitionTime,
    String? reason,
    String? message,
  })
      : _type = type,
        _status = status,
        _lastTransitionTime = lastTransitionTime,
        _reason = reason,
        _message = message;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? typeOffset = _type == null ? null
        : fbBuilder.writeString(_type!);
    final int? statusOffset = _status == null ? null
        : fbBuilder.writeString(_status!);
    final int? lastTransitionTimeOffset = _lastTransitionTime?.getOrCreateOffset(fbBuilder);
    final int? reasonOffset = _reason == null ? null
        : fbBuilder.writeString(_reason!);
    final int? messageOffset = _message == null ? null
        : fbBuilder.writeString(_message!);
    fbBuilder.startTable(5);
    fbBuilder.addOffset(0, typeOffset);
    fbBuilder.addOffset(1, statusOffset);
    fbBuilder.addOffset(2, lastTransitionTimeOffset);
    fbBuilder.addOffset(3, reasonOffset);
    fbBuilder.addOffset(4, messageOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CustomResourceDefinitionList {
  CustomResourceDefinitionList._(this._bc, this._bcOffset);
  factory CustomResourceDefinitionList(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CustomResourceDefinitionList> reader = _CustomResourceDefinitionListReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  apimachinery_pkg_apis_meta_v1.ListMeta? get metadata => apimachinery_pkg_apis_meta_v1.ListMeta.reader.vTableGetNullable(_bc, _bcOffset, 4);
  List<CustomResourceDefinition>? get items => const fb.ListReader<CustomResourceDefinition>(CustomResourceDefinition.reader).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'CustomResourceDefinitionList{metadata: ${metadata}, items: ${items}}';
  }
}

class _CustomResourceDefinitionListReader extends fb.TableReader<CustomResourceDefinitionList> {
  const _CustomResourceDefinitionListReader();

  @override
  CustomResourceDefinitionList createObject(fb.BufferContext bc, int offset) => 
    CustomResourceDefinitionList._(bc, offset);
}

class CustomResourceDefinitionListBuilder {
  CustomResourceDefinitionListBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addItemsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CustomResourceDefinitionListObjectBuilder extends fb.ObjectBuilder {
  final apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? _metadata;
  final List<CustomResourceDefinitionObjectBuilder>? _items;

  CustomResourceDefinitionListObjectBuilder({
    apimachinery_pkg_apis_meta_v1.ListMetaObjectBuilder? metadata,
    List<CustomResourceDefinitionObjectBuilder>? items,
  })
      : _metadata = metadata,
        _items = items;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    final int? itemsOffset = _items == null ? null
        : fbBuilder.writeList(_items!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, metadataOffset);
    fbBuilder.addOffset(1, itemsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CustomResourceDefinitionNames {
  CustomResourceDefinitionNames._(this._bc, this._bcOffset);
  factory CustomResourceDefinitionNames(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CustomResourceDefinitionNames> reader = _CustomResourceDefinitionNamesReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get plural => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get singular => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  List<String>? get shortNames => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 8);
  String? get kind => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  String? get listKind => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  List<String>? get categories => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 14);

  @override
  String toString() {
    return 'CustomResourceDefinitionNames{plural: ${plural}, singular: ${singular}, shortNames: ${shortNames}, kind: ${kind}, listKind: ${listKind}, categories: ${categories}}';
  }
}

class _CustomResourceDefinitionNamesReader extends fb.TableReader<CustomResourceDefinitionNames> {
  const _CustomResourceDefinitionNamesReader();

  @override
  CustomResourceDefinitionNames createObject(fb.BufferContext bc, int offset) => 
    CustomResourceDefinitionNames._(bc, offset);
}

class CustomResourceDefinitionNamesBuilder {
  CustomResourceDefinitionNamesBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(6);
  }

  int addPluralOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSingularOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addShortNamesOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addKindOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addListKindOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addCategoriesOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CustomResourceDefinitionNamesObjectBuilder extends fb.ObjectBuilder {
  final String? _plural;
  final String? _singular;
  final List<String>? _shortNames;
  final String? _kind;
  final String? _listKind;
  final List<String>? _categories;

  CustomResourceDefinitionNamesObjectBuilder({
    String? plural,
    String? singular,
    List<String>? shortNames,
    String? kind,
    String? listKind,
    List<String>? categories,
  })
      : _plural = plural,
        _singular = singular,
        _shortNames = shortNames,
        _kind = kind,
        _listKind = listKind,
        _categories = categories;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? pluralOffset = _plural == null ? null
        : fbBuilder.writeString(_plural!);
    final int? singularOffset = _singular == null ? null
        : fbBuilder.writeString(_singular!);
    final int? shortNamesOffset = _shortNames == null ? null
        : fbBuilder.writeList(_shortNames!.map(fbBuilder.writeString).toList());
    final int? kindOffset = _kind == null ? null
        : fbBuilder.writeString(_kind!);
    final int? listKindOffset = _listKind == null ? null
        : fbBuilder.writeString(_listKind!);
    final int? categoriesOffset = _categories == null ? null
        : fbBuilder.writeList(_categories!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(6);
    fbBuilder.addOffset(0, pluralOffset);
    fbBuilder.addOffset(1, singularOffset);
    fbBuilder.addOffset(2, shortNamesOffset);
    fbBuilder.addOffset(3, kindOffset);
    fbBuilder.addOffset(4, listKindOffset);
    fbBuilder.addOffset(5, categoriesOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CustomResourceDefinitionSpec {
  CustomResourceDefinitionSpec._(this._bc, this._bcOffset);
  factory CustomResourceDefinitionSpec(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CustomResourceDefinitionSpec> reader = _CustomResourceDefinitionSpecReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get group => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  CustomResourceDefinitionNames? get names => CustomResourceDefinitionNames.reader.vTableGetNullable(_bc, _bcOffset, 6);
  String? get scope => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  List<CustomResourceDefinitionVersion>? get versions => const fb.ListReader<CustomResourceDefinitionVersion>(CustomResourceDefinitionVersion.reader).vTableGetNullable(_bc, _bcOffset, 10);
  CustomResourceConversion? get conversion => CustomResourceConversion.reader.vTableGetNullable(_bc, _bcOffset, 12);
  bool get preserveUnknownFields => const fb.BoolReader().vTableGet(_bc, _bcOffset, 14, false);

  @override
  String toString() {
    return 'CustomResourceDefinitionSpec{group: ${group}, names: ${names}, scope: ${scope}, versions: ${versions}, conversion: ${conversion}, preserveUnknownFields: ${preserveUnknownFields}}';
  }
}

class _CustomResourceDefinitionSpecReader extends fb.TableReader<CustomResourceDefinitionSpec> {
  const _CustomResourceDefinitionSpecReader();

  @override
  CustomResourceDefinitionSpec createObject(fb.BufferContext bc, int offset) => 
    CustomResourceDefinitionSpec._(bc, offset);
}

class CustomResourceDefinitionSpecBuilder {
  CustomResourceDefinitionSpecBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(6);
  }

  int addGroupOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addNamesOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addScopeOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addVersionsOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addConversionOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addPreserveUnknownFields(bool? preserveUnknownFields) {
    fbBuilder.addBool(5, preserveUnknownFields);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CustomResourceDefinitionSpecObjectBuilder extends fb.ObjectBuilder {
  final String? _group;
  final CustomResourceDefinitionNamesObjectBuilder? _names;
  final String? _scope;
  final List<CustomResourceDefinitionVersionObjectBuilder>? _versions;
  final CustomResourceConversionObjectBuilder? _conversion;
  final bool? _preserveUnknownFields;

  CustomResourceDefinitionSpecObjectBuilder({
    String? group,
    CustomResourceDefinitionNamesObjectBuilder? names,
    String? scope,
    List<CustomResourceDefinitionVersionObjectBuilder>? versions,
    CustomResourceConversionObjectBuilder? conversion,
    bool? preserveUnknownFields,
  })
      : _group = group,
        _names = names,
        _scope = scope,
        _versions = versions,
        _conversion = conversion,
        _preserveUnknownFields = preserveUnknownFields;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? groupOffset = _group == null ? null
        : fbBuilder.writeString(_group!);
    final int? namesOffset = _names?.getOrCreateOffset(fbBuilder);
    final int? scopeOffset = _scope == null ? null
        : fbBuilder.writeString(_scope!);
    final int? versionsOffset = _versions == null ? null
        : fbBuilder.writeList(_versions!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? conversionOffset = _conversion?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(6);
    fbBuilder.addOffset(0, groupOffset);
    fbBuilder.addOffset(1, namesOffset);
    fbBuilder.addOffset(2, scopeOffset);
    fbBuilder.addOffset(3, versionsOffset);
    fbBuilder.addOffset(4, conversionOffset);
    fbBuilder.addBool(5, _preserveUnknownFields);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CustomResourceDefinitionStatus {
  CustomResourceDefinitionStatus._(this._bc, this._bcOffset);
  factory CustomResourceDefinitionStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CustomResourceDefinitionStatus> reader = _CustomResourceDefinitionStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<CustomResourceDefinitionCondition>? get conditions => const fb.ListReader<CustomResourceDefinitionCondition>(CustomResourceDefinitionCondition.reader).vTableGetNullable(_bc, _bcOffset, 4);
  CustomResourceDefinitionNames? get acceptedNames => CustomResourceDefinitionNames.reader.vTableGetNullable(_bc, _bcOffset, 6);
  List<String>? get storedVersions => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'CustomResourceDefinitionStatus{conditions: ${conditions}, acceptedNames: ${acceptedNames}, storedVersions: ${storedVersions}}';
  }
}

class _CustomResourceDefinitionStatusReader extends fb.TableReader<CustomResourceDefinitionStatus> {
  const _CustomResourceDefinitionStatusReader();

  @override
  CustomResourceDefinitionStatus createObject(fb.BufferContext bc, int offset) => 
    CustomResourceDefinitionStatus._(bc, offset);
}

class CustomResourceDefinitionStatusBuilder {
  CustomResourceDefinitionStatusBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addConditionsOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addAcceptedNamesOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addStoredVersionsOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CustomResourceDefinitionStatusObjectBuilder extends fb.ObjectBuilder {
  final List<CustomResourceDefinitionConditionObjectBuilder>? _conditions;
  final CustomResourceDefinitionNamesObjectBuilder? _acceptedNames;
  final List<String>? _storedVersions;

  CustomResourceDefinitionStatusObjectBuilder({
    List<CustomResourceDefinitionConditionObjectBuilder>? conditions,
    CustomResourceDefinitionNamesObjectBuilder? acceptedNames,
    List<String>? storedVersions,
  })
      : _conditions = conditions,
        _acceptedNames = acceptedNames,
        _storedVersions = storedVersions;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? conditionsOffset = _conditions == null ? null
        : fbBuilder.writeList(_conditions!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? acceptedNamesOffset = _acceptedNames?.getOrCreateOffset(fbBuilder);
    final int? storedVersionsOffset = _storedVersions == null ? null
        : fbBuilder.writeList(_storedVersions!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, conditionsOffset);
    fbBuilder.addOffset(1, acceptedNamesOffset);
    fbBuilder.addOffset(2, storedVersionsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CustomResourceDefinitionVersion {
  CustomResourceDefinitionVersion._(this._bc, this._bcOffset);
  factory CustomResourceDefinitionVersion(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CustomResourceDefinitionVersion> reader = _CustomResourceDefinitionVersionReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  bool get served => const fb.BoolReader().vTableGet(_bc, _bcOffset, 6, false);
  bool get storage => const fb.BoolReader().vTableGet(_bc, _bcOffset, 8, false);
  bool get deprecated => const fb.BoolReader().vTableGet(_bc, _bcOffset, 10, false);
  String? get deprecationWarning => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  CustomResourceValidation? get schema => CustomResourceValidation.reader.vTableGetNullable(_bc, _bcOffset, 14);
  CustomResourceSubresources? get subresources => CustomResourceSubresources.reader.vTableGetNullable(_bc, _bcOffset, 16);
  List<CustomResourceColumnDefinition>? get additionalPrinterColumns => const fb.ListReader<CustomResourceColumnDefinition>(CustomResourceColumnDefinition.reader).vTableGetNullable(_bc, _bcOffset, 18);
  List<SelectableField>? get selectableFields => const fb.ListReader<SelectableField>(SelectableField.reader).vTableGetNullable(_bc, _bcOffset, 20);

  @override
  String toString() {
    return 'CustomResourceDefinitionVersion{name: ${name}, served: ${served}, storage: ${storage}, deprecated: ${deprecated}, deprecationWarning: ${deprecationWarning}, schema: ${schema}, subresources: ${subresources}, additionalPrinterColumns: ${additionalPrinterColumns}, selectableFields: ${selectableFields}}';
  }
}

class _CustomResourceDefinitionVersionReader extends fb.TableReader<CustomResourceDefinitionVersion> {
  const _CustomResourceDefinitionVersionReader();

  @override
  CustomResourceDefinitionVersion createObject(fb.BufferContext bc, int offset) => 
    CustomResourceDefinitionVersion._(bc, offset);
}

class CustomResourceDefinitionVersionBuilder {
  CustomResourceDefinitionVersionBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(9);
  }

  int addNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addServed(bool? served) {
    fbBuilder.addBool(1, served);
    return fbBuilder.offset;
  }
  int addStorage(bool? storage) {
    fbBuilder.addBool(2, storage);
    return fbBuilder.offset;
  }
  int addDeprecated(bool? deprecated) {
    fbBuilder.addBool(3, deprecated);
    return fbBuilder.offset;
  }
  int addDeprecationWarningOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addSchemaOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addSubresourcesOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }
  int addAdditionalPrinterColumnsOffset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }
  int addSelectableFieldsOffset(int? offset) {
    fbBuilder.addOffset(8, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CustomResourceDefinitionVersionObjectBuilder extends fb.ObjectBuilder {
  final String? _name;
  final bool? _served;
  final bool? _storage;
  final bool? _deprecated;
  final String? _deprecationWarning;
  final CustomResourceValidationObjectBuilder? _schema;
  final CustomResourceSubresourcesObjectBuilder? _subresources;
  final List<CustomResourceColumnDefinitionObjectBuilder>? _additionalPrinterColumns;
  final List<SelectableFieldObjectBuilder>? _selectableFields;

  CustomResourceDefinitionVersionObjectBuilder({
    String? name,
    bool? served,
    bool? storage,
    bool? deprecated,
    String? deprecationWarning,
    CustomResourceValidationObjectBuilder? schema,
    CustomResourceSubresourcesObjectBuilder? subresources,
    List<CustomResourceColumnDefinitionObjectBuilder>? additionalPrinterColumns,
    List<SelectableFieldObjectBuilder>? selectableFields,
  })
      : _name = name,
        _served = served,
        _storage = storage,
        _deprecated = deprecated,
        _deprecationWarning = deprecationWarning,
        _schema = schema,
        _subresources = subresources,
        _additionalPrinterColumns = additionalPrinterColumns,
        _selectableFields = selectableFields;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? deprecationWarningOffset = _deprecationWarning == null ? null
        : fbBuilder.writeString(_deprecationWarning!);
    final int? schemaOffset = _schema?.getOrCreateOffset(fbBuilder);
    final int? subresourcesOffset = _subresources?.getOrCreateOffset(fbBuilder);
    final int? additionalPrinterColumnsOffset = _additionalPrinterColumns == null ? null
        : fbBuilder.writeList(_additionalPrinterColumns!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? selectableFieldsOffset = _selectableFields == null ? null
        : fbBuilder.writeList(_selectableFields!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(9);
    fbBuilder.addOffset(0, nameOffset);
    fbBuilder.addBool(1, _served);
    fbBuilder.addBool(2, _storage);
    fbBuilder.addBool(3, _deprecated);
    fbBuilder.addOffset(4, deprecationWarningOffset);
    fbBuilder.addOffset(5, schemaOffset);
    fbBuilder.addOffset(6, subresourcesOffset);
    fbBuilder.addOffset(7, additionalPrinterColumnsOffset);
    fbBuilder.addOffset(8, selectableFieldsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CustomResourceSubresourceScale {
  CustomResourceSubresourceScale._(this._bc, this._bcOffset);
  factory CustomResourceSubresourceScale(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CustomResourceSubresourceScale> reader = _CustomResourceSubresourceScaleReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get specReplicasPath => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get statusReplicasPath => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  String? get labelSelectorPath => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'CustomResourceSubresourceScale{specReplicasPath: ${specReplicasPath}, statusReplicasPath: ${statusReplicasPath}, labelSelectorPath: ${labelSelectorPath}}';
  }
}

class _CustomResourceSubresourceScaleReader extends fb.TableReader<CustomResourceSubresourceScale> {
  const _CustomResourceSubresourceScaleReader();

  @override
  CustomResourceSubresourceScale createObject(fb.BufferContext bc, int offset) => 
    CustomResourceSubresourceScale._(bc, offset);
}

class CustomResourceSubresourceScaleBuilder {
  CustomResourceSubresourceScaleBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addSpecReplicasPathOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addStatusReplicasPathOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addLabelSelectorPathOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CustomResourceSubresourceScaleObjectBuilder extends fb.ObjectBuilder {
  final String? _specReplicasPath;
  final String? _statusReplicasPath;
  final String? _labelSelectorPath;

  CustomResourceSubresourceScaleObjectBuilder({
    String? specReplicasPath,
    String? statusReplicasPath,
    String? labelSelectorPath,
  })
      : _specReplicasPath = specReplicasPath,
        _statusReplicasPath = statusReplicasPath,
        _labelSelectorPath = labelSelectorPath;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? specReplicasPathOffset = _specReplicasPath == null ? null
        : fbBuilder.writeString(_specReplicasPath!);
    final int? statusReplicasPathOffset = _statusReplicasPath == null ? null
        : fbBuilder.writeString(_statusReplicasPath!);
    final int? labelSelectorPathOffset = _labelSelectorPath == null ? null
        : fbBuilder.writeString(_labelSelectorPath!);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, specReplicasPathOffset);
    fbBuilder.addOffset(1, statusReplicasPathOffset);
    fbBuilder.addOffset(2, labelSelectorPathOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CustomResourceSubresourceStatus {
  CustomResourceSubresourceStatus._(this._bc, this._bcOffset);
  factory CustomResourceSubresourceStatus(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CustomResourceSubresourceStatus> reader = _CustomResourceSubresourceStatusReader();

  final fb.BufferContext _bc;
  final int _bcOffset;


  @override
  String toString() {
    return 'CustomResourceSubresourceStatus{}';
  }
}

class _CustomResourceSubresourceStatusReader extends fb.TableReader<CustomResourceSubresourceStatus> {
  const _CustomResourceSubresourceStatusReader();

  @override
  CustomResourceSubresourceStatus createObject(fb.BufferContext bc, int offset) => 
    CustomResourceSubresourceStatus._(bc, offset);
}

class CustomResourceSubresourceStatusObjectBuilder extends fb.ObjectBuilder {

  CustomResourceSubresourceStatusObjectBuilder();

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    fbBuilder.startTable(0);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CustomResourceSubresources {
  CustomResourceSubresources._(this._bc, this._bcOffset);
  factory CustomResourceSubresources(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CustomResourceSubresources> reader = _CustomResourceSubresourcesReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  CustomResourceSubresourceStatus? get status => CustomResourceSubresourceStatus.reader.vTableGetNullable(_bc, _bcOffset, 4);
  CustomResourceSubresourceScale? get scale => CustomResourceSubresourceScale.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'CustomResourceSubresources{status: ${status}, scale: ${scale}}';
  }
}

class _CustomResourceSubresourcesReader extends fb.TableReader<CustomResourceSubresources> {
  const _CustomResourceSubresourcesReader();

  @override
  CustomResourceSubresources createObject(fb.BufferContext bc, int offset) => 
    CustomResourceSubresources._(bc, offset);
}

class CustomResourceSubresourcesBuilder {
  CustomResourceSubresourcesBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addStatusOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addScaleOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CustomResourceSubresourcesObjectBuilder extends fb.ObjectBuilder {
  final CustomResourceSubresourceStatusObjectBuilder? _status;
  final CustomResourceSubresourceScaleObjectBuilder? _scale;

  CustomResourceSubresourcesObjectBuilder({
    CustomResourceSubresourceStatusObjectBuilder? status,
    CustomResourceSubresourceScaleObjectBuilder? scale,
  })
      : _status = status,
        _scale = scale;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? statusOffset = _status?.getOrCreateOffset(fbBuilder);
    final int? scaleOffset = _scale?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, statusOffset);
    fbBuilder.addOffset(1, scaleOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class CustomResourceValidation {
  CustomResourceValidation._(this._bc, this._bcOffset);
  factory CustomResourceValidation(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CustomResourceValidation> reader = _CustomResourceValidationReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  JsonschemaProps? get openApiv3Schema => JsonschemaProps.reader.vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'CustomResourceValidation{openApiv3Schema: ${openApiv3Schema}}';
  }
}

class _CustomResourceValidationReader extends fb.TableReader<CustomResourceValidation> {
  const _CustomResourceValidationReader();

  @override
  CustomResourceValidation createObject(fb.BufferContext bc, int offset) => 
    CustomResourceValidation._(bc, offset);
}

class CustomResourceValidationBuilder {
  CustomResourceValidationBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addOpenApiv3SchemaOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CustomResourceValidationObjectBuilder extends fb.ObjectBuilder {
  final JsonschemaPropsObjectBuilder? _openApiv3Schema;

  CustomResourceValidationObjectBuilder({
    JsonschemaPropsObjectBuilder? openApiv3Schema,
  })
      : _openApiv3Schema = openApiv3Schema;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? openApiv3SchemaOffset = _openApiv3Schema?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, openApiv3SchemaOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ExternalDocumentation {
  ExternalDocumentation._(this._bc, this._bcOffset);
  factory ExternalDocumentation(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ExternalDocumentation> reader = _ExternalDocumentationReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get description => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get url => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'ExternalDocumentation{description: ${description}, url: ${url}}';
  }
}

class _ExternalDocumentationReader extends fb.TableReader<ExternalDocumentation> {
  const _ExternalDocumentationReader();

  @override
  ExternalDocumentation createObject(fb.BufferContext bc, int offset) => 
    ExternalDocumentation._(bc, offset);
}

class ExternalDocumentationBuilder {
  ExternalDocumentationBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addDescriptionOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addUrlOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ExternalDocumentationObjectBuilder extends fb.ObjectBuilder {
  final String? _description;
  final String? _url;

  ExternalDocumentationObjectBuilder({
    String? description,
    String? url,
  })
      : _description = description,
        _url = url;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? descriptionOffset = _description == null ? null
        : fbBuilder.writeString(_description!);
    final int? urlOffset = _url == null ? null
        : fbBuilder.writeString(_url!);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, descriptionOffset);
    fbBuilder.addOffset(1, urlOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class Json {
  Json._(this._bc, this._bcOffset);
  factory Json(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<Json> reader = _JsonReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<int>? get raw => const fb.Uint8ListReader().vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'Json{raw: ${raw}}';
  }
}

class _JsonReader extends fb.TableReader<Json> {
  const _JsonReader();

  @override
  Json createObject(fb.BufferContext bc, int offset) => 
    Json._(bc, offset);
}

class JsonBuilder {
  JsonBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addRawOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class JsonObjectBuilder extends fb.ObjectBuilder {
  final List<int>? _raw;

  JsonObjectBuilder({
    List<int>? raw,
  })
      : _raw = raw;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? rawOffset = _raw == null ? null
        : fbBuilder.writeListUint8(_raw!);
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, rawOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class JsonschemaProps {
  JsonschemaProps._(this._bc, this._bcOffset);
  factory JsonschemaProps(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<JsonschemaProps> reader = _JsonschemaPropsReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get id => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get schema => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  String? get ref => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  String? get description => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  String? get type => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  String? get format => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 14);
  String? get title => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 16);
  Json? get $default => Json.reader.vTableGetNullable(_bc, _bcOffset, 18);
  double get maximum => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 20, 0);
  bool get exclusiveMaximum => const fb.BoolReader().vTableGet(_bc, _bcOffset, 22, false);
  double get minimum => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 24, 0);
  bool get exclusiveMinimum => const fb.BoolReader().vTableGet(_bc, _bcOffset, 26, false);
  int get maxLength => const fb.Int64Reader().vTableGet(_bc, _bcOffset, 28, 0);
  int get minLength => const fb.Int64Reader().vTableGet(_bc, _bcOffset, 30, 0);
  String? get pattern => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 32);
  int get maxItems => const fb.Int64Reader().vTableGet(_bc, _bcOffset, 34, 0);
  int get minItems => const fb.Int64Reader().vTableGet(_bc, _bcOffset, 36, 0);
  bool get uniqueItems => const fb.BoolReader().vTableGet(_bc, _bcOffset, 38, false);
  double get multipleOf => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 40, 0);
  List<Json>? get $enum => const fb.ListReader<Json>(Json.reader).vTableGetNullable(_bc, _bcOffset, 42);
  int get maxProperties => const fb.Int64Reader().vTableGet(_bc, _bcOffset, 44, 0);
  int get minProperties => const fb.Int64Reader().vTableGet(_bc, _bcOffset, 46, 0);
  List<String>? get $required => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 48);
  JsonschemaPropsOrArray? get items => JsonschemaPropsOrArray.reader.vTableGetNullable(_bc, _bcOffset, 50);
  List<JsonschemaProps>? get allOf => const fb.ListReader<JsonschemaProps>(JsonschemaProps.reader).vTableGetNullable(_bc, _bcOffset, 52);
  List<JsonschemaProps>? get oneOf => const fb.ListReader<JsonschemaProps>(JsonschemaProps.reader).vTableGetNullable(_bc, _bcOffset, 54);
  List<JsonschemaProps>? get anyOf => const fb.ListReader<JsonschemaProps>(JsonschemaProps.reader).vTableGetNullable(_bc, _bcOffset, 56);
  JsonschemaProps? get not => JsonschemaProps.reader.vTableGetNullable(_bc, _bcOffset, 58);
  List<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.PropertiesEntry>? get properties => const fb.ListReader<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.PropertiesEntry>(apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.PropertiesEntry.reader).vTableGetNullable(_bc, _bcOffset, 60);
  JsonschemaPropsOrBool? get additionalProperties => JsonschemaPropsOrBool.reader.vTableGetNullable(_bc, _bcOffset, 62);
  List<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.PatternPropertiesEntry>? get patternProperties => const fb.ListReader<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.PatternPropertiesEntry>(apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.PatternPropertiesEntry.reader).vTableGetNullable(_bc, _bcOffset, 64);
  List<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.DependenciesEntry>? get dependencies => const fb.ListReader<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.DependenciesEntry>(apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.DependenciesEntry.reader).vTableGetNullable(_bc, _bcOffset, 66);
  JsonschemaPropsOrBool? get additionalItems => JsonschemaPropsOrBool.reader.vTableGetNullable(_bc, _bcOffset, 68);
  List<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.DefinitionsEntry>? get definitions => const fb.ListReader<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.DefinitionsEntry>(apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.DefinitionsEntry.reader).vTableGetNullable(_bc, _bcOffset, 70);
  ExternalDocumentation? get externalDocs => ExternalDocumentation.reader.vTableGetNullable(_bc, _bcOffset, 72);
  Json? get example => Json.reader.vTableGetNullable(_bc, _bcOffset, 74);
  bool get nullable => const fb.BoolReader().vTableGet(_bc, _bcOffset, 76, false);
  bool get xKubernetesPreserveUnknownFields => const fb.BoolReader().vTableGet(_bc, _bcOffset, 78, false);
  bool get xKubernetesEmbeddedResource => const fb.BoolReader().vTableGet(_bc, _bcOffset, 80, false);
  bool get xKubernetesIntOrString => const fb.BoolReader().vTableGet(_bc, _bcOffset, 82, false);
  List<String>? get xKubernetesListMapKeys => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 84);
  String? get xKubernetesListType => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 86);
  String? get xKubernetesMapType => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 88);
  List<ValidationRule>? get xKubernetesValidations => const fb.ListReader<ValidationRule>(ValidationRule.reader).vTableGetNullable(_bc, _bcOffset, 90);

  @override
  String toString() {
    return 'JsonschemaProps{id: ${id}, schema: ${schema}, ref: ${ref}, description: ${description}, type: ${type}, format: ${format}, title: ${title}, \$default: ${$default}, maximum: ${maximum}, exclusiveMaximum: ${exclusiveMaximum}, minimum: ${minimum}, exclusiveMinimum: ${exclusiveMinimum}, maxLength: ${maxLength}, minLength: ${minLength}, pattern: ${pattern}, maxItems: ${maxItems}, minItems: ${minItems}, uniqueItems: ${uniqueItems}, multipleOf: ${multipleOf}, \$enum: ${$enum}, maxProperties: ${maxProperties}, minProperties: ${minProperties}, \$required: ${$required}, items: ${items}, allOf: ${allOf}, oneOf: ${oneOf}, anyOf: ${anyOf}, not: ${not}, properties: ${properties}, additionalProperties: ${additionalProperties}, patternProperties: ${patternProperties}, dependencies: ${dependencies}, additionalItems: ${additionalItems}, definitions: ${definitions}, externalDocs: ${externalDocs}, example: ${example}, nullable: ${nullable}, xKubernetesPreserveUnknownFields: ${xKubernetesPreserveUnknownFields}, xKubernetesEmbeddedResource: ${xKubernetesEmbeddedResource}, xKubernetesIntOrString: ${xKubernetesIntOrString}, xKubernetesListMapKeys: ${xKubernetesListMapKeys}, xKubernetesListType: ${xKubernetesListType}, xKubernetesMapType: ${xKubernetesMapType}, xKubernetesValidations: ${xKubernetesValidations}}';
  }
}

class _JsonschemaPropsReader extends fb.TableReader<JsonschemaProps> {
  const _JsonschemaPropsReader();

  @override
  JsonschemaProps createObject(fb.BufferContext bc, int offset) => 
    JsonschemaProps._(bc, offset);
}

class JsonschemaPropsBuilder {
  JsonschemaPropsBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(44);
  }

  int addIdOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSchemaOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addRefOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addDescriptionOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addTypeOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addFormatOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addTitleOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }
  int addDefaultOffset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }
  int addMaximum(double? maximum) {
    fbBuilder.addFloat64(8, maximum);
    return fbBuilder.offset;
  }
  int addExclusiveMaximum(bool? exclusiveMaximum) {
    fbBuilder.addBool(9, exclusiveMaximum);
    return fbBuilder.offset;
  }
  int addMinimum(double? minimum) {
    fbBuilder.addFloat64(10, minimum);
    return fbBuilder.offset;
  }
  int addExclusiveMinimum(bool? exclusiveMinimum) {
    fbBuilder.addBool(11, exclusiveMinimum);
    return fbBuilder.offset;
  }
  int addMaxLength(int? maxLength) {
    fbBuilder.addInt64(12, maxLength);
    return fbBuilder.offset;
  }
  int addMinLength(int? minLength) {
    fbBuilder.addInt64(13, minLength);
    return fbBuilder.offset;
  }
  int addPatternOffset(int? offset) {
    fbBuilder.addOffset(14, offset);
    return fbBuilder.offset;
  }
  int addMaxItems(int? maxItems) {
    fbBuilder.addInt64(15, maxItems);
    return fbBuilder.offset;
  }
  int addMinItems(int? minItems) {
    fbBuilder.addInt64(16, minItems);
    return fbBuilder.offset;
  }
  int addUniqueItems(bool? uniqueItems) {
    fbBuilder.addBool(17, uniqueItems);
    return fbBuilder.offset;
  }
  int addMultipleOf(double? multipleOf) {
    fbBuilder.addFloat64(18, multipleOf);
    return fbBuilder.offset;
  }
  int addEnumOffset(int? offset) {
    fbBuilder.addOffset(19, offset);
    return fbBuilder.offset;
  }
  int addMaxProperties(int? maxProperties) {
    fbBuilder.addInt64(20, maxProperties);
    return fbBuilder.offset;
  }
  int addMinProperties(int? minProperties) {
    fbBuilder.addInt64(21, minProperties);
    return fbBuilder.offset;
  }
  int addRequiredOffset(int? offset) {
    fbBuilder.addOffset(22, offset);
    return fbBuilder.offset;
  }
  int addItemsOffset(int? offset) {
    fbBuilder.addOffset(23, offset);
    return fbBuilder.offset;
  }
  int addAllOfOffset(int? offset) {
    fbBuilder.addOffset(24, offset);
    return fbBuilder.offset;
  }
  int addOneOfOffset(int? offset) {
    fbBuilder.addOffset(25, offset);
    return fbBuilder.offset;
  }
  int addAnyOfOffset(int? offset) {
    fbBuilder.addOffset(26, offset);
    return fbBuilder.offset;
  }
  int addNotOffset(int? offset) {
    fbBuilder.addOffset(27, offset);
    return fbBuilder.offset;
  }
  int addPropertiesOffset(int? offset) {
    fbBuilder.addOffset(28, offset);
    return fbBuilder.offset;
  }
  int addAdditionalPropertiesOffset(int? offset) {
    fbBuilder.addOffset(29, offset);
    return fbBuilder.offset;
  }
  int addPatternPropertiesOffset(int? offset) {
    fbBuilder.addOffset(30, offset);
    return fbBuilder.offset;
  }
  int addDependenciesOffset(int? offset) {
    fbBuilder.addOffset(31, offset);
    return fbBuilder.offset;
  }
  int addAdditionalItemsOffset(int? offset) {
    fbBuilder.addOffset(32, offset);
    return fbBuilder.offset;
  }
  int addDefinitionsOffset(int? offset) {
    fbBuilder.addOffset(33, offset);
    return fbBuilder.offset;
  }
  int addExternalDocsOffset(int? offset) {
    fbBuilder.addOffset(34, offset);
    return fbBuilder.offset;
  }
  int addExampleOffset(int? offset) {
    fbBuilder.addOffset(35, offset);
    return fbBuilder.offset;
  }
  int addNullable(bool? nullable) {
    fbBuilder.addBool(36, nullable);
    return fbBuilder.offset;
  }
  int addXKubernetesPreserveUnknownFields(bool? xKubernetesPreserveUnknownFields) {
    fbBuilder.addBool(37, xKubernetesPreserveUnknownFields);
    return fbBuilder.offset;
  }
  int addXKubernetesEmbeddedResource(bool? xKubernetesEmbeddedResource) {
    fbBuilder.addBool(38, xKubernetesEmbeddedResource);
    return fbBuilder.offset;
  }
  int addXKubernetesIntOrString(bool? xKubernetesIntOrString) {
    fbBuilder.addBool(39, xKubernetesIntOrString);
    return fbBuilder.offset;
  }
  int addXKubernetesListMapKeysOffset(int? offset) {
    fbBuilder.addOffset(40, offset);
    return fbBuilder.offset;
  }
  int addXKubernetesListTypeOffset(int? offset) {
    fbBuilder.addOffset(41, offset);
    return fbBuilder.offset;
  }
  int addXKubernetesMapTypeOffset(int? offset) {
    fbBuilder.addOffset(42, offset);
    return fbBuilder.offset;
  }
  int addXKubernetesValidationsOffset(int? offset) {
    fbBuilder.addOffset(43, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class JsonschemaPropsObjectBuilder extends fb.ObjectBuilder {
  final String? _id;
  final String? _schema;
  final String? _ref;
  final String? _description;
  final String? _type;
  final String? _format;
  final String? _title;
  final JsonObjectBuilder? _$default;
  final double? _maximum;
  final bool? _exclusiveMaximum;
  final double? _minimum;
  final bool? _exclusiveMinimum;
  final int? _maxLength;
  final int? _minLength;
  final String? _pattern;
  final int? _maxItems;
  final int? _minItems;
  final bool? _uniqueItems;
  final double? _multipleOf;
  final List<JsonObjectBuilder>? _$enum;
  final int? _maxProperties;
  final int? _minProperties;
  final List<String>? _$required;
  final JsonschemaPropsOrArrayObjectBuilder? _items;
  final List<JsonschemaPropsObjectBuilder>? _allOf;
  final List<JsonschemaPropsObjectBuilder>? _oneOf;
  final List<JsonschemaPropsObjectBuilder>? _anyOf;
  final JsonschemaPropsObjectBuilder? _not;
  final List<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.PropertiesEntryObjectBuilder>? _properties;
  final JsonschemaPropsOrBoolObjectBuilder? _additionalProperties;
  final List<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.PatternPropertiesEntryObjectBuilder>? _patternProperties;
  final List<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.DependenciesEntryObjectBuilder>? _dependencies;
  final JsonschemaPropsOrBoolObjectBuilder? _additionalItems;
  final List<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.DefinitionsEntryObjectBuilder>? _definitions;
  final ExternalDocumentationObjectBuilder? _externalDocs;
  final JsonObjectBuilder? _example;
  final bool? _nullable;
  final bool? _xKubernetesPreserveUnknownFields;
  final bool? _xKubernetesEmbeddedResource;
  final bool? _xKubernetesIntOrString;
  final List<String>? _xKubernetesListMapKeys;
  final String? _xKubernetesListType;
  final String? _xKubernetesMapType;
  final List<ValidationRuleObjectBuilder>? _xKubernetesValidations;

  JsonschemaPropsObjectBuilder({
    String? id,
    String? schema,
    String? ref,
    String? description,
    String? type,
    String? format,
    String? title,
    JsonObjectBuilder? $default,
    double? maximum,
    bool? exclusiveMaximum,
    double? minimum,
    bool? exclusiveMinimum,
    int? maxLength,
    int? minLength,
    String? pattern,
    int? maxItems,
    int? minItems,
    bool? uniqueItems,
    double? multipleOf,
    List<JsonObjectBuilder>? $enum,
    int? maxProperties,
    int? minProperties,
    List<String>? $required,
    JsonschemaPropsOrArrayObjectBuilder? items,
    List<JsonschemaPropsObjectBuilder>? allOf,
    List<JsonschemaPropsObjectBuilder>? oneOf,
    List<JsonschemaPropsObjectBuilder>? anyOf,
    JsonschemaPropsObjectBuilder? not,
    List<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.PropertiesEntryObjectBuilder>? properties,
    JsonschemaPropsOrBoolObjectBuilder? additionalProperties,
    List<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.PatternPropertiesEntryObjectBuilder>? patternProperties,
    List<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.DependenciesEntryObjectBuilder>? dependencies,
    JsonschemaPropsOrBoolObjectBuilder? additionalItems,
    List<apiextensions_apiserver_pkg_apis_apiextensions_v1_jsonschema_props_.DefinitionsEntryObjectBuilder>? definitions,
    ExternalDocumentationObjectBuilder? externalDocs,
    JsonObjectBuilder? example,
    bool? nullable,
    bool? xKubernetesPreserveUnknownFields,
    bool? xKubernetesEmbeddedResource,
    bool? xKubernetesIntOrString,
    List<String>? xKubernetesListMapKeys,
    String? xKubernetesListType,
    String? xKubernetesMapType,
    List<ValidationRuleObjectBuilder>? xKubernetesValidations,
  })
      : _id = id,
        _schema = schema,
        _ref = ref,
        _description = description,
        _type = type,
        _format = format,
        _title = title,
        _$default = $default,
        _maximum = maximum,
        _exclusiveMaximum = exclusiveMaximum,
        _minimum = minimum,
        _exclusiveMinimum = exclusiveMinimum,
        _maxLength = maxLength,
        _minLength = minLength,
        _pattern = pattern,
        _maxItems = maxItems,
        _minItems = minItems,
        _uniqueItems = uniqueItems,
        _multipleOf = multipleOf,
        _$enum = $enum,
        _maxProperties = maxProperties,
        _minProperties = minProperties,
        _$required = $required,
        _items = items,
        _allOf = allOf,
        _oneOf = oneOf,
        _anyOf = anyOf,
        _not = not,
        _properties = properties,
        _additionalProperties = additionalProperties,
        _patternProperties = patternProperties,
        _dependencies = dependencies,
        _additionalItems = additionalItems,
        _definitions = definitions,
        _externalDocs = externalDocs,
        _example = example,
        _nullable = nullable,
        _xKubernetesPreserveUnknownFields = xKubernetesPreserveUnknownFields,
        _xKubernetesEmbeddedResource = xKubernetesEmbeddedResource,
        _xKubernetesIntOrString = xKubernetesIntOrString,
        _xKubernetesListMapKeys = xKubernetesListMapKeys,
        _xKubernetesListType = xKubernetesListType,
        _xKubernetesMapType = xKubernetesMapType,
        _xKubernetesValidations = xKubernetesValidations;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? idOffset = _id == null ? null
        : fbBuilder.writeString(_id!);
    final int? schemaOffset = _schema == null ? null
        : fbBuilder.writeString(_schema!);
    final int? refOffset = _ref == null ? null
        : fbBuilder.writeString(_ref!);
    final int? descriptionOffset = _description == null ? null
        : fbBuilder.writeString(_description!);
    final int? typeOffset = _type == null ? null
        : fbBuilder.writeString(_type!);
    final int? formatOffset = _format == null ? null
        : fbBuilder.writeString(_format!);
    final int? titleOffset = _title == null ? null
        : fbBuilder.writeString(_title!);
    final int? $defaultOffset = _$default?.getOrCreateOffset(fbBuilder);
    final int? patternOffset = _pattern == null ? null
        : fbBuilder.writeString(_pattern!);
    final int? $enumOffset = _$enum == null ? null
        : fbBuilder.writeList(_$enum!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? $requiredOffset = _$required == null ? null
        : fbBuilder.writeList(_$required!.map(fbBuilder.writeString).toList());
    final int? itemsOffset = _items?.getOrCreateOffset(fbBuilder);
    final int? allOfOffset = _allOf == null ? null
        : fbBuilder.writeList(_allOf!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? oneOfOffset = _oneOf == null ? null
        : fbBuilder.writeList(_oneOf!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? anyOfOffset = _anyOf == null ? null
        : fbBuilder.writeList(_anyOf!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? notOffset = _not?.getOrCreateOffset(fbBuilder);
    final int? propertiesOffset = _properties == null ? null
        : fbBuilder.writeList(_properties!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? additionalPropertiesOffset = _additionalProperties?.getOrCreateOffset(fbBuilder);
    final int? patternPropertiesOffset = _patternProperties == null ? null
        : fbBuilder.writeList(_patternProperties!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? dependenciesOffset = _dependencies == null ? null
        : fbBuilder.writeList(_dependencies!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? additionalItemsOffset = _additionalItems?.getOrCreateOffset(fbBuilder);
    final int? definitionsOffset = _definitions == null ? null
        : fbBuilder.writeList(_definitions!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    final int? externalDocsOffset = _externalDocs?.getOrCreateOffset(fbBuilder);
    final int? exampleOffset = _example?.getOrCreateOffset(fbBuilder);
    final int? xKubernetesListMapKeysOffset = _xKubernetesListMapKeys == null ? null
        : fbBuilder.writeList(_xKubernetesListMapKeys!.map(fbBuilder.writeString).toList());
    final int? xKubernetesListTypeOffset = _xKubernetesListType == null ? null
        : fbBuilder.writeString(_xKubernetesListType!);
    final int? xKubernetesMapTypeOffset = _xKubernetesMapType == null ? null
        : fbBuilder.writeString(_xKubernetesMapType!);
    final int? xKubernetesValidationsOffset = _xKubernetesValidations == null ? null
        : fbBuilder.writeList(_xKubernetesValidations!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(44);
    fbBuilder.addOffset(0, idOffset);
    fbBuilder.addOffset(1, schemaOffset);
    fbBuilder.addOffset(2, refOffset);
    fbBuilder.addOffset(3, descriptionOffset);
    fbBuilder.addOffset(4, typeOffset);
    fbBuilder.addOffset(5, formatOffset);
    fbBuilder.addOffset(6, titleOffset);
    fbBuilder.addOffset(7, $defaultOffset);
    fbBuilder.addFloat64(8, _maximum);
    fbBuilder.addBool(9, _exclusiveMaximum);
    fbBuilder.addFloat64(10, _minimum);
    fbBuilder.addBool(11, _exclusiveMinimum);
    fbBuilder.addInt64(12, _maxLength);
    fbBuilder.addInt64(13, _minLength);
    fbBuilder.addOffset(14, patternOffset);
    fbBuilder.addInt64(15, _maxItems);
    fbBuilder.addInt64(16, _minItems);
    fbBuilder.addBool(17, _uniqueItems);
    fbBuilder.addFloat64(18, _multipleOf);
    fbBuilder.addOffset(19, $enumOffset);
    fbBuilder.addInt64(20, _maxProperties);
    fbBuilder.addInt64(21, _minProperties);
    fbBuilder.addOffset(22, $requiredOffset);
    fbBuilder.addOffset(23, itemsOffset);
    fbBuilder.addOffset(24, allOfOffset);
    fbBuilder.addOffset(25, oneOfOffset);
    fbBuilder.addOffset(26, anyOfOffset);
    fbBuilder.addOffset(27, notOffset);
    fbBuilder.addOffset(28, propertiesOffset);
    fbBuilder.addOffset(29, additionalPropertiesOffset);
    fbBuilder.addOffset(30, patternPropertiesOffset);
    fbBuilder.addOffset(31, dependenciesOffset);
    fbBuilder.addOffset(32, additionalItemsOffset);
    fbBuilder.addOffset(33, definitionsOffset);
    fbBuilder.addOffset(34, externalDocsOffset);
    fbBuilder.addOffset(35, exampleOffset);
    fbBuilder.addBool(36, _nullable);
    fbBuilder.addBool(37, _xKubernetesPreserveUnknownFields);
    fbBuilder.addBool(38, _xKubernetesEmbeddedResource);
    fbBuilder.addBool(39, _xKubernetesIntOrString);
    fbBuilder.addOffset(40, xKubernetesListMapKeysOffset);
    fbBuilder.addOffset(41, xKubernetesListTypeOffset);
    fbBuilder.addOffset(42, xKubernetesMapTypeOffset);
    fbBuilder.addOffset(43, xKubernetesValidationsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class JsonschemaPropsOrArray {
  JsonschemaPropsOrArray._(this._bc, this._bcOffset);
  factory JsonschemaPropsOrArray(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<JsonschemaPropsOrArray> reader = _JsonschemaPropsOrArrayReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  JsonschemaProps? get schema => JsonschemaProps.reader.vTableGetNullable(_bc, _bcOffset, 4);
  List<JsonschemaProps>? get jSonschemas => const fb.ListReader<JsonschemaProps>(JsonschemaProps.reader).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'JsonschemaPropsOrArray{schema: ${schema}, jSonschemas: ${jSonschemas}}';
  }
}

class _JsonschemaPropsOrArrayReader extends fb.TableReader<JsonschemaPropsOrArray> {
  const _JsonschemaPropsOrArrayReader();

  @override
  JsonschemaPropsOrArray createObject(fb.BufferContext bc, int offset) => 
    JsonschemaPropsOrArray._(bc, offset);
}

class JsonschemaPropsOrArrayBuilder {
  JsonschemaPropsOrArrayBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addSchemaOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addJSonschemasOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class JsonschemaPropsOrArrayObjectBuilder extends fb.ObjectBuilder {
  final JsonschemaPropsObjectBuilder? _schema;
  final List<JsonschemaPropsObjectBuilder>? _jSonschemas;

  JsonschemaPropsOrArrayObjectBuilder({
    JsonschemaPropsObjectBuilder? schema,
    List<JsonschemaPropsObjectBuilder>? jSonschemas,
  })
      : _schema = schema,
        _jSonschemas = jSonschemas;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? schemaOffset = _schema?.getOrCreateOffset(fbBuilder);
    final int? jSonschemasOffset = _jSonschemas == null ? null
        : fbBuilder.writeList(_jSonschemas!.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, schemaOffset);
    fbBuilder.addOffset(1, jSonschemasOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class JsonschemaPropsOrBool {
  JsonschemaPropsOrBool._(this._bc, this._bcOffset);
  factory JsonschemaPropsOrBool(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<JsonschemaPropsOrBool> reader = _JsonschemaPropsOrBoolReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  bool get allows => const fb.BoolReader().vTableGet(_bc, _bcOffset, 4, false);
  JsonschemaProps? get schema => JsonschemaProps.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'JsonschemaPropsOrBool{allows: ${allows}, schema: ${schema}}';
  }
}

class _JsonschemaPropsOrBoolReader extends fb.TableReader<JsonschemaPropsOrBool> {
  const _JsonschemaPropsOrBoolReader();

  @override
  JsonschemaPropsOrBool createObject(fb.BufferContext bc, int offset) => 
    JsonschemaPropsOrBool._(bc, offset);
}

class JsonschemaPropsOrBoolBuilder {
  JsonschemaPropsOrBoolBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addAllows(bool? allows) {
    fbBuilder.addBool(0, allows);
    return fbBuilder.offset;
  }
  int addSchemaOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class JsonschemaPropsOrBoolObjectBuilder extends fb.ObjectBuilder {
  final bool? _allows;
  final JsonschemaPropsObjectBuilder? _schema;

  JsonschemaPropsOrBoolObjectBuilder({
    bool? allows,
    JsonschemaPropsObjectBuilder? schema,
  })
      : _allows = allows,
        _schema = schema;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? schemaOffset = _schema?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addBool(0, _allows);
    fbBuilder.addOffset(1, schemaOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class JsonschemaPropsOrStringArray {
  JsonschemaPropsOrStringArray._(this._bc, this._bcOffset);
  factory JsonschemaPropsOrStringArray(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<JsonschemaPropsOrStringArray> reader = _JsonschemaPropsOrStringArrayReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  JsonschemaProps? get schema => JsonschemaProps.reader.vTableGetNullable(_bc, _bcOffset, 4);
  List<String>? get property => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'JsonschemaPropsOrStringArray{schema: ${schema}, property: ${property}}';
  }
}

class _JsonschemaPropsOrStringArrayReader extends fb.TableReader<JsonschemaPropsOrStringArray> {
  const _JsonschemaPropsOrStringArrayReader();

  @override
  JsonschemaPropsOrStringArray createObject(fb.BufferContext bc, int offset) => 
    JsonschemaPropsOrStringArray._(bc, offset);
}

class JsonschemaPropsOrStringArrayBuilder {
  JsonschemaPropsOrStringArrayBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addSchemaOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addPropertyOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class JsonschemaPropsOrStringArrayObjectBuilder extends fb.ObjectBuilder {
  final JsonschemaPropsObjectBuilder? _schema;
  final List<String>? _property;

  JsonschemaPropsOrStringArrayObjectBuilder({
    JsonschemaPropsObjectBuilder? schema,
    List<String>? property,
  })
      : _schema = schema,
        _property = property;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? schemaOffset = _schema?.getOrCreateOffset(fbBuilder);
    final int? propertyOffset = _property == null ? null
        : fbBuilder.writeList(_property!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, schemaOffset);
    fbBuilder.addOffset(1, propertyOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class SelectableField {
  SelectableField._(this._bc, this._bcOffset);
  factory SelectableField(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<SelectableField> reader = _SelectableFieldReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get jsonPath => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'SelectableField{jsonPath: ${jsonPath}}';
  }
}

class _SelectableFieldReader extends fb.TableReader<SelectableField> {
  const _SelectableFieldReader();

  @override
  SelectableField createObject(fb.BufferContext bc, int offset) => 
    SelectableField._(bc, offset);
}

class SelectableFieldBuilder {
  SelectableFieldBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addJsonPathOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class SelectableFieldObjectBuilder extends fb.ObjectBuilder {
  final String? _jsonPath;

  SelectableFieldObjectBuilder({
    String? jsonPath,
  })
      : _jsonPath = jsonPath;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? jsonPathOffset = _jsonPath == null ? null
        : fbBuilder.writeString(_jsonPath!);
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, jsonPathOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ServiceReference {
  ServiceReference._(this._bc, this._bcOffset);
  factory ServiceReference(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ServiceReference> reader = _ServiceReferenceReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get namespace => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  String? get path => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  int get port => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 10, 0);

  @override
  String toString() {
    return 'ServiceReference{namespace: ${namespace}, name: ${name}, path: ${path}, port: ${port}}';
  }
}

class _ServiceReferenceReader extends fb.TableReader<ServiceReference> {
  const _ServiceReferenceReader();

  @override
  ServiceReference createObject(fb.BufferContext bc, int offset) => 
    ServiceReference._(bc, offset);
}

class ServiceReferenceBuilder {
  ServiceReferenceBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addNamespaceOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addNameOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addPathOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addPort(int? port) {
    fbBuilder.addInt32(3, port);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ServiceReferenceObjectBuilder extends fb.ObjectBuilder {
  final String? _namespace;
  final String? _name;
  final String? _path;
  final int? _port;

  ServiceReferenceObjectBuilder({
    String? namespace,
    String? name,
    String? path,
    int? port,
  })
      : _namespace = namespace,
        _name = name,
        _path = path,
        _port = port;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? namespaceOffset = _namespace == null ? null
        : fbBuilder.writeString(_namespace!);
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? pathOffset = _path == null ? null
        : fbBuilder.writeString(_path!);
    fbBuilder.startTable(4);
    fbBuilder.addOffset(0, namespaceOffset);
    fbBuilder.addOffset(1, nameOffset);
    fbBuilder.addOffset(2, pathOffset);
    fbBuilder.addInt32(3, _port);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class ValidationRule {
  ValidationRule._(this._bc, this._bcOffset);
  factory ValidationRule(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ValidationRule> reader = _ValidationRuleReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get rule => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  String? get message => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  String? get messageExpression => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  String? get reason => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  String? get fieldPath => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  bool get optionalOldSelf => const fb.BoolReader().vTableGet(_bc, _bcOffset, 14, false);

  @override
  String toString() {
    return 'ValidationRule{rule: ${rule}, message: ${message}, messageExpression: ${messageExpression}, reason: ${reason}, fieldPath: ${fieldPath}, optionalOldSelf: ${optionalOldSelf}}';
  }
}

class _ValidationRuleReader extends fb.TableReader<ValidationRule> {
  const _ValidationRuleReader();

  @override
  ValidationRule createObject(fb.BufferContext bc, int offset) => 
    ValidationRule._(bc, offset);
}

class ValidationRuleBuilder {
  ValidationRuleBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(6);
  }

  int addRuleOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addMessageOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addMessageExpressionOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addReasonOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addFieldPathOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addOptionalOldSelf(bool? optionalOldSelf) {
    fbBuilder.addBool(5, optionalOldSelf);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ValidationRuleObjectBuilder extends fb.ObjectBuilder {
  final String? _rule;
  final String? _message;
  final String? _messageExpression;
  final String? _reason;
  final String? _fieldPath;
  final bool? _optionalOldSelf;

  ValidationRuleObjectBuilder({
    String? rule,
    String? message,
    String? messageExpression,
    String? reason,
    String? fieldPath,
    bool? optionalOldSelf,
  })
      : _rule = rule,
        _message = message,
        _messageExpression = messageExpression,
        _reason = reason,
        _fieldPath = fieldPath,
        _optionalOldSelf = optionalOldSelf;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? ruleOffset = _rule == null ? null
        : fbBuilder.writeString(_rule!);
    final int? messageOffset = _message == null ? null
        : fbBuilder.writeString(_message!);
    final int? messageExpressionOffset = _messageExpression == null ? null
        : fbBuilder.writeString(_messageExpression!);
    final int? reasonOffset = _reason == null ? null
        : fbBuilder.writeString(_reason!);
    final int? fieldPathOffset = _fieldPath == null ? null
        : fbBuilder.writeString(_fieldPath!);
    fbBuilder.startTable(6);
    fbBuilder.addOffset(0, ruleOffset);
    fbBuilder.addOffset(1, messageOffset);
    fbBuilder.addOffset(2, messageExpressionOffset);
    fbBuilder.addOffset(3, reasonOffset);
    fbBuilder.addOffset(4, fieldPathOffset);
    fbBuilder.addBool(5, _optionalOldSelf);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class WebhookClientConfig {
  WebhookClientConfig._(this._bc, this._bcOffset);
  factory WebhookClientConfig(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<WebhookClientConfig> reader = _WebhookClientConfigReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get url => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ServiceReference? get service => ServiceReference.reader.vTableGetNullable(_bc, _bcOffset, 6);
  List<int>? get caBundle => const fb.Uint8ListReader().vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'WebhookClientConfig{url: ${url}, service: ${service}, caBundle: ${caBundle}}';
  }
}

class _WebhookClientConfigReader extends fb.TableReader<WebhookClientConfig> {
  const _WebhookClientConfigReader();

  @override
  WebhookClientConfig createObject(fb.BufferContext bc, int offset) => 
    WebhookClientConfig._(bc, offset);
}

class WebhookClientConfigBuilder {
  WebhookClientConfigBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addUrlOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addServiceOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addCaBundleOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class WebhookClientConfigObjectBuilder extends fb.ObjectBuilder {
  final String? _url;
  final ServiceReferenceObjectBuilder? _service;
  final List<int>? _caBundle;

  WebhookClientConfigObjectBuilder({
    String? url,
    ServiceReferenceObjectBuilder? service,
    List<int>? caBundle,
  })
      : _url = url,
        _service = service,
        _caBundle = caBundle;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? urlOffset = _url == null ? null
        : fbBuilder.writeString(_url!);
    final int? serviceOffset = _service?.getOrCreateOffset(fbBuilder);
    final int? caBundleOffset = _caBundle == null ? null
        : fbBuilder.writeListUint8(_caBundle!);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, urlOffset);
    fbBuilder.addOffset(1, serviceOffset);
    fbBuilder.addOffset(2, caBundleOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
class WebhookConversion {
  WebhookConversion._(this._bc, this._bcOffset);
  factory WebhookConversion(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<WebhookConversion> reader = _WebhookConversionReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  WebhookClientConfig? get clientConfig => WebhookClientConfig.reader.vTableGetNullable(_bc, _bcOffset, 4);
  List<String>? get conversionReviewVersions => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'WebhookConversion{clientConfig: ${clientConfig}, conversionReviewVersions: ${conversionReviewVersions}}';
  }
}

class _WebhookConversionReader extends fb.TableReader<WebhookConversion> {
  const _WebhookConversionReader();

  @override
  WebhookConversion createObject(fb.BufferContext bc, int offset) => 
    WebhookConversion._(bc, offset);
}

class WebhookConversionBuilder {
  WebhookConversionBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addClientConfigOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addConversionReviewVersionsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class WebhookConversionObjectBuilder extends fb.ObjectBuilder {
  final WebhookClientConfigObjectBuilder? _clientConfig;
  final List<String>? _conversionReviewVersions;

  WebhookConversionObjectBuilder({
    WebhookClientConfigObjectBuilder? clientConfig,
    List<String>? conversionReviewVersions,
  })
      : _clientConfig = clientConfig,
        _conversionReviewVersions = conversionReviewVersions;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? clientConfigOffset = _clientConfig?.getOrCreateOffset(fbBuilder);
    final int? conversionReviewVersionsOffset = _conversionReviewVersions == null ? null
        : fbBuilder.writeList(_conversionReviewVersions!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, clientConfigOffset);
    fbBuilder.addOffset(1, conversionReviewVersionsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
