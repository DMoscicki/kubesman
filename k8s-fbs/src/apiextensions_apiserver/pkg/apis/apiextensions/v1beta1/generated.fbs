// Generated from generated.proto

namespace apimachinery.pkg.runtime;

table RawExtension {
  raw:[ubyte] (id: 0);
}

table TypeMeta {
  apiVersion:string (id: 0);
  kind:string (id: 1);
}

table Unknown {
  typeMeta:apimachinery.pkg.runtime.TypeMeta (id: 0);
  raw:[ubyte] (id: 1);
  contentEncoding:string (id: 2);
  contentType:string (id: 3);
}

namespace apimachinery.pkg.apis.meta.v1;

table APIGroup {
  name:string (id: 0);
  versions:[apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery] (id: 1);
  preferredVersion:apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery (id: 2);
  serverAddressByClientCIDRs:[apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR] (id: 3);
}

table APIGroupList {
  groups:[apimachinery.pkg.apis.meta.v1.APIGroup] (id: 0);
}

table APIResource {
  name:string (id: 0);
  singularName:string (id: 5);
  namespaced:bool (id: 1);
  group:string (id: 7);
  version:string (id: 8);
  kind:string (id: 2);
  verbs:apimachinery.pkg.apis.meta.v1.Verbs (id: 3);
  shortNames:[string] (id: 4);
  categories:[string] (id: 6);
  storageVersionHash:string (id: 9);
}

table APIResourceList {
  groupVersion:string (id: 0);
  resources:[apimachinery.pkg.apis.meta.v1.APIResource] (id: 1);
}

table APIVersions {
  versions:[string] (id: 0);
  serverAddressByClientCIDRs:[apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR] (id: 1);
}

table ApplyOptions {
  dryRun:[string] (id: 0);
  force:bool (id: 1);
  fieldManager:string (id: 2);
}

table Condition {
  type:string (id: 0);
  status:string (id: 1);
  observedGeneration:long (id: 2);
  lastTransitionTime:apimachinery.pkg.apis.meta.v1.Time (id: 3);
  reason:string (id: 4);
  message:string (id: 5);
}

table CreateOptions {
  dryRun:[string] (id: 0);
  fieldManager:string (id: 1);
  fieldValidation:string (id: 2);
}

table DeleteOptions {
  gracePeriodSeconds:long (id: 0);
  preconditions:apimachinery.pkg.apis.meta.v1.Preconditions (id: 1);
  orphanDependents:bool (id: 2);
  propagationPolicy:string (id: 3);
  dryRun:[string] (id: 4);
}

table Duration {
  duration:long (id: 0);
}

table FieldsV1 {
  Raw:[ubyte] (id: 0);
}

table GetOptions {
  resourceVersion:string (id: 0);
}

table GroupKind {
  group:string (id: 0);
  kind:string (id: 1);
}

table GroupResource {
  group:string (id: 0);
  resource:string (id: 1);
}

table GroupVersion {
  group:string (id: 0);
  version:string (id: 1);
}

table GroupVersionForDiscovery {
  groupVersion:string (id: 0);
  version:string (id: 1);
}

table GroupVersionKind {
  group:string (id: 0);
  version:string (id: 1);
  kind:string (id: 2);
}

table GroupVersionResource {
  group:string (id: 0);
  version:string (id: 1);
  resource:string (id: 2);
}

table LabelSelector {
  matchLabels:[apimachinery.pkg.apis.meta.v1.LabelSelector_.MatchLabelsEntry] (id: 0);
  matchExpressions:[apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement] (id: 1);
}

namespace apimachinery.pkg.apis.meta.v1.LabelSelector_;

table MatchLabelsEntry {
  key:string (key);
  value:string;
}

namespace apimachinery.pkg.apis.meta.v1;

table LabelSelectorRequirement {
  key:string (id: 0);
  operator:string (id: 1);
  values:[string] (id: 2);
}

table List {
  metadata:apimachinery.pkg.apis.meta.v1.ListMeta (id: 0);
  items:[apimachinery.pkg.runtime.RawExtension] (id: 1);
}

table ListMeta {
  selfLink:string (id: 0);
  resourceVersion:string (id: 1);
  continue:string (id: 2);
  remainingItemCount:long (id: 3);
}

table ListOptions {
  labelSelector:string (id: 0);
  fieldSelector:string (id: 1);
  watch:bool (id: 2);
  allowWatchBookmarks:bool (id: 7);
  resourceVersion:string (id: 3);
  resourceVersionMatch:string (id: 8);
  timeoutSeconds:long (id: 4);
  limit:long (id: 5);
  continue:string (id: 6);
  sendInitialEvents:bool (id: 9);
}

table ManagedFieldsEntry {
  manager:string (id: 0);
  operation:string (id: 1);
  apiVersion:string (id: 2);
  time:apimachinery.pkg.apis.meta.v1.Time (id: 3);
  fieldsType:string (id: 4);
  fieldsV1:apimachinery.pkg.apis.meta.v1.FieldsV1 (id: 5);
  subresource:string (id: 6);
}

table MicroTime {
  seconds:long (id: 0);
  nanos:int (id: 1);
}

table ObjectMeta {
  name:string (id: 0);
  generateName:string (id: 1);
  namespace:string (id: 2);
  selfLink:string (id: 3);
  uid:string (id: 4);
  resourceVersion:string (id: 5);
  generation:long (id: 6);
  creationTimestamp:apimachinery.pkg.apis.meta.v1.Time (id: 7);
  deletionTimestamp:apimachinery.pkg.apis.meta.v1.Time (id: 8);
  deletionGracePeriodSeconds:long (id: 9);
  labels:[apimachinery.pkg.apis.meta.v1.ObjectMeta_.LabelsEntry] (id: 10);
  annotations:[apimachinery.pkg.apis.meta.v1.ObjectMeta_.AnnotationsEntry] (id: 11);
  ownerReferences:[apimachinery.pkg.apis.meta.v1.OwnerReference] (id: 12);
  finalizers:[string] (id: 13);
  managedFields:[apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry] (id: 14);
}

namespace apimachinery.pkg.apis.meta.v1.ObjectMeta_;

table LabelsEntry {
  key:string (key);
  value:string;
}

table AnnotationsEntry {
  key:string (key);
  value:string;
}

namespace apimachinery.pkg.apis.meta.v1;

table OwnerReference {
  apiVersion:string (id: 3);
  kind:string (id: 0);
  name:string (id: 1);
  uid:string (id: 2);
  controller:bool (id: 4);
  blockOwnerDeletion:bool (id: 5);
}

table PartialObjectMetadata {
  metadata:apimachinery.pkg.apis.meta.v1.ObjectMeta (id: 0);
}

table PartialObjectMetadataList {
  metadata:apimachinery.pkg.apis.meta.v1.ListMeta (id: 0);
  items:[apimachinery.pkg.apis.meta.v1.PartialObjectMetadata] (id: 1);
}

table Patch {
}

table PatchOptions {
  dryRun:[string] (id: 0);
  force:bool (id: 1);
  fieldManager:string (id: 2);
  fieldValidation:string (id: 3);
}

table Preconditions {
  uid:string (id: 0);
  resourceVersion:string (id: 1);
}

table RootPaths {
  paths:[string] (id: 0);
}

table ServerAddressByClientCIDR {
  clientCIDR:string (id: 0);
  serverAddress:string (id: 1);
}

table Status {
  metadata:apimachinery.pkg.apis.meta.v1.ListMeta (id: 0);
  status:string (id: 1);
  message:string (id: 2);
  reason:string (id: 3);
  details:apimachinery.pkg.apis.meta.v1.StatusDetails (id: 4);
  code:int (id: 5);
}

table StatusCause {
  reason:string (id: 0);
  message:string (id: 1);
  field:string (id: 2);
}

table StatusDetails {
  name:string (id: 0);
  group:string (id: 1);
  kind:string (id: 2);
  uid:string (id: 5);
  causes:[apimachinery.pkg.apis.meta.v1.StatusCause] (id: 3);
  retryAfterSeconds:int (id: 4);
}

table TableOptions {
  includeObject:string (id: 0);
}

table Time {
  seconds:long (id: 0);
  nanos:int (id: 1);
}

table Timestamp {
  seconds:long (id: 0);
  nanos:int (id: 1);
}

table TypeMeta {
  kind:string (id: 0);
  apiVersion:string (id: 1);
}

table UpdateOptions {
  dryRun:[string] (id: 0);
  fieldManager:string (id: 1);
  fieldValidation:string (id: 2);
}

table Verbs {
  items:[string] (id: 0);
}

table WatchEvent {
  type:string (id: 0);
  object:apimachinery.pkg.runtime.RawExtension (id: 1);
}

namespace apiextensions_apiserver.pkg.apis.apiextensions.v1beta1;

table ConversionRequest {
  uid:string (id: 0);
  desiredAPIVersion:string (id: 1);
  objects:[apimachinery.pkg.runtime.RawExtension] (id: 2);
}

table ConversionResponse {
  uid:string (id: 0);
  convertedObjects:[apimachinery.pkg.runtime.RawExtension] (id: 1);
  result:apimachinery.pkg.apis.meta.v1.Status (id: 2);
}

table ConversionReview {
  request:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.ConversionRequest (id: 0);
  response:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.ConversionResponse (id: 1);
}

table CustomResourceColumnDefinition {
  name:string (id: 0);
  type:string (id: 1);
  format:string (id: 2);
  description:string (id: 3);
  priority:int (id: 4);
  JSONPath:string (id: 5);
}

table CustomResourceConversion {
  strategy:string (id: 0);
  webhookClientConfig:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.WebhookClientConfig (id: 1);
  conversionReviewVersions:[string] (id: 2);
}

table CustomResourceDefinition {
  metadata:apimachinery.pkg.apis.meta.v1.ObjectMeta (id: 0);
  spec:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec (id: 1);
  status:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionStatus (id: 2);
}

table CustomResourceDefinitionCondition {
  type:string (id: 0);
  status:string (id: 1);
  lastTransitionTime:apimachinery.pkg.apis.meta.v1.Time (id: 2);
  reason:string (id: 3);
  message:string (id: 4);
}

table CustomResourceDefinitionList {
  metadata:apimachinery.pkg.apis.meta.v1.ListMeta (id: 0);
  items:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinition] (id: 1);
}

table CustomResourceDefinitionNames {
  plural:string (id: 0);
  singular:string (id: 1);
  shortNames:[string] (id: 2);
  kind:string (id: 3);
  listKind:string (id: 4);
  categories:[string] (id: 5);
}

table CustomResourceDefinitionSpec {
  group:string (id: 0);
  version:string (id: 1);
  names:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames (id: 2);
  scope:string (id: 3);
  validation:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceValidation (id: 4);
  subresources:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresources (id: 5);
  versions:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionVersion] (id: 6);
  additionalPrinterColumns:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceColumnDefinition] (id: 7);
  selectableFields:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.SelectableField] (id: 10);
  conversion:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceConversion (id: 8);
  preserveUnknownFields:bool (id: 9);
}

table CustomResourceDefinitionStatus {
  conditions:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionCondition] (id: 0);
  acceptedNames:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames (id: 1);
  storedVersions:[string] (id: 2);
}

table CustomResourceDefinitionVersion {
  name:string (id: 0);
  served:bool (id: 1);
  storage:bool (id: 2);
  deprecated:bool (id: 6);
  deprecationWarning:string (id: 7);
  schema:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceValidation (id: 3);
  subresources:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresources (id: 4);
  additionalPrinterColumns:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceColumnDefinition] (id: 5);
  selectableFields:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.SelectableField] (id: 8);
}

table CustomResourceSubresourceScale {
  specReplicasPath:string (id: 0);
  statusReplicasPath:string (id: 1);
  labelSelectorPath:string (id: 2);
}

table CustomResourceSubresourceStatus {
}

table CustomResourceSubresources {
  status:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresourceStatus (id: 0);
  scale:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresourceScale (id: 1);
}

table CustomResourceValidation {
  openAPIV3Schema:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps (id: 0);
}

table ExternalDocumentation {
  description:string (id: 0);
  url:string (id: 1);
}

table JSON {
  raw:[ubyte] (id: 0);
}

table JSONSchemaProps {
  id:string (id: 0);
  schema:string (id: 1);
  ref:string (id: 2);
  description:string (id: 3);
  type:string (id: 4);
  format:string (id: 5);
  title:string (id: 6);
  default:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSON (id: 7);
  maximum:double (id: 8);
  exclusiveMaximum:bool (id: 9);
  minimum:double (id: 10);
  exclusiveMinimum:bool (id: 11);
  maxLength:long (id: 12);
  minLength:long (id: 13);
  pattern:string (id: 14);
  maxItems:long (id: 15);
  minItems:long (id: 16);
  uniqueItems:bool (id: 17);
  multipleOf:double (id: 18);
  enum:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSON] (id: 19);
  maxProperties:long (id: 20);
  minProperties:long (id: 21);
  required:[string] (id: 22);
  items:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrArray (id: 23);
  allOf:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps] (id: 24);
  oneOf:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps] (id: 25);
  anyOf:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps] (id: 26);
  not:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps (id: 27);
  properties:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps_.PropertiesEntry] (id: 28);
  additionalProperties:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrBool (id: 29);
  patternProperties:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps_.PatternPropertiesEntry] (id: 30);
  dependencies:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps_.DependenciesEntry] (id: 31);
  additionalItems:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrBool (id: 32);
  definitions:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps_.DefinitionsEntry] (id: 33);
  externalDocs:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.ExternalDocumentation (id: 34);
  example:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSON (id: 35);
  nullable:bool (id: 36);
  xKubernetesPreserveUnknownFields:bool (id: 37);
  xKubernetesEmbeddedResource:bool (id: 38);
  xKubernetesIntOrString:bool (id: 39);
  xKubernetesListMapKeys:[string] (id: 40);
  xKubernetesListType:string (id: 41);
  xKubernetesMapType:string (id: 42);
  xKubernetesValidations:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.ValidationRule] (id: 43);
}

namespace apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps_;

table PropertiesEntry {
  key:string (key);
  value:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps;
}

table PatternPropertiesEntry {
  key:string (key);
  value:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps;
}

table DependenciesEntry {
  key:string (key);
  value:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrStringArray;
}

table DefinitionsEntry {
  key:string (key);
  value:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps;
}

namespace apiextensions_apiserver.pkg.apis.apiextensions.v1beta1;

table JSONSchemaPropsOrArray {
  schema:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps (id: 0);
  jSONSchemas:[apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps] (id: 1);
}

table JSONSchemaPropsOrBool {
  allows:bool (id: 0);
  schema:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps (id: 1);
}

table JSONSchemaPropsOrStringArray {
  schema:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps (id: 0);
  property:[string] (id: 1);
}

table SelectableField {
  jsonPath:string (id: 0);
}

table ServiceReference {
  namespace:string (id: 0);
  name:string (id: 1);
  path:string (id: 2);
  port:int (id: 3);
}

table ValidationRule {
  rule:string (id: 0);
  message:string (id: 1);
  messageExpression:string (id: 2);
  reason:string (id: 3);
  fieldPath:string (id: 4);
  optionalOldSelf:bool (id: 5);
}

table WebhookClientConfig {
  url:string (id: 2);
  service:apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.ServiceReference (id: 0);
  caBundle:[ubyte] (id: 1);
}

